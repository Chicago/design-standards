%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: City_Seal_blu_286.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: GR00026
%%CreationDate: 5/15/09
%%BoundingBox: 0 0 73 73
%%HiResBoundingBox: 0 0 72.7637 72.7637
%%CropBox: 0 0 72.7637 72.7637
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE 286 C)
%%CMYKCustomColor: 1 0.6600 0 0.0200 (PANTONE 286 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2009-03-23T10:24:01-05:00</xap:CreateDate>
         <xap:ModifyDate>2009-05-15T14:14:41-05:00</xap:ModifyDate>
         <xap:MetadataDate>2009-05-15T14:14:41-05:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FUs1zzP5e0G39fWdRt7CMglfWkVWanXgn2n+Sg5bjwzmaiCWE8kYi5GnnWo/wDORPlxrr6l&#xA;5Z0q/wDMV4TRFgjaNG8ONVeX/knmwh2VOrmRAfj8c3Dl2hHlAGR8kKPMP/ORGvCun6FZeX7Zz8M1&#xA;2QZR/rLIztt/xhyXhaSHORkfL8fpR4molyiI+9s/lp+cF/ym138wXslALSfo9XRQBud0NoAPemP5&#xA;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&#xA;q//Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:0EC6759B192711DEAD18870020EE03EE</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:774D25AA42CC11DEA8FFCF8CBCFB5B28</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:79B8F71EE94A11DDBC1ED978FE1C2912</stRef:instanceID>
            <stRef:documentID>uuid:79B8F71CE94A11DDBC1ED978FE1C2912</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>11.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>PANTONE 286 C</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=0 K=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>100.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=0</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>0</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 286 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>66.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>2.000000</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -72.7637 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 72.7637 li
72.7637 72.7637 li
72.7637 0 li
cp
clp
[1 0 0 1 0 0 ]ct
36.4443 62.1318 mo
50.7451 62.1318 62.2754 50.6826 62.2754 36.3818 cv
62.2754 22.0815 50.6826 10.4888 36.3818 10.4888 cv
22.0815 10.4888 10.4888 22.0815 10.4888 36.3818 cv
10.4888 50.6826 22.144 62.1318 36.4443 62.1318 cv
cp
36.3818 36.3818 mo
1.93799 36.3818 mo
1.93799 17.3594 17.3594 1.93799 36.3818 1.93799 cv
55.4043 1.93799 70.8252 17.3594 70.8252 36.3818 cv
70.8252 55.4043 55.4043 70.8252 36.3818 70.8252 cv
17.3594 70.8252 1.93799 55.4043 1.93799 36.3818 cv
cp
false sop
/0 
<<
/Name (PANTONE 286 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 1 0.66 0 0.02 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
59.3281 26.5435 mo
62.6387 33.998 61.5938 44.0664 56.6758 50.4561 cv
50.7705 58.2207 41.999 62.0732 32.3369 60.6025 cv
23.6626 59.5371 14.9106 51.9092 12.5483 43.4082 cv
9.5083 33.3013 12.916 22.8066 21.3389 16.3589 cv
27.9805 11.2085 38.3975 9.91113 46.2197 13.4351 cv
51.6797 15.7588 57.1787 20.9478 59.3281 26.5435 cv
cp
f
45.9297 13.9194 mo
45.8516 13.958 45.8711 14.0547 45.8711 14.1323 cv
46.2393 14.0742 46.7041 14.229 47.0518 14.4033 cv
47.1885 14.8872 47.5176 14.5776 47.8271 14.752 cv
48.1172 15.4297 49.1436 15.1006 49.2793 15.8745 cv
49.7051 15.8745 li
50.8672 16.6689 52.1055 17.5981 53.0547 18.6631 cv
52.9775 18.7407 li
53.1904 18.9341 li
53.249 18.876 li
53.5967 18.9536 53.8096 19.3408 54.1006 19.5732 cv
53.5391 19.4956 li
53.8096 19.2827 53.2871 18.9922 53.0547 19.0117 cv
52.8418 19.0117 li
53.0352 18.6821 52.8037 18.3145 52.4932 18.1787 cv
51.9131 18.0435 52.1641 18.7407 52.0088 19.0117 cv
51.7568 18.8955 51.583 18.6436 51.3701 18.4502 cv
51.1963 18.9341 50.4795 18.334 50.6152 19.0889 cv
50.9053 19.3408 51.3311 19.9795 51.7959 19.5732 cv
51.7188 20.7544 li
51.3506 20.6963 51.1182 20.3477 50.6729 20.4829 cv
50.6924 21.2188 49.8604 20.6187 49.7051 21.1802 cv
50.1885 21.1802 50.1504 21.7031 50.5381 21.7998 cv
50.3252 22.0127 li
50.751 22.4194 li
51.0605 22.3032 50.8857 21.9932 51.0215 21.7998 cv
51.4473 21.7998 li
51.2158 21.9932 51.0605 22.2256 51.0215 22.4971 cv
51.0801 22.7676 51.4668 22.5161 51.3701 22.8452 cv
51.1572 22.7485 50.9053 22.3613 50.6729 22.71 cv
50.5576 22.3418 49.9561 22.6128 50.1885 22.0708 cv
49.5693 21.5869 li
49.3564 21.8774 li
48.6982 21.3931 49.6465 21.4126 49.7051 20.9673 cv
49.918 21.0254 49.9961 20.8701 49.9756 20.7544 cv
49.8984 20.6187 49.7432 20.7153 49.6279 20.6768 cv
50.0537 20.6187 li
50.1113 20.522 50.0146 20.27 49.8408 20.27 cv
49.8018 20.3477 49.7051 20.3281 49.6279 20.3281 cv
49.5889 20.1733 49.8018 20.0186 49.5693 19.9219 cv
49.1631 19.9219 49.0273 20.7153 48.6592 20.1348 cv
48.582 20.3281 48.1953 20.4829 48.5244 20.6768 cv
48.834 20.6768 49.085 20.6572 49.0654 21.0254 cv
48.8916 20.6768 48.3877 20.8701 48.1758 20.8315 cv
48.0791 20.8896 48.0205 21.0059 47.8848 20.9673 cv
47.8467 20.8511 47.7881 20.7544 47.8271 20.6187 cv
47.8662 20.7349 48.001 20.6572 48.0977 20.6768 cv
48.5244 20.4058 48.1172 19.7666 48.4463 19.4375 cv
47.9043 19.8633 47.4209 18.4502 47.1299 19.4375 cv
46.5879 19.418 46.2969 19.9409 45.6582 19.8442 cv
45.9102 20.0957 46.5684 19.9219 46.7041 20.27 cv
46.626 20.27 46.5293 20.251 46.4912 20.3281 cv
46.4912 20.4058 46.4717 20.5024 46.5684 20.541 cv
46.7813 20.541 li
46.7617 20.9478 45.1348 20.8701 46.2197 21.374 cv
46.7813 21.374 li
46.8008 21.4897 46.6846 21.5288 46.626 21.5869 cv
47.2842 22.0903 47.8076 21.8193 48.582 21.7998 cv
48.6982 22.2646 49.2598 21.9741 49.6279 22.1484 cv
49.667 22.6904 49.0078 22.7485 48.7949 23.2715 cv
48.7949 23.4263 48.7559 23.6006 48.9307 23.6777 cv
49.3564 23.4648 li
49.3369 23.5811 49.4141 23.7554 49.2793 23.8135 cv
49.5508 24.2202 49.8408 23.9102 50.1885 24.104 cv
50.0918 23.5811 51.2539 23.6973 50.5381 23.1938 cv
51.0215 23.1162 li
51.1182 23.2134 50.9795 23.2422 51.1729 23.3198 cv
51.3477 23.0488 51.8926 23.5425 51.8545 23.0586 cv
52.1641 23.0391 52.9688 22.8765 52.9004 23.3291 cv
52.9473 23.3252 51.9932 23.1079 51.8545 23.4067 cv
51.6221 23.3486 51.4092 23.5811 51.2354 23.4648 cv
51.0801 23.9878 50.3154 23.6392 50.5469 24.2588 cv
50.1016 24.5688 49.376 23.9297 48.8721 23.8135 cv
48.7949 23.6777 48.7373 23.5229 48.582 23.4067 cv
48.3691 23.4067 li
48.2334 23.9683 48.834 24.4526 49.1436 24.8589 cv
49.2598 24.7427 49.4141 24.646 49.3564 24.4526 cv
49.2793 24.375 li
49.3174 24.3364 49.3564 24.2783 49.4141 24.3169 cv
49.6279 24.5107 li
49.2979 24.7236 49.0469 25.0913 48.6592 25.1494 cv
48.5625 24.8979 48.8721 24.9946 48.9307 24.8008 cv
48.8145 24.6846 48.7178 24.5298 48.5244 24.5879 cv
48.4463 24.9946 47.5361 25.1299 48.1758 25.5562 cv
47.75 25.769 li
47.8076 26.0981 48.3877 25.9629 48.3115 26.3306 cv
47.7686 27.3374 47.4004 27.0278 47.4004 27.0278 cv
46.9756 27.376 46.6924 27.7979 47.0518 28.499 cv
46.9365 28.6733 46.8975 28.8091 47.0518 28.8477 cv
47.2842 29.3511 47.5176 29.6997 47.5361 29.9512 cv
47.9238 30.0288 48.04 30.687 48.2334 30.9971 cv
48.0586 30.9971 47.9238 31.0742 47.8271 31.21 cv
47.6133 31.0938 47.6338 30.8809 47.5361 30.7256 cv
47.1885 30.9971 li
46.8203 30.9775 47.0713 30.4741 46.7041 30.5127 cv
46.5879 30.9004 46.3555 31.1714 46.626 31.5586 cv
46.5293 31.5391 46.4131 31.5776 46.4326 31.6938 cv
46.3164 31.9458 46.6064 32.0229 46.7041 32.1782 cv
46.917 32.1782 li
47.0518 32.3716 46.7813 32.5654 46.7041 32.7397 cv
47.1104 32.7012 47.2266 32.856 47.4004 33.2236 cv
47.2266 33.5723 46.7813 33.2432 46.626 33.6494 cv
46.8389 33.9399 47.0918 34.2109 47.1885 34.5596 cv
46.8389 34.3467 46.3555 34.5791 46.2783 34.9663 cv
46.3164 35.1987 46.0791 34.2197 46.3096 35.25 cv
47.5459 35.6377 li
46.5684 35.8184 li
46.2783 35.5278 li
46.2393 35.6245 47.6279 37.3501 46.2939 37.041 cv
45.8711 38.603 li
45.7354 30.1191 li
27.438 30.1191 li
27.4575 40.4072 li
26.6831 40.6587 25.7534 40.5039 24.8823 40.5425 cv
24.7661 39.6519 24.1079 38.9741 23.5654 38.2578 cv
23.585 38.1416 23.7397 38.4131 23.9141 38.3159 cv
24.708 37.1929 24.4756 35.5474 24.127 34.269 cv
23.0039 32.9526 23.7788 30.8613 22.6558 29.5449 cv
22.9268 29.1187 22.249 29.293 22.2295 28.9058 cv
22.4233 28.5381 21.7651 28.5767 21.6875 28.5571 cv
21.5713 27.7827 21.5371 26.394 20.9902 26.1948 cv
20.9902 26.2534 li
20.2739 24.9946 18.3765 24.8784 18.1245 23.4067 cv
17.9116 23.3291 li
17.8535 23.6973 18.0859 24.3555 17.6987 24.6655 cv
16.8081 24.0264 16.9629 25.8657 15.9561 25.5562 cv
15.8979 25.6338 li
15.9756 25.7495 16.1499 25.6914 16.2466 25.769 cv
16.1108 26.1177 li
14.2134 26.1177 li
14.1167 25.6724 14.6396 25.8467 14.8525 25.7109 cv
14.7559 25.5947 14.6006 25.6528 14.5039 25.5562 cv
14.6782 24.7236 15.627 25.4399 16.2466 25.2075 cv
16.3433 25.1885 16.479 25.2656 16.5176 25.1494 cv
16.5176 25.0142 li
15.9756 24.8589 15.3174 25.0142 14.7754 24.8589 cv
14.9106 24.5879 li
15.5688 24.5688 16.2661 24.646 16.8662 24.5107 cv
16.9048 24.4136 16.7695 24.375 16.7305 24.3169 cv
15.1235 24.3169 li
15.2012 24.123 15.2783 23.8135 15.5498 23.8135 cv
15.8594 23.7163 16.0142 24.2202 16.2852 24.0068 cv
16.3047 23.917 li
16.3047 23.917 16.7114 23.8232 16.6729 23.8618 cv
17.0986 23.978 17.3501 23.9297 17.7764 23.8135 cv
17.6602 23.6973 17.6602 23.8135 17.7764 23.6777 cv
15.5498 23.6196 li
15.7817 22.981 16.8081 23.3877 17.4277 23.2715 cv
17.5244 23.2324 17.6602 23.3291 17.6987 23.1938 cv
17.6987 23.0586 li
15.9561 22.981 li
15.937 22.6519 16.3433 22.7485 16.5176 22.6323 cv
16.479 22.4194 16.1108 22.3418 16.4595 22.1484 cv
18.5508 22.1484 li
18.5508 21.9355 li
17.9893 21.8193 17.3311 21.8965 16.7305 21.8774 cv
16.6919 21.7417 16.7886 21.6646 16.8662 21.5869 cv
17.4858 21.5483 17.9312 21.7031 18.4731 21.4512 cv
17.0791 21.3159 li
17.2148 20.7734 17.873 21.1802 18.2021 20.9673 cv
18.2021 20.8896 li
18.2021 20.9673 li
17.7764 20.9673 li
17.7764 20.9673 17.873 20.8701 17.9116 20.8315 cv
17.8345 20.6963 17.6797 20.7734 17.5635 20.7544 cv
17.4858 20.27 18.2021 20.6382 18.0474 20.1348 cv
18.3184 19.8057 18.9961 20.2119 19.0928 19.7861 cv
18.938 19.6504 18.6865 19.728 18.4731 19.7085 cv
18.6475 19.1855 19.2866 19.457 19.6543 19.2827 cv
19.6348 19.3604 19.6934 19.3989 19.7319 19.4375 cv
20.0801 19.2246 li
19.0347 19.0889 li
19.519 18.6631 li
19.5962 18.7407 li
19.6348 18.3726 19.9834 18.082 20.3516 18.1016 cv
20.8936 17.9468 21.6294 18.4307 21.8232 17.9658 cv
20.4287 17.8887 li
20.4287 17.6367 20.7388 17.5596 20.9131 17.4043 cv
21.6294 17.2495 22.4814 17.4238 23.2173 17.269 cv
22.5977 17.1333 21.9199 17.2305 21.2617 17.1914 cv
21.3193 16.7461 22.0747 17.1724 21.9585 16.5718 cv
22.0557 16.0879 22.9268 16.6689 22.6558 16.0879 cv
23.0815 15.5264 23.9531 16.0103 24.4756 15.6616 cv
24.2046 15.5459 23.856 15.623 23.5654 15.604 cv
23.7207 15.042 24.5532 15.5459 24.6113 14.9067 cv
24.96 14.6743 25.4053 14.4614 25.7925 14.5581 cv
25.8115 14.481 25.7534 14.4419 25.7148 14.4033 cv
25.9082 13.9775 26.8184 14.229 27.3223 14.0547 cv
27.3799 13.9385 27.2446 13.8032 27.1089 13.8613 cv
26.8379 13.8613 li
27.3994 13.6479 li
32.1431 13.6479 li
32.1816 13.7837 32.0659 13.8418 31.9883 13.9194 cv
31.2915 13.9385 30.3813 13.8613 29.626 13.9966 cv
29.626 14.0547 li
30.8848 14.1323 li
30.3037 14.5391 30.3037 15.2939 29.7036 15.7393 cv
29.7036 16.4751 30.0713 17.1528 29.8389 17.8887 cv
28.8711 18.2759 29.0645 19.3408 29.1421 20.1348 cv
29.3936 20.7544 29.5488 21.5869 30.3232 21.7998 cv
30.9233 22.8262 31.9688 23.7749 32.7627 24.5879 cv
32.7437 25.2461 31.7363 24.7622 31.2915 25.0142 cv
31.4849 25.1299 31.7559 25.0527 31.9883 25.0718 cv
31.9106 25.0913 31.7754 25.0142 31.7173 25.1494 cv
31.9106 25.2656 32.1816 25.1885 32.4146 25.2075 cv
32.1431 25.498 31.3174 25.6074 31.1426 26.1113 cv
31.8784 26.7891 32.7676 26.2329 33.731 26.4082 cv
33.9438 26.3501 33.9829 25.9565 33.9829 25.9565 cv
34.0986 25.7627 33.9243 25.6528 33.9438 25.4204 cv
35.106 25.4204 36.4609 26.021 37.6421 25.5562 cv
38.1455 25.459 38.2617 26.0015 38.7651 25.7109 cv
38.2617 25.498 li
39.5684 25.5176 39.9492 23.7944 41.2627 23.8911 cv
41.3838 24.0063 41.5537 23.6196 41.5537 23.6196 cv
41.7852 22.8838 42.083 23.4907 42.4502 23.084 cv
42.2568 23.0259 42.709 22.7358 42.4766 22.7549 cv
42.6895 22.3486 43.126 22.2314 42.5664 21.1157 cv
43.1904 20.7412 42.4961 20.2744 42.4961 20.0767 cv
42.6309 20.0571 42.2627 19.5923 42.0313 19.5151 cv
41.8955 19.2246 41.7852 19.0889 41.6885 18.7983 cv
41.6885 18.7983 41.2432 18.6631 41.6113 18.1016 cv
41.418 18.0049 41.2822 17.7725 41.3408 17.4819 cv
41.4951 17.2305 41.6885 17.5786 41.7471 17.269 cv
41.5918 17.1528 41.3604 16.8818 41.3984 16.8428 cv
41.0107 16.7656 41.0303 16.2427 40.8564 15.9521 cv
41.0107 15.6616 40.9463 16.1978 40.9854 15.5396 cv
40.9854 15.5396 41.0615 15.3574 40.8818 15.0103 cv
40.9014 14.8745 40.3916 14.7905 40.2949 14.481 cv
39.9072 14.2871 39.8115 14.6807 39.5205 14.2744 cv
39.5977 14.1001 39.4043 14.2485 39.3848 13.9966 cv
38.3198 14.2095 37.8359 13.0479 36.7319 13.3574 cv
35.8223 12.583 34.6216 14.0938 34.0215 12.8735 cv
33.7891 12.7959 33.3823 12.7188 33.189 12.9512 cv
33.1694 13.0674 33.2856 13.106 33.3823 13.0869 cv
33.5952 13.0869 li
33.3633 13.2998 32.8789 13.2222 32.5498 13.3574 cv
28.1543 13.3574 li
29.4326 12.835 31.0781 13.2417 32.4917 13.0093 cv
32.5112 12.9121 32.395 12.8735 32.3369 12.8154 cv
29.9746 12.8154 li
30.5166 12.5444 31.1943 12.6025 31.8525 12.6025 cv
31.9883 12.312 li
36.771 11.499 41.8047 12.1377 45.9297 13.9194 cv
cp
0 0 0 0 cmyk
f
32.8403 12.4668 mo
32.8403 12.3896 li
33.5952 12.3896 li
33.5952 12.4668 li
32.8403 12.4668 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
35.6865 13.5127 mo
36.4224 13.8418 37.3516 13.6479 37.9907 14.2095 cv
38.4165 14.2676 li
38.4551 14.481 38.3003 14.6938 38.5522 14.9067 cv
38.6875 14.8682 38.8618 14.9648 38.959 14.8291 cv
39.0171 14.9648 38.9009 15.0229 38.8232 15.1006 cv
39.1138 15.2554 39.2686 15.0615 39.5205 15.4487 cv
39.5586 15.3711 39.9463 15.3711 40.0049 15.604 cv
39.6758 15.8745 39.4043 15.8555 39.1719 15.604 cv
39.0361 15.4487 li
38.9009 15.604 li
38.8618 15.1196 38.5908 15.2358 38.3394 14.9648 cv
38.2036 15.1006 li
38.2231 15.0034 38.1069 14.9648 38.0684 14.9067 cv
37.855 14.8486 37.6226 15.3906 37.5068 15.4487 cv
37.1968 15.2554 37.8164 14.9648 37.4292 14.752 cv
37.4292 14.752 37.1772 14.5581 37.0225 14.3452 cv
36.8677 14.481 li
36.8291 14.3452 36.5771 14.1514 36.4609 14.0547 cv
36.4028 14.1709 36.2676 14.2485 36.3252 14.4033 cv
36.0156 14.3066 35.9961 13.958 35.6284 13.9966 cv
35.6284 13.8613 li
35.3379 13.7837 35.2026 14.1709 34.9312 13.7837 cv
34.7959 13.7837 34.7378 13.9194 34.6411 13.9966 cv
34.7764 14.4033 li
34.4282 13.7642 34.002 14.2095 33.3823 13.9966 cv
33.3047 14.0356 33.3242 14.1323 33.3242 14.2095 cv
33.0342 14.2095 li
32.8789 14.3452 33.0342 14.5391 33.1113 14.6938 cv
32.937 14.7129 32.7241 14.7715 32.6851 14.9648 cv
33.1309 15.6426 33.8276 16.2427 34.4282 16.7847 cv
34.6216 16.7075 34.7573 16.4946 34.9312 16.3589 cv
35.2026 16.6494 li
35.3188 16.3394 35.4736 16.7075 35.6284 16.4946 cv
35.8223 15.7393 li
35.9771 16.0103 li
35.9771 16.0103 36.0156 15.0034 36.1123 15.042 cv
36.3252 14.9648 li
36.3447 15.1777 36.2095 15.6426 36.519 15.5264 cv
36.5967 15.4487 li
36.6548 15.5845 36.248 16.0493 35.9771 16.3008 cv
36.1704 16.688 35.5317 17.2881 36.248 17.3462 cv
36.4609 18.1787 li
34.7358 17.7778 35.7256 20.1733 34.583 20.7544 cv
34.6411 20.793 34.6797 20.9287 34.7764 20.8896 cv
34.1763 21.2578 33.3823 21.9355 32.6274 21.6646 cv
32.4722 22.1094 32.0464 21.645 31.7944 21.5869 cv
31.9302 21.6836 32.2207 21.4321 32.4146 21.3159 cv
32.2788 20.6572 31.6592 20.0571 31.0977 19.7085 cv
31.8335 19.8442 32.356 20.9092 33.189 20.4058 cv
32.7627 20.2896 32.8594 19.8442 32.6851 19.5732 cv
31.02 18.5854 li
30.8457 18.7983 30.5361 18.7212 30.4004 19.0117 cv
30.9424 19.3604 li
30.6909 19.2246 30.2651 19.0503 30.0522 19.2246 cv
30.4004 19.3989 30.3232 19.8442 30.3232 19.8442 cv
30.207 19.7666 30.0522 19.7666 29.9746 19.9219 cv
30.2456 20.1929 li
30.168 20.2314 30.1875 20.3281 30.1875 20.4058 cv
30.9424 20.4639 30.0908 21.3545 30.9424 21.3159 cv
30.8848 21.5869 li
30.3813 21.4512 29.7808 21.2769 29.626 20.6768 cv
29.626 19.9795 29.1421 19.3989 29.4131 18.6631 cv
30.0132 18.2563 30.6523 17.5205 30.4004 16.7075 cv
30.0908 16.146 29.8975 15.4683 30.5942 15.042 cv
30.6328 14.5776 31.0396 14.4229 31.4463 14.4033 cv
32.6079 14.8682 32.5303 12.9897 33.6729 13.5708 cv
34.4282 13.2026 34.9897 14.0547 35.6865 13.5127 cv
cp
0 0 0 0 cmyk
f
40.7793 14.5581 mo
40.7793 14.481 li
40.9922 14.481 li
40.9922 14.5581 li
40.7793 14.5581 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
41.6113 14.5581 mo
41.6113 14.481 li
41.96 14.481 li
41.96 14.5581 li
41.6113 14.5581 li
cp
f
35.6997 14.9487 mo
35.8223 14.9648 li
35.8223 15.2554 li
35.7642 15.2554 li
35.6997 14.9487 li
cp
0 0 0 0 cmyk
f
25.0952 15.1006 mo
25.0952 15.042 li
25.3081 15.042 li
25.3081 15.1006 li
25.0952 15.1006 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
42.7344 15.1006 mo
42.7344 15.042 li
43.4316 15.042 li
43.4316 15.1006 li
42.7344 15.1006 li
cp
f
33.9438 16.8428 mo
34.0405 16.959 34.0215 17.1143 33.8857 17.1914 cv
34.2148 17.6172 34.8345 17.7529 34.9312 18.3145 cv
34.4282 18.1597 33.9053 17.1333 33.1113 17.1914 cv
32.6851 16.7656 32.2207 16.2041 31.6396 16.3589 cv
31.4072 16.146 30.9038 16.2427 30.8848 15.7974 cv
31.2329 15.5068 31.814 15.2163 32.2788 15.2554 cv
33.0146 15.7393 33.0342 16.6108 33.9438 16.8428 cv
cp
0 0 0 0 cmyk
f
24.8823 15.6616 mo
24.8823 15.604 li
25.1729 15.604 li
25.1729 15.6616 li
24.8823 15.6616 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
41.6885 15.7393 mo
41.6885 15.6616 li
42.1729 15.6616 li
42.1729 15.7393 li
41.6885 15.7393 li
cp
f
37.7197 16.4365 mo
37.894 16.417 37.9521 16.1074 38.2036 16.2236 cv
37.5259 16.8428 38.6299 17.4043 38.126 18.0435 cv
37.5645 18.5273 li
37.855 18.7983 38.2036 18.334 38.4746 18.1787 cv
39.249 18.8564 38.5522 19.9409 38.2617 20.6768 cv
37.8164 21.1025 37.3325 21.6255 36.6738 21.3159 cv
36.1318 21.2769 35.8608 20.6382 35.2798 20.7544 cv
35.1831 20.5024 35.396 20.27 35.6284 20.27 cv
36.0547 20.5605 36.6353 20.4639 37.0806 20.6768 cv
37.313 20.2314 38.2036 19.7666 37.9131 19.2246 cv
37.7002 19.6895 37.2354 19.999 36.9448 20.3281 cv
36.6934 20.4248 36.6738 20.1929 36.5967 20.0571 cv
36.9448 19.5342 36.4414 18.8179 37.2163 18.5854 cv
37.1582 18.5083 37.042 18.4502 37.0806 18.3145 cv
37.2354 18.3145 37.4097 18.353 37.5068 18.1787 cv
37.2935 17.9658 li
36.5107 18.6816 36.8677 17.5981 36.519 17.6948 cv
36.4414 17.4434 36.7129 17.5205 36.8096 17.4043 cv
36.6738 17.1333 li
37.042 17.2109 37.1968 16.9009 37.2935 16.6494 cv
37.0806 16.4946 li
37.042 16.6299 36.9063 16.7461 36.8096 16.8428 cv
36.4995 16.959 35.9946 17.1001 36.3838 16.4946 cv
36.3447 16.2813 36.4224 16.0879 36.5967 15.9521 cv
36.9063 15.9717 37.6401 15.3252 37.6421 15.7974 cv
37.855 15.9331 37.3325 16.2427 37.7197 16.4365 cv
cp
0 0 0 0 cmyk
f
38.7393 16.7202 mo
38.4487 16.1006 li
38.9038 15.978 li
38.7393 16.7202 li
cp
f
44.1279 16.2236 mo
44.1279 16.146 li
45.0967 16.146 li
45.0967 16.2236 li
44.1279 16.2236 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
44.6904 16.3589 mo
44.6904 16.3008 li
45.0381 16.3008 li
45.0381 16.3589 li
44.6904 16.3589 li
cp
f
41.8242 16.7847 mo
41.8242 16.7075 li
42.0957 16.7075 li
42.0957 16.7847 li
41.8242 16.7847 li
cp
f
46.084 16.7847 mo
46.084 16.7075 li
46.4912 16.7075 li
46.4912 16.7847 li
46.084 16.7847 li
cp
f
32.8984 17.7529 mo
33.5371 18.6631 li
33.3242 18.4888 32.9756 18.4111 32.7627 18.4502 cv
31.1558 17.4043 li
31.001 17.2495 31.1558 17.0562 31.2329 16.9204 cv
31.8335 17.0562 32.356 17.4434 32.8984 17.7529 cv
cp
0 0 0 0 cmyk
f
37.5068 17.4043 mo
37.4487 17.54 37.313 17.4629 37.2163 17.4819 cv
37.1001 17.3853 37.1582 17.2495 37.2935 17.1914 cv
37.5068 17.4043 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
24.127 17.269 mo
24.127 17.1914 li
24.4756 17.1914 li
24.4756 17.269 li
24.127 17.269 li
cp
f
44.5352 17.269 mo
44.5352 17.1914 li
44.9609 17.1914 li
44.9609 17.269 li
44.5352 17.269 li
cp
f
46.4326 17.269 mo
46.4326 17.1914 li
46.8389 17.1914 li
46.8389 17.269 li
46.4326 17.269 li
cp
f
39.876 18.3921 mo
40.2822 17.7529 li
40.9141 17.7529 li
39.876 18.3921 li
cp
0 0 0 0 cmyk
f
32.6274 19.0117 mo
32.2593 18.6821 31.7944 18.334 31.3687 18.3921 cv
31.2915 18.1211 30.749 18.1401 31.02 17.8306 cv
31.5625 18.1982 32.4336 18.4307 32.6274 19.0117 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
51.7959 18.4502 mo
51.7188 18.5273 li
51.4092 18.3726 51.6025 18.1787 51.6602 17.9658 cv
51.7959 18.1211 52.0479 18.2563 51.7959 18.4502 cv
cp
f
46.2783 18.0435 mo
46.2783 17.9658 li
46.9756 17.9658 li
46.9756 18.0435 li
46.2783 18.0435 li
cp
f
47.75 18.0435 mo
47.75 17.9658 li
48.582 17.9658 li
48.582 18.0435 li
47.75 18.0435 li
cp
f
49.1436 18.0435 mo
49.1436 17.9658 li
49.918 17.9658 li
49.918 18.0435 li
49.1436 18.0435 li
cp
f
24.0498 18.1016 mo
24.0498 18.0435 li
24.5337 18.0435 li
24.5337 18.1016 li
24.0498 18.1016 li
cp
f
25.3081 18.1016 mo
25.3081 18.0435 li
25.6567 18.0435 li
25.6567 18.1016 li
25.3081 18.1016 li
cp
f
40.9922 18.3921 mo
41.2822 19.418 42.0957 20.251 42.3086 21.3159 cv
42.0957 21.0449 41.9404 21.064 41.6113 21.1802 cv
41.6885 21.0835 41.8242 21.0835 41.9014 20.9673 cv
41.6309 20.7153 41.4561 20.3862 41.3408 19.9795 cv
41.2627 19.9604 41.2432 20.0186 41.2051 20.0571 cv
41.1465 19.9219 41.2627 19.8633 41.3408 19.7861 cv
41.2051 19.6504 40.7402 19.728 40.5654 19.7085 cv
40.4697 19.7471 40.3525 19.8057 40.2168 19.7861 cv
40.0049 20.1929 40.0049 20.6187 40.2168 21.0254 cv
40.3721 20.9478 40.7207 20.6187 40.7793 21.0254 cv
40.8174 21.1992 40.7012 21.4321 40.9141 21.5288 cv
41.1279 21.4512 li
40.5078 22.187 39.6943 22.458 38.959 22.9229 cv
39.1138 22.6323 li
38.1841 22.4385 li
39.0361 22.2837 38.7461 21.1025 39.5205 20.6187 cv
39.3462 20.2119 39.5654 19.1987 39.7393 18.8501 cv
40.165 18.792 40.6045 18.9727 40.8564 18.6631 cv
40.7012 18.3921 li
40.9922 18.3921 li
cp
0 0 0 0 cmyk
f
25.0176 18.6631 mo
25.0176 18.5854 li
25.3081 18.5854 li
25.3081 18.6631 li
25.0176 18.6631 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
50.9639 19.7861 mo
51.0215 19.9604 51.3125 20.1348 51.0986 20.3281 cv
50.751 19.9795 li
50.2666 20.4058 li
50.1885 20.0957 50.1113 19.5342 49.6279 19.6313 cv
49.5693 19.5732 li
49.9756 19.0889 li
50.4795 19.147 50.3828 19.999 50.9639 19.7861 cv
cp
f
52.9775 19.7085 mo
53.0586 19.7085 52.4092 19.7109 52.6289 19.147 cv
52.9424 19.2612 52.9111 19.6592 52.9775 19.7085 cv
cp
0 0 0 0 cmyk
f
43.0049 19.2827 mo
43.0049 19.3599 li
43.3545 19.3599 li
43.3545 19.2827 li
43.0049 19.2827 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
52.3574 19.6313 mo
52.2217 19.6895 52.2998 19.8247 52.2803 19.9219 cv
52.1445 19.9023 52.0674 19.5537 52.3574 19.6313 cv
cp
0 0 0 0 cmyk
f
49.0078 19.7085 mo
49.0273 19.7666 48.9697 19.8057 48.9307 19.8442 cv
48.7949 19.8442 li
48.7754 19.728 48.9111 19.6895 49.0078 19.7085 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
44.3418 19.8442 mo
44.3418 19.9214 li
44.8838 19.9214 li
44.8838 19.8442 li
44.3418 19.8442 li
cp
f
19.79 19.9219 mo
19.79 19.8442 li
20.5645 19.8442 li
20.5645 19.9219 li
19.79 19.9219 li
cp
f
22.3071 19.9219 mo
22.3071 19.8442 li
22.5781 19.8442 li
22.5781 19.9219 li
22.3071 19.9219 li
cp
f
47.8271 20.0571 mo
47.8271 20.27 li
47.6719 20.27 li
47.6719 19.9795 li
47.75 19.9604 47.7881 20.0186 47.8271 20.0571 cv
cp
0 0 0 0 cmyk
f
54.9336 20.8315 mo
55.0098 20.7734 54.5459 20.6187 54.2939 20.6768 cv
54.4482 20.6963 54.5654 20.6768 54.6426 20.541 cv
54.5068 20.0571 li
54.6807 20.2896 55.0879 20.4443 54.9336 20.8315 cv
cp
f
52.7061 20.6768 mo
52.4932 20.6768 li
52.416 20.1929 li
52.6289 20.1929 li
52.7061 20.6768 li
cp
f
53.752 20.4829 mo
53.7324 20.5605 53.752 20.6382 53.6748 20.6768 cv
53.1133 20.27 li
53.1709 20.1348 53.3066 20.2119 53.4033 20.1929 cv
53.5195 20.2896 53.5967 20.4639 53.752 20.4829 cv
cp
f
31.1558 20.6187 mo
31.02 20.3862 30.5361 20.4829 30.5942 20.27 cv
30.8267 20.27 30.9814 20.5024 31.1558 20.6187 cv
cp
f
21.0483 20.4058 mo
21.0483 20.3281 li
21.3389 20.3281 li
21.3389 20.4058 li
21.0483 20.4058 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
47.4004 20.4058 mo
47.3232 20.5024 47.3809 20.6572 47.2646 20.7544 cv
46.9551 20.6572 47.2266 20.3477 47.4004 20.4058 cv
cp
0 0 0 0 cmyk
f
52.7637 20.8315 mo
52.7637 20.7544 li
53.0547 20.7544 li
53.0547 20.8315 li
52.7637 20.8315 li
cp
f
36.5967 21.6646 mo
36.7515 21.9355 37.2163 22.3613 36.7319 22.6323 cv
36.7319 22.8452 36.4805 22.7871 36.3838 22.71 cv
35.9961 22.5356 36.0352 21.9355 35.5508 21.8774 cv
34.9121 22.6709 33.8276 22.6323 32.8403 22.71 cv
32.666 22.8647 32.5303 23.0776 32.2788 22.981 cv
31.8721 22.71 31.3237 22.0903 30.9365 21.8774 cv
31.2202 21.6577 li
32.6274 22.2837 li
35.125 21.1025 li
35.7256 21.0254 36.1514 21.3931 36.5967 21.6646 cv
cp
f
47.4004 21.3159 mo
47.4004 21.1802 li
47.75 21.3159 li
47.4004 21.3159 li
cp
f
51.0215 21.4512 mo
50.9834 21.5869 50.8477 21.4897 50.751 21.5288 cv
50.751 21.1802 li
50.8477 21.2383 51.0215 21.2964 51.0215 21.4512 cv
cp
f
55.0684 21.5869 mo
54.9912 21.5869 li
54.9912 21.374 li
55.0684 21.374 li
55.0684 21.5869 li
cp
f
19.7319 21.5869 mo
19.0928 21.5869 li
19.0928 21.4512 li
19.7319 21.4512 li
19.7319 21.5869 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
20.8354 21.4512 mo
20.8164 21.5093 20.874 21.5483 20.9131 21.5869 cv
20.3516 21.5869 li
20.3516 21.4512 li
20.8354 21.4512 li
cp
f
52.9004 21.7998 mo
51.7959 21.5869 li
52.1641 21.374 52.5898 21.374 52.9004 21.5869 cv
52.9004 21.7998 li
cp
0 0 0 0 cmyk
f
24.4756 21.5288 mo
24.4756 21.4512 li
24.8242 21.4512 li
24.8242 21.5288 li
24.4756 21.5288 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
42.29 21.627 mo
42.0771 21.7046 li
42.1729 21.5288 li
42.29 21.627 li
cp
0 0 0 0 cmyk
f
45.4453 21.5288 mo
45.4453 21.5869 li
46.3555 21.5869 li
46.3555 21.5288 li
45.4453 21.5288 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
54.2354 22.0127 mo
54.2168 21.8774 53.9844 21.7222 54.1582 21.5869 cv
54.2354 22.0127 li
cp
0 0 0 0 cmyk
f
42.1729 22.2256 mo
42.1221 22.1689 41.6143 21.9639 41.6885 21.7222 cv
41.8438 21.8965 42.1924 21.916 42.1729 22.2256 cv
cp
f
20.0029 22.0127 mo
19.2476 22.0708 li
19.2476 21.9355 li
19.4995 21.9546 19.79 21.8774 20.0029 22.0127 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
32.8403 23.9683 mo
32.6274 23.9683 li
30.8071 21.9355 li
31.6396 22.3809 32.0659 23.3486 32.8403 23.9683 cv
cp
0 0 0 0 cmyk
f
20.6421 22.0127 mo
20.6421 21.8867 li
21.2617 21.916 li
21.2617 22.0225 li
20.6421 22.0127 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
22.791 22.0127 mo
22.791 21.9355 li
23.0815 21.9355 li
23.0815 22.0127 li
22.791 22.0127 li
cp
f
40.2578 22.5371 mo
41.0498 22.0127 li
41.2451 22.0532 li
40.2578 22.5371 li
cp
0 0 0 0 cmyk
f
45.0967 22.0708 mo
45.0967 22.0127 li
45.6582 22.0127 li
45.6582 22.0708 li
45.0967 22.0708 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
51.7959 22.1484 mo
51.8154 22.2837 51.5635 22.3228 51.6602 22.4971 cv
51.4668 22.5742 51.5059 22.3809 51.4473 22.2837 cv
51.5635 22.2451 51.6416 22.0903 51.7959 22.1484 cv
cp
0 0 0 0 cmyk
f
49.2793 22.3613 mo
49.0469 22.5356 48.9307 22.8262 48.582 22.9229 cv
48.543 22.6904 48.5244 22.3809 48.4463 22.2256 cv
48.7559 22.6323 49.0078 22.0518 49.2793 22.3613 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
53.4619 22.2256 mo
53.5391 22.4194 53.249 22.3809 53.249 22.5742 cv
53.5967 22.7676 li
53.5391 22.7485 53.5 22.8066 53.4619 22.8452 cv
53.4033 23.1162 53.7324 23.0586 53.8096 23.2715 cv
53.4424 23.5615 53.5195 22.8262 53.1133 22.981 cv
53.1133 22.9033 53.3252 22.8647 53.249 22.71 cv
53.1133 22.5742 li
53.3066 22.4775 53.249 22.2256 53.4619 22.2256 cv
cp
0 0 0 0 cmyk
f
47.9629 22.71 mo
47.7109 23.0195 48.1953 23.6973 47.5361 23.5425 cv
47.1299 22.71 li
47.0332 22.7871 47.0137 22.8838 46.9756 22.981 cv
46.7813 22.7871 46.4521 22.6323 46.084 22.71 cv
46.084 22.5742 li
47.0518 22.5742 li
47.2646 22.5742 47.6133 23.1357 47.8271 22.7676 cv
47.6133 22.5742 li
47.7295 22.3999 47.9424 22.5547 47.9629 22.71 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
16.7305 22.5742 mo
16.7305 22.4971 li
18.6089 22.4971 li
18.6089 22.5742 li
16.7305 22.5742 li
cp
f
19.79 22.5742 mo
19.79 22.4971 li
20.4868 22.4971 li
20.4868 22.5742 li
19.79 22.5742 li
cp
f
23.4883 22.5742 mo
23.4883 22.4971 li
23.9141 22.4971 li
23.9141 22.5742 li
23.4883 22.5742 li
cp
f
40.4307 22.7676 mo
40.7012 22.5742 li
40.8193 22.6147 li
40.4307 22.7676 li
cp
0 0 0 0 cmyk
f
19.8672 23.1938 mo
18.6089 23.1938 li
18.6089 23.0586 li
19.8672 23.0586 li
19.8672 23.1938 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
33.0342 23.3291 mo
32.8984 23.4648 li
32.7627 23.3291 li
32.9756 23.0586 li
33.0918 23.0391 33.0146 23.2324 33.0342 23.3291 cv
cp
0 0 0 0 cmyk
f
50.4014 23.0586 mo
50.1309 23.1162 50.2852 23.5811 49.918 23.5425 cv
49.918 23.0586 li
50.4014 23.0586 li
cp
f
38.2617 23.5425 mo
40.082 23.6196 li
40.0049 23.7939 39.6553 23.9102 39.3848 23.9683 cv
38.7651 23.5811 38.126 23.8521 37.5068 23.4648 cv
37.1196 23.4648 36.519 23.4458 36.4609 23.7554 cv
37.1001 24.1426 37.7969 23.8135 38.4165 24.3169 cv
38.4165 24.375 li
37.5645 24.4526 li
37.9907 24.7236 li
37.7969 25.3623 36.8872 24.8979 36.3252 24.9365 cv
35.8608 24.8784 35.6865 24.5493 35.3379 24.2393 cv
34.9702 24.4717 35.5122 24.6655 35.4736 24.9365 cv
35.2993 24.9751 34.8345 24.3945 34.6411 24.0264 cv
35.6284 23.4844 36.771 23.1357 37.9131 23.1938 cv
38.2617 23.5425 li
cp
f
44.0508 23.1162 mo
44.0508 23.1938 li
44.3418 23.1938 li
44.3418 23.1162 li
44.0508 23.1162 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
45.5225 23.1162 mo
45.5225 23.1938 li
45.9297 23.1938 li
45.9297 23.1162 li
45.5225 23.1162 li
cp
f
46.9756 23.4067 mo
46.9365 23.5425 46.7227 23.7163 46.9756 23.8135 cv
47.4775 23.6777 li
47.6133 23.8716 47.4395 24.1812 47.75 24.3169 cv
47.9238 24.2202 48.2139 24.2007 48.3691 24.3169 cv
48.3691 24.375 li
48.1367 24.5493 47.7686 24.0845 47.6719 24.5879 cv
47.7686 24.6846 47.9424 24.5107 48.0205 24.7236 cv
47.6914 24.9946 47.5557 25.3047 47.1299 25.498 cv
46.9756 25.498 46.7813 25.5366 46.7041 25.3623 cv
46.7041 25.1108 47.2266 25.0332 46.8389 24.8589 cv
46.5098 24.9365 46.2197 25.1885 45.8711 25.0142 cv
46.1426 25.0718 46.3359 24.9365 46.4912 24.7236 cv
46.4717 24.5493 46.5488 24.3169 46.4326 24.1621 cv
46.2393 24.1621 46.3164 24.3364 46.1426 24.375 cv
45.9873 24.0459 46.4521 23.9492 46.2783 23.6196 cv
46.4717 23.4458 46.5488 23.3101 46.5684 23.1162 cv
46.7041 23.2134 46.8779 23.2324 46.9756 23.4067 cv
cp
f
20.4868 23.1938 mo
20.4868 23.1162 li
20.7773 23.1162 li
20.7773 23.1938 li
20.4868 23.1938 li
cp
f
33.9438 24.0264 mo
33.9053 24.7041 33.46 25.2075 33.5371 25.9043 cv
32.9565 25.9819 32.1948 26.1436 31.6333 26.0464 cv
31.9043 25.6401 32.4126 25.8779 33.1113 24.7236 cv
33.2661 24.3169 33.1567 23.394 33.563 23.1421 cv
33.9502 23.1035 33.8086 23.8521 33.9438 24.0264 cv
cp
0 0 0 0 cmyk
f
56.8115 23.5425 mo
56.1338 23.5811 55.165 23.9521 54.6035 24.2813 cv
54.9717 24.6104 55.959 23.7358 56.25 24.2393 cv
56.0752 24.3169 55.8232 24.3555 55.7656 24.5879 cv
56.8115 24.7236 li
56.5791 24.9561 56.9463 24.9561 57.0244 25.1494 cv
57.1211 25.2461 56.6758 25.2271 56.6758 25.4204 cv
56.9268 25.6143 57.1211 25.3433 57.3721 25.5562 cv
57.2754 25.5947 57.1396 25.498 57.082 25.6338 cv
57.3145 26.1177 57.5752 25.856 57.9629 25.7207 cv
57.75 25.5269 57.7451 25.0713 57.9336 25.0142 cv
58.8564 26.8306 li
58.1279 26.5435 li
58.2822 26.4082 li
58.1465 25.9434 57.624 26.1177 57.2949 25.9819 cv
57.043 26.4272 57.7012 26.2339 57.8564 26.4663 cv
57.9336 26.4082 57.6631 26.563 57.585 26.6016 cv
57.585 26.7563 li
58.3213 27.2407 59.5605 27.3569 59.4639 28.5571 cv
59.0762 28.2861 58.4561 27.6084 57.8564 27.376 cv
57.7217 27.5117 li
57.9922 27.8604 li
57.9727 27.8989 57.7217 27.8022 57.585 27.8022 cv
57.3721 27.9185 57.4502 28.48 57.082 28.209 cv
55.9785 27.5117 li
55.8428 27.6475 li
56.1338 28.228 57.6826 28.2476 56.9463 29.2544 cv
57.3525 29.6606 57.4307 30.2031 57.585 30.7256 cv
57.4502 30.4355 56.9658 30.2031 57.1592 29.8936 cv
57.0625 29.6221 56.9072 29.3896 56.6758 29.1963 cv
56.1533 28.9639 55.5332 28.4219 55.417 27.8604 cv
55.3008 27.5894 54.7588 27.5894 54.9912 27.2407 cv
55.417 27.1631 55.7842 27.3955 56.1133 27.2988 cv
55.9395 26.9888 55.4551 27.0664 55.1465 26.9502 cv
56.3271 26.7563 li
55.8428 26.2339 54.8174 26.873 54.4482 26.4663 cv
55.165 26.0596 56.0752 26.0981 56.8887 25.9043 cv
56.8301 25.7886 56.6953 25.8657 56.5977 25.8467 cv
56.6758 25.8467 54.9521 25.8853 54.1006 26.1177 cv
54.2939 25.6338 li
54.0615 25.4399 53.8291 25.6724 53.5967 25.7109 cv
53.5195 25.4785 54.0615 25.3237 53.6748 25.1494 cv
53.5 25.2075 53.3252 25.498 53.1133 25.2852 cv
53.2295 24.9946 53.79 24.9946 53.5391 24.6655 cv
53.3252 24.6655 li
54.1387 23.9492 54.873 23.3125 56.3271 23.4648 cv
56.8115 23.5425 li
cp
f
57.0244 23.9683 mo
57.2949 23.7554 li
57.4307 24.104 li
57.0244 23.9683 li
cp
f
18.6865 23.8135 mo
18.6865 23.7554 li
18.9575 23.7554 li
18.9575 23.8135 li
18.6865 23.8135 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
28.4448 23.8135 mo
28.4448 23.7554 li
28.7158 23.7554 li
28.7158 23.8135 li
28.4448 23.8135 li
cp
f
51.7959 24.104 mo
52.1445 24.0264 li
52.1445 24.3169 li
51.7959 24.104 li
cp
0 0 0 0 cmyk
f
52.0674 25.0718 mo
51.7959 24.8008 li
51.9697 24.5688 52.0508 24.8071 52.2637 24.73 cv
52.4766 24.7104 52.4482 24.6201 52.5645 24.4849 cv
52.5508 24.375 li
52.7637 24.1621 li
52.8037 24.4912 52.4932 24.917 52.0674 25.0718 cv
cp
f
31.8525 24.4526 mo
31.8525 24.375 li
32.2012 24.375 li
32.2012 24.4526 li
31.8525 24.4526 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
57.8564 24.8589 mo
57.7402 24.8784 57.7012 24.7427 57.585 24.8008 cv
57.585 24.4526 li
57.7217 24.5107 57.8564 24.6846 57.8564 24.8589 cv
cp
0 0 0 0 cmyk
f
34.3701 25.0142 mo
34.0796 25.0142 li
34.2925 24.5107 li
34.2925 24.7041 34.4087 24.8203 34.3701 25.0142 cv
cp
f
44.748 24.5107 mo
44.748 24.4526 li
45.0381 24.4526 li
45.0381 24.5107 li
44.748 24.5107 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
47.0518 24.5879 mo
47.0518 24.6655 li
46.8389 24.6655 li
46.8389 24.5107 li
46.917 24.5298 47.0137 24.5107 47.0518 24.5879 cv
cp
0 0 0 0 cmyk
f
19.6543 25.4204 mo
19.3833 25.498 18.9185 25.5947 18.6865 25.3623 cv
18.3569 25.2461 18.4541 24.8398 18.3379 24.5879 cv
18.7832 24.8589 19.3252 25.0332 19.6543 25.4204 cv
cp
f
51.1572 24.7236 mo
50.5176 24.5493 50.6338 25.7305 50.0537 25.2852 cv
49.7627 25.3623 li
50.0342 25.2075 49.7236 24.8979 49.918 24.9365 cv
49.8213 25.1299 50.0342 25.1299 50.1113 25.2075 cv
50.2852 25.0913 50.4014 25.2461 50.5381 25.0142 cv
50.4404 24.9365 50.4219 24.8203 50.4014 24.7236 cv
50.6924 24.6265 50.8672 24.6265 51.1572 24.7236 cv
cp
f
51.583 24.6655 mo
51.3125 24.6655 li
51.4092 24.6655 51.5059 24.4912 51.583 24.6655 cv
cp
f
18.0474 24.8589 mo
17.9116 24.8589 li
17.9893 24.6655 li
18.0669 24.7041 18.0474 24.7817 18.0474 24.8589 cv
cp
f
53.249 24.8008 mo
52.7637 25.2075 li
52.4043 25.2324 52.8223 24.4526 53.249 24.8008 cv
cp
f
16.3047 26.4663 mo
16.2852 26.0015 16.8662 25.498 17.1567 25.0142 cv
17.3115 25.5366 16.6338 26.0015 16.3047 26.4663 cv
cp
f
29.8389 25.0142 mo
29.8389 24.9365 li
30.1104 24.9365 li
30.1104 25.0142 li
29.8389 25.0142 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
50.46 25.9819 mo
50.3252 25.9819 li
50.3447 25.9238 50.3047 25.8853 50.2666 25.8467 cv
50.9639 25.0718 li
50.8857 25.4204 50.8857 25.8467 50.46 25.9819 cv
cp
0 0 0 0 cmyk
f
18.1245 25.3623 mo
18.2407 25.6528 17.9697 25.7109 17.7764 25.769 cv
17.4858 25.8657 17.6406 25.5176 17.5049 25.4204 cv
17.5439 25.1299 18.0088 24.9946 18.1245 25.3623 cv
cp
f
53.1133 25.7109 mo
53.0742 25.8657 52.8799 25.9819 52.7637 26.1177 cv
52.1445 25.8467 li
52.2803 25.4204 li
52.5713 25.498 52.8613 25.5562 53.1133 25.7109 cv
cp
f
48.8721 25.8467 mo
48.8525 25.6528 49.1826 25.6528 49.3564 25.5562 cv
49.2598 25.6724 49.1045 25.9434 48.8721 25.8467 cv
cp
f
17.292 25.7109 mo
17.3696 25.9043 17.1567 25.8467 17.0791 25.9043 cv
17.0791 25.8076 17.1953 25.6914 17.292 25.7109 cv
cp
f
43.2959 25.7109 mo
43.2959 25.6338 li
43.6445 25.6338 li
43.6445 25.7109 li
43.2959 25.7109 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
49.9756 25.7109 mo
49.918 25.9434 50.1113 26.0786 50.0537 26.3306 cv
49.0654 26.8921 li
49.1436 26.1948 li
49.4141 26.021 49.6465 25.7109 49.9756 25.7109 cv
cp
0 0 0 0 cmyk
f
19.8672 25.8467 mo
20.1968 26.4854 20.8936 26.9697 20.6421 27.8604 cv
20.603 27.8213 20.5645 27.7637 20.4868 27.8022 cv
20.3711 27.8408 20.4482 27.9766 20.4287 28.0732 cv
20.332 28.0151 20.0415 28.228 20.1387 27.8604 cv
20.061 27.8213 19.751 27.8989 19.8672 28.1509 cv
19.8672 28.4219 li
19.751 28.2861 19.8286 28.0151 19.5962 27.9961 cv
19.4609 28.0537 19.5381 28.1895 19.519 28.2861 cv
19.4995 28.1699 19.5771 28.0151 19.4414 27.9375 cv
19.3833 27.9961 li
19.3833 28.1895 19.4028 27.9375 19.3057 27.9375 cv
19.1895 28.0732 19.2671 28.3057 19.2476 28.499 cv
19.0928 27.9375 li
18.7441 27.8213 18.9575 28.3442 18.8994 28.5571 cv
18.5703 28.499 18.0088 29.0991 17.9893 28.499 cv
18.0088 28.3252 17.9697 27.9766 17.8535 28.0732 cv
17.7764 27.9961 li
17.6406 28.0928 17.7373 28.2861 17.6987 28.4219 cv
17.7568 28.2666 17.6211 28.1895 17.5635 28.0732 cv
17.3696 27.9961 17.3311 28.228 17.3501 28.3442 cv
17.4277 28.3442 li
17.4277 28.5571 li
17.3501 28.5571 li
17.3892 28.499 17.3311 28.4604 17.292 28.4219 cv
17.2148 28.4219 17.1182 28.4023 17.0791 28.499 cv
17.1567 28.499 li
17.1567 28.6929 li
17.0791 28.6929 li
17.0986 28.6348 17.0405 28.5957 17.002 28.5571 cv
16.8081 28.48 16.7695 28.7119 16.8081 28.8477 cv
16.8081 29.0415 li
16.7114 28.9639 16.75 28.6929 16.5176 28.7705 cv
16.5371 27.9766 16.4404 26.9697 16.8662 26.2534 cv
17.7373 26.021 18.9961 25.8657 19.8672 25.8467 cv
cp
f
51.9697 26.3081 mo
51.6992 26.2305 li
52.0088 26.1177 li
51.9697 26.3081 li
cp
f
47.8848 26.2534 mo
47.7295 26.3887 47.4775 26.311 47.2646 26.3306 cv
47.4004 26.292 47.6338 26.1372 47.8848 26.1948 cv
47.8848 26.2534 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
15.6074 26.2534 mo
15.5303 26.2725 15.4526 26.2534 15.4141 26.3306 cv
15.5107 26.4663 15.6851 26.3691 15.8208 26.4082 cv
15.4141 26.8535 15.8789 28.1699 14.8525 28.1509 cv
14.9688 28.2666 15.1816 28.1895 15.3364 28.209 cv
15.3364 28.5571 li
14.6782 28.6733 13.9038 28.6733 13.2456 28.5571 cv
13.3809 27.8989 14.3491 28.3828 14.8525 28.1509 cv
14.4268 27.9766 13.7681 28.209 13.4585 27.9375 cv
13.6909 27.2407 14.7944 27.8213 15.3364 27.4536 cv
13.7295 27.376 li
13.7295 27.105 li
14.291 26.9502 14.9883 27.105 15.5498 26.9502 cv
15.5498 26.8145 li
13.9424 26.7563 li
13.8843 26.563 14.0396 26.4468 14.1553 26.3306 cv
14.8525 26.021 14.9883 26.6406 15.6074 26.2534 cv
cp
0 0 0 0 cmyk
f
30.6719 26.3306 mo
30.6719 26.2534 li
31.02 26.2534 li
31.02 26.3306 li
30.6719 26.3306 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
51.2119 26.8921 mo
51.0215 26.8145 li
51.5313 26.4468 li
51.4385 26.5581 51.7891 26.8345 51.2119 26.8921 cv
cp
0 0 0 0 cmyk
f
48.7178 27.105 mo
48.6592 27.2603 48.4268 27.4922 48.3115 27.5117 cv
48.2529 27.376 48.1367 27.2793 48.0205 27.1631 cv
47.8271 27.376 li
47.9629 27.5117 li
47.8662 27.6279 47.4209 27.6665 47.5361 27.9961 cv
47.4775 27.9766 47.4395 28.0347 47.4004 28.0732 cv
47.3232 28.2666 47.5361 28.2666 47.6133 28.3442 cv
47.7109 28.228 47.8848 28.3057 47.9629 28.1509 cv
47.9629 27.9961 li
48.0791 28.0347 48.2334 27.9375 48.3115 28.0732 cv
48.2139 28.1118 48.0977 28.1118 48.0205 28.209 cv
48.0586 28.3057 47.9629 28.4409 48.0977 28.499 cv
48.1953 28.5186 47.6914 28.4023 47.8271 28.6929 cv
48.1172 28.7705 48.292 29.1382 48.6592 29.0415 cv
48.5625 29.1577 48.582 29.3125 48.7178 29.3896 cv
49.0654 29.1963 li
49.0654 29.9512 li
48.9307 29.8159 li
48.6592 30.1646 li
48.5049 29.8545 48.04 29.874 48.0977 29.4673 cv
48.1758 29.5449 li
48.4463 29.2544 li
48.3301 29.0024 48.0205 29.1577 47.8271 29.1187 cv
47.6719 28.499 46.7422 27.957 47.6133 27.376 cv
47.8271 27.1631 48.1953 26.6792 48.4463 27.1631 cv
48.5244 27.2407 li
48.8721 27.0664 48.5625 26.8921 48.6592 26.6016 cv
48.9307 26.7178 48.7178 26.9307 48.7178 27.105 cv
cp
f
54.0225 26.8921 mo
54.0615 27.0664 54.0029 27.3569 53.752 27.2407 cv
53.5967 27.1245 53.4424 26.9116 53.5967 26.7563 cv
53.752 26.7563 53.9453 26.7178 54.0225 26.8921 cv
cp
f
32.8984 26.8921 mo
32.918 26.8145 li
33.2661 26.8921 li
33.2471 26.9502 li
32.8984 26.8921 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
34.854 26.8921 mo
34.8345 27.0083 34.6216 26.9307 34.5054 26.9502 cv
34.583 26.834 34.7378 26.9116 34.854 26.8921 cv
cp
f
41.3408 26.8921 mo
41.3408 26.9502 li
41.7471 26.9502 li
41.7471 26.8921 li
41.3408 26.8921 li
cp
f
46.2783 26.8921 mo
46.2783 26.8145 li
46.8389 26.8145 li
46.8389 26.8921 li
46.2783 26.8921 li
cp
0 0 0 0 cmyk
f
29.7036 26.9502 mo
29.7036 26.8921 li
29.9746 26.8921 li
29.9746 26.9502 li
29.7036 26.9502 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
50.8477 28.5732 mo
50.4014 28.438 49.7051 28.3828 49.4922 27.9961 cv
49.667 27.5698 50.3086 27.1602 50.7539 26.9663 cv
51.2119 26.8921 50.6777 28.1528 50.8477 28.5732 cv
cp
0 0 0 0 cmyk
f
52.2383 26.7212 mo
52.3213 26.6846 52.1885 27.5894 51.1572 27.5894 cv
51.2354 27.6084 51.2734 27.5503 51.3125 27.5117 cv
51.2539 27.4341 51.1768 27.4536 51.0986 27.4536 cv
50.9639 26.9697 51.6543 27.0664 51.7891 26.7568 cv
51.8672 26.7954 52.1797 26.5854 52.2383 26.7212 cv
cp
f
21.6875 27.4536 mo
21.6875 27.376 li
21.9585 27.376 li
21.9585 27.4536 li
21.6875 27.4536 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
28.3677 27.4536 mo
28.3677 27.376 li
28.6582 27.376 li
28.6582 27.4536 li
28.3677 27.4536 li
cp
f
51.583 27.9375 mo
51.7188 28.2476 51.3506 28.209 51.2354 28.3442 cv
50.7705 28.3442 51.2539 27.9766 51.0986 27.7246 cv
51.293 27.7246 51.5635 27.686 51.583 27.9375 cv
cp
0 0 0 0 cmyk
f
54.1006 29.1187 mo
53.9453 29.1187 li
53.8877 27.9961 li
54.0615 28.3252 54.4482 28.751 54.1006 29.1187 cv
cp
f
27.3223 28.1509 mo
27.0508 28.0732 li
27.2637 28.0732 li
27.3223 28.1509 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
45.3096 28.0732 mo
45.3096 27.9961 li
45.5811 27.9961 li
45.5811 28.0732 li
45.3096 28.0732 li
cp
f
18.3379 28.4219 mo
18.1245 28.6543 18.1055 28.2666 18.1245 28.1509 cv
18.3379 28.4219 li
cp
f
53.4033 28.209 mo
53.4033 28.8477 53.1133 29.4092 53.1133 29.9512 cv
53.2871 29.6606 52.7451 28.7314 53.249 28.209 cv
53.4033 28.209 li
cp
0 0 0 0 cmyk
f
56.25 29.6802 mo
56.1719 29.8936 55.9395 29.7773 55.7656 29.8159 cv
55.4941 29.3896 55.4365 28.8091 55.2813 28.4219 cv
55.8428 28.6733 55.8623 29.293 56.25 29.6802 cv
cp
f
58.9795 29.8936 mo
58.9404 29.3315 57.6045 29.0415 58.2051 28.499 cv
58.9023 28.6543 58.7471 29.4092 58.9795 29.8936 cv
cp
f
43.7021 28.6929 mo
43.7021 28.6348 li
43.9932 28.6348 li
43.9932 28.6929 li
43.7021 28.6929 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
15.2593 28.8477 mo
15.356 29.4868 15.4141 30.145 15.6851 30.7256 cv
15.1816 32.0425 15.085 34.0757 15.8208 35.3149 cv
16.3047 35.1792 li
15.5303 36.8252 16.4209 38.645 17.4277 40.0005 cv
17.2148 40.5425 li
16.1689 40.6201 14.7559 40.2715 13.8071 40.6978 cv
14.0396 40.8721 14.4653 40.8721 14.7168 41.1816 cv
14.8721 41.1045 14.3296 41.3364 14.0781 41.2397 cv
14.1748 41.1235 14.1553 40.9878 14.02 40.8911 cv
13.2456 40.9688 li
13.1099 41.4722 13.9229 41.1235 14.02 41.5884 cv
13.8071 41.5688 13.6133 41.6074 13.4585 41.7432 cv
13.71 42.2666 14.6201 41.8594 15.1235 42.0918 cv
14.7944 42.0146 14.543 42.1885 14.291 42.2852 cv
13.8071 42.2666 13.3613 42.3242 12.9741 42.499 cv
13.0903 42.8086 13.4775 42.7881 13.8071 42.7881 cv
13.5938 42.9434 13.8652 43.1572 14.02 43.1953 cv
14.291 43.1953 li
13.8652 43.0986 12.7612 43.5049 12.897 42.5752 cv
12.897 42.2852 li
13.0903 42.2666 13.3032 42.3428 13.4585 42.2275 cv
13.3613 41.9365 12.897 41.9365 12.6836 41.6655 cv
13.168 41.5884 li
13.3613 41.0459 12.3354 41.5493 12.5483 40.8911 cv
13.3809 40.833 li
13.4775 40.6006 13.2065 40.6396 13.1099 40.5425 cv
12.4707 40.5425 li
11.8516 37.6577 11.8516 34.25 12.4707 31.3452 cv
12.645 31.1714 13.0518 31.4229 13.1099 31.1323 cv
12.5483 30.9971 li
12.6646 30.8418 12.5674 30.4741 12.897 30.5127 cv
12.8389 30.3193 12.7031 30.3389 12.7612 30.0869 cv
13.5166 29.9512 li
13.3809 29.8159 li
13.2261 29.9902 13.0132 29.6606 12.897 29.6802 cv
12.8389 29.2739 13.3032 29.603 13.4585 29.3896 cv
13.3809 29.2739 13.2261 29.3511 13.1099 29.3315 cv
13.2261 29.3125 13.3809 29.3896 13.4585 29.2544 cv
13.3613 29.1382 13.168 29.2153 13.0322 29.1963 cv
13.168 28.8477 li
15.2593 28.8477 li
cp
0 0 0 0 cmyk
f
21.7456 29.1187 mo
21.5327 29.3315 21.8618 29.7964 22.0361 30.0869 cv
22.1719 30.0869 li
22.2686 29.7964 22.0361 29.4673 21.8813 29.1963 cv
22.4233 29.8936 22.8491 30.6289 22.8687 31.5586 cv
22.7329 31.4614 22.8687 31.1323 22.5781 31.21 cv
22.5781 31.6357 li
22.5396 31.5391 22.4619 31.5586 22.3848 31.5586 cv
22.249 31.6938 22.3267 31.9263 22.3071 32.1201 cv
22.3071 31.9844 li
22.249 31.8877 22.0166 31.9648 22.0361 32.1201 cv
22.0361 32.333 li
21.3779 31.4229 20.5645 30.4741 19.7319 29.603 cv
19.7319 29.3315 li
20.4097 29.2544 21.126 28.8672 21.7456 29.1187 cv
cp
f
58.6895 30.4355 mo
57.7217 29.1963 li
58.0508 29.603 58.7666 29.8545 58.6895 30.4355 cv
cp
f
13.6714 29.2544 mo
13.6714 29.1963 li
14.0781 29.1963 li
14.0781 29.2544 li
13.6714 29.2544 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
13.6714 29.3896 mo
13.6714 29.3315 li
14.1553 29.3315 li
14.1553 29.3896 li
13.6714 29.3896 li
cp
f
18.9575 29.4673 mo
19.1895 30.4355 18.5703 31.2485 18.6865 32.2554 cv
18.3379 32.604 li
18.4731 32.8169 18.8218 32.7397 18.6865 33.0879 cv
18.396 33.0107 18.3765 32.9912 18.1245 33.0303 cv
17.9893 33.2432 18.0859 33.5332 18.0474 33.7852 cv
17.9312 33.5913 18.0278 33.127 17.6987 33.0303 cv
17.4473 33.2622 17.6211 33.6689 17.5635 33.998 cv
17.6021 33.6494 17.5244 33.3594 17.3501 33.0879 cv
16.7695 33.1851 17.3115 33.7466 17.1567 34.1338 cv
17.0405 33.7271 17.1182 33.146 16.8081 32.875 cv
16.6533 33.0303 li
16.6533 32.1006 16.6143 30.939 17.1567 30.0869 cv
17.4858 29.8936 17.8926 29.9126 18.2603 29.8159 cv
18.5117 29.874 18.6475 29.3896 18.9575 29.4673 cv
cp
0 0 0 0 cmyk
f
49.9756 30.5127 mo
50.1113 30.5127 li
50.0537 30.9971 li
49.9961 30.7256 49.8984 30.4546 49.7051 30.2417 cv
49.3564 30.5127 li
49.2598 30.4546 49.1436 30.2612 49.1436 30.0869 cv
49.4922 30.3389 49.4922 29.7964 49.7627 29.6802 cv
49.7432 29.9902 49.8018 30.2808 49.9756 30.5127 cv
cp
f
50.4014 30.0869 mo
50.1885 30.2998 li
50.3252 29.6802 li
50.3447 29.8159 50.5762 29.9512 50.4014 30.0869 cv
cp
f
52.7061 30.1646 mo
52.3574 30.1646 li
52.416 30.145 52.5127 29.874 52.7061 29.9512 cv
52.7061 30.1646 li
cp
f
13.8652 30.4355 mo
13.8652 30.3774 li
14.2134 30.3774 li
14.2134 30.4355 li
13.8652 30.4355 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
55.1465 30.6484 mo
55.0684 30.8809 55.5137 31.3066 55.2813 31.5586 cv
55.126 31.5586 55.1133 31.584 55.0166 31.7588 cv
55.0361 32.0488 55.5918 31.8296 55.7266 31.9844 cv
55.8428 32.4688 li
55.8232 32.5845 55.4756 32.3521 55.5518 32.6816 cv
55.6885 32.8169 li
55.2041 32.8169 li
55.2813 32.875 li
55.2627 33.0107 55.0713 32.8462 55.168 33.1172 cv
55.4775 33.5044 55.9209 33.3203 55.9785 33.9204 cv
55.2813 33.4365 li
54.8936 33.7271 55.7656 34.3076 55.0684 34.4238 cv
54.8076 34.9985 li
54.6523 34.8242 54.8076 34.1694 54.9043 33.9561 cv
54.7646 32.8462 li
54.668 32.8848 54.7197 32.7397 54.7197 32.8169 cv
54.7393 32.7397 54.6172 32.9624 54.5771 32.9233 cv
54.2168 32.9492 li
54.1006 32.6006 54.5908 32.3198 54.3779 31.9521 cv
54.0098 31.7261 li
53.8936 31.2036 54.583 31.2349 54.6426 30.7256 cv
54.6426 30.4355 li
54.8555 30.3965 55.0098 30.4937 55.1465 30.6484 cv
cp
0 0 0 0 cmyk
f
44.958 31.1714 mo
28.1514 31.1714 li
28.1514 30.8613 li
44.958 30.8613 li
44.958 31.1714 li
cp
f
49.3564 32.0425 mo
49.4141 31.9844 li
49.667 32.5654 49.2793 33.2236 49.2207 33.8628 cv
48.9883 33.7271 48.834 33.1851 48.5244 33.3013 cv
48.5244 33.6494 li
48.2334 32.875 li
48.5049 32.8169 48.7178 33.3203 48.9307 32.9526 cv
48.9111 32.6816 48.7559 32.4492 48.5244 32.2554 cv
48.4268 32.2749 48.292 32.1973 48.2334 32.333 cv
48.0977 31.7715 li
48.2529 31.6748 48.4658 31.6938 48.582 31.481 cv
48.582 30.939 li
48.4658 31.5972 49.4531 31.4229 49.3564 32.0425 cv
cp
f
14.291 31.1323 mo
14.2134 31.1519 14.1167 31.1323 14.0781 31.21 cv
14.1553 31.2876 li
14.1553 31.3452 li
13.7295 31.3452 li
13.7295 31.2876 li
13.8262 31.2485 13.9619 31.3452 14.02 31.21 cv
13.7295 31.1323 li
14.291 31.1323 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
15.1235 31.2876 mo
14.9106 31.2876 li
14.9106 31.1323 li
15.1235 31.1323 li
15.1235 31.2876 li
cp
f
20.3516 32.8169 mo
20.2935 32.9912 20.0801 33.0493 19.8672 33.0303 cv
19.79 32.333 19.7319 31.9072 19.6543 31.21 cv
20.3516 32.8169 li
cp
0 0 0 0 cmyk
f
58.1377 31.8359 mo
58.0596 31.5454 li
58.3799 31.4131 li
58.1377 31.8359 li
cp
f
47.3232 31.6357 mo
47.3809 31.791 47.2461 31.8682 47.1885 31.9844 cv
47.0518 31.5586 li
47.3232 31.6357 li
cp
f
50.5957 34.853 mo
50.499 34.8921 50.3154 35.0664 50.2373 35.0083 cv
50.5664 34.563 51.0166 30.9604 51.5576 30.687 cv
51.7314 31.3647 50.499 34.2144 50.5957 34.853 cv
cp
f
12.9741 31.6938 mo
12.9741 31.6357 li
13.2456 31.6357 li
13.2456 31.6938 li
12.9741 31.6938 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
59.251 31.9844 mo
59.0762 32.0811 59.0957 32.2554 59.1152 32.3911 cv
59.8125 32.4688 li
59.8125 32.604 li
59.541 32.5654 59.3672 32.5264 59.1729 32.7397 cv
59.3281 32.856 59.1729 33.1074 59.3281 33.2236 cv
59.1729 33.2236 li
59.2119 32.8364 59.1729 32.4106 58.7666 32.2554 cv
58.8525 32.2339 59.1104 31.8252 59.1152 31.8296 cv
59.251 31.9844 li
cp
0 0 0 0 cmyk
f
56.8887 32.0425 mo
56.8115 32.0425 56.7139 32.062 56.6758 31.9844 cv
56.8887 31.9072 li
56.8887 32.0425 li
cp
f
57.5078 31.9844 mo
57.585 32.1782 57.3916 32.1201 57.2949 32.1782 cv
57.2373 32.1782 li
57.2559 32.1006 57.4883 32.062 57.5078 31.9844 cv
cp
f
22.2295 34.6953 mo
21.3389 32.1201 li
21.7456 32.9331 22.7139 33.6885 22.2295 34.6953 cv
cp
f
17.8535 32.5264 mo
17.6987 32.5264 li
17.6602 32.3716 17.7764 32.2363 17.8535 32.1782 cv
17.8535 32.5264 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
56.4629 32.8169 mo
56.3848 32.3911 li
56.4629 32.604 li
56.4629 32.8169 li
cp
0 0 0 0 cmyk
f
58.4756 32.7397 mo
58.6309 32.7588 58.3018 32.6816 58.2822 32.8169 cv
58.1279 32.3911 li
58.4756 32.7397 li
cp
f
17.292 32.6816 mo
17.2148 32.4688 li
17.3501 32.4688 li
17.292 32.6816 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
21.8232 36.0117 mo
20.7773 32.4688 li
21.9585 35.1792 li
21.8232 36.0117 li
cp
0 0 0 0 cmyk
f
22.9268 33.2236 mo
22.8105 33.3594 22.6172 33.2817 22.4424 33.3013 cv
22.4424 33.0303 li
22.5977 33.1074 22.791 33.1074 22.9268 33.2236 cv
cp
f
20.5645 33.4365 mo
20.4868 33.6304 20.1968 33.6304 20.0029 33.7271 cv
19.9448 33.6494 li
20.0415 33.4756 20.3516 33.3013 20.5645 33.4365 cv
cp
f
58.6309 33.3784 mo
58.3213 33.5527 58.3213 33.8237 58.2822 34.1338 cv
57.8955 34.1724 58.2051 34.6758 57.7217 34.4824 cv
57.9922 34.2109 li
57.7217 33.9204 li
57.8564 33.9595 57.9541 34.1338 58.1279 34.0757 cv
58.2822 33.9204 li
57.9336 33.6494 li
57.9922 33.3013 58.3604 33.3784 58.6309 33.3784 cv
cp
f
48.0205 33.4365 mo
47.9629 33.6494 47.8467 33.9204 47.6133 33.998 cv
47.8271 34.2305 48.0586 34.3662 48.0205 34.7725 cv
47.8271 34.9663 li
48.0205 34.2886 47.207 34.3853 47.3232 33.7271 cv
47.4775 33.7075 47.6719 33.7466 47.75 33.5723 cv
47.6719 33.4365 li
48.0205 33.4365 li
cp
f
23.7788 37.0571 mo
23.7012 37.3286 23.9531 36.3989 23.5654 36.5732 cv
23.2754 37.5605 li
23.3721 37.3091 23.4492 36.9023 23.2173 36.709 cv
22.9268 36.8057 23.0815 37.1929 22.9268 37.4058 cv
23.0234 36.3218 23.314 35.3149 23.4883 34.269 cv
23.3525 34.1338 li
23.0039 35.0439 li
22.8105 34.8696 22.8105 34.2109 22.7329 33.7852 cv
23.1396 33.7271 23.6626 33.5527 23.7788 34.1338 cv
24.0884 35.063 24.0884 36.1279 23.7788 37.0571 cv
cp
f
20.7002 33.998 mo
21.0483 34.8696 21.4746 35.6826 21.397 36.709 cv
21.2422 36.5732 21.4165 36.3022 21.2617 36.167 cv
21.1841 36.0313 21.0679 36.186 20.9902 36.2246 cv
20.9902 36.3604 li
20.5449 35.7021 20.0996 35.0439 20.0801 34.2109 cv
20.2354 33.998 20.4678 34.0176 20.7002 33.998 cv
cp
f
60.374 34.3467 mo
60.0059 34.6177 59.7539 34.1528 59.3857 34.2109 cv
59.5986 34.1919 59.8125 33.9595 60.0254 34.1338 cv
60.0635 34.2886 60.1992 34.4048 60.374 34.3467 cv
cp
f
49.0078 34.8306 mo
49.0469 34.6372 48.7559 34.5015 48.9307 34.3467 cv
49.1436 34.1338 li
49.2012 34.4048 49.0469 34.5986 49.0078 34.8306 cv
cp
f
58.8252 34.6953 mo
58.7275 34.6177 58.4756 34.5986 58.5537 34.4238 cv
58.9795 34.2109 li
59.0186 34.4048 58.9023 34.54 58.8252 34.6953 cv
cp
f
18.1245 38.0449 mo
17.8535 38.0449 li
17.8535 38.2578 li
17.5049 37.6963 17.6987 36.7861 17.1567 36.4375 cv
17.2148 35.9536 17.2729 35.3535 17.6406 35.1211 cv
17.7183 34.9082 18.1055 34.8306 18.3379 34.6953 cv
19.0347 34.7725 li
18.1245 38.0449 li
cp
f
48.7949 35.5278 mo
48.3496 35.373 48.6396 35.0439 48.6592 34.6953 cv
48.3115 35.3149 49.3564 34.9082 48.7949 35.5278 cv
cp
f
60.374 34.8306 mo
60.374 34.9663 li
60.1416 35.0439 59.9473 34.8887 59.8701 34.6953 cv
60.0439 34.7339 60.1992 35.0049 60.374 34.8306 cv
cp
f
22.6558 36.2246 mo
22.5781 34.9082 li
22.7329 35.8765 li
22.6558 36.2246 li
cp
f
57.7217 34.9663 mo
57.7217 35.063 57.585 35.1021 57.5078 35.1211 cv
57.5078 34.9663 li
57.7217 34.9663 li
cp
f
59.251 35.1792 mo
59.1348 35.3149 58.9219 35.2373 58.7666 35.2568 cv
58.7666 35.1211 li
59.251 35.1792 li
cp
f
50.6729 35.6055 mo
50.4189 36.0107 50.1309 35.4502 49.918 35.7407 cv
50.2666 35.5474 49.6455 35.0425 50.6729 35.2568 cv
50.6729 35.6055 li
cp
f
60.374 35.8765 mo
60.1602 35.9731 59.9473 35.4116 59.7354 35.8184 cv
59.4248 35.5278 59.5029 35.5474 59.3857 35.1792 cv
59.7539 35.334 60.084 35.6826 60.374 35.8765 cv
cp
f
56.0918 36.0601 mo
55.7627 36.1572 55.0684 35.9536 54.8174 35.8379 cv
54.7393 35.915 54.4873 35.9346 54.6426 36.0117 cv
54.8555 36.2246 li
54.6035 35.8379 54.2588 36.6992 54.0254 36.1958 cv
53.9873 36.6216 53.5059 36.6895 53.2168 36.9023 cv
53.1768 36.6313 52.6875 35.8379 52.9775 35.6055 cv
53.5391 35.7217 53.8682 35.334 54.3711 35.3149 cv
54.7002 35.6631 55.7041 35.8276 56.0918 36.0601 cv
cp
f
49.918 36.3604 mo
50.3447 36.5347 50.6338 35.5474 50.9639 36.3022 cv
50.6338 36.8252 51.1768 37.2896 51.583 37.4834 cv
50.3252 37.832 li
50.3252 38.064 50.5762 38.2383 50.751 38.3159 cv
51.7959 38.3936 li
51.7383 38.6064 51.2734 38.7998 51.6602 39.0132 cv
51.5059 39.1289 51.0215 39.0322 51.0215 39.3618 cv
51.6602 39.9619 52.416 39.6519 53.1904 39.9229 cv
53.2871 40.2715 52.2217 40.3105 52.9004 40.833 cv
52.8799 40.9688 52.7451 41.0459 52.7061 41.1816 cv
52.7842 41.2588 52.8418 41.356 52.9775 41.3174 cv
53.1133 41.1816 li
52.7061 42.0146 53.7715 43.0215 53.5967 44.0283 cv
54.1006 44.2607 54.0811 44.8213 54.1582 45.2871 cv
53.8877 45.5771 li
53.9258 45.751 54.1973 45.9639 54.3711 45.7705 cv
54.8174 46.1387 54.7588 46.6035 55.2041 46.9717 cv
55.3203 47.707 55.0293 48.2686 54.9336 48.9072 cv
55.3389 48.9658 55.3975 49.3135 55.3389 49.6816 cv
55.126 49.9336 54.6807 49.7588 54.584 50.1084 cv
54.0225 50.0303 li
54.4678 49.0625 54.1777 47.959 54.1582 46.8936 cv
54.2744 46.9131 54.3135 46.7773 54.4482 46.8164 cv
54.4678 46.3711 53.8682 46.1768 53.8877 45.6357 cv
52.8613 44.2793 52.4736 42.6533 52.0674 41.0459 cv
52.2021 40.833 li
52.3574 40.8135 52.377 41.0654 52.5508 40.9688 cv
52.6875 40.8911 52.6094 40.7363 52.6289 40.6201 cv
52.2021 40.1553 51.7383 40.562 51.1572 40.4072 cv
51.1572 40.3491 li
50.6543 40.1553 50.1689 39.7876 49.7051 39.6519 cv
49.6855 39.9229 49.2207 39.4585 49.2793 39.71 cv
49.2207 39.6133 49.1436 39.439 49.0078 39.439 cv
48.8721 39.5356 48.9502 39.71 48.9307 39.8457 cv
49.0078 39.3423 48.4854 39.3618 48.3115 39.0132 cv
48.2334 39.0903 li
48.0205 38.1611 48.5625 37.2124 48.7949 36.3022 cv
49.2793 35.5278 li
49.3955 35.8569 49.5693 36.2056 49.918 36.3604 cv
cp
f
54.5615 35.8345 mo
54.5029 35.9116 54.2646 35.9893 54.1875 35.9893 cv
54.2354 35.6055 li
54.5615 35.8345 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
51.1572 36.0117 mo
51.1572 36.0894 li
50.8857 35.8184 li
51.0029 35.7988 51.0801 35.9536 51.1572 36.0117 cv
cp
0 0 0 0 cmyk
f
52.8418 36.5732 mo
52.8037 36.8442 52.4932 37.0767 52.2803 37.2124 cv
51.8545 37.3867 51.9844 36.6885 51.3701 36.8638 cv
51.1963 36.5151 51.3701 35.9731 51.7959 35.8184 cv
52.3379 35.8569 52.8613 35.8955 52.8418 36.5732 cv
cp
f
53.7715 36.0762 mo
53.79 36.1538 53.6201 36.4023 53.5801 36.4409 cv
53.4619 35.8184 li
53.6553 35.7217 53.7129 35.999 53.7715 36.0762 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
19.6543 37.4834 mo
19.5381 37.3477 19.6348 37.0767 19.3833 37.0571 cv
19.3833 38.103 li
18.8799 37.4058 19.2671 36.6118 19.4414 35.8765 cv
19.6543 37.4834 li
cp
0 0 0 0 cmyk
f
48.582 35.8765 mo
48.582 35.9922 48.4072 36.1084 48.3691 36.167 cv
48.3115 36.0894 48.3877 35.7988 48.582 35.8765 cv
cp
f
59.1152 35.9536 mo
59.0576 36.0698 58.8633 36.1084 58.6895 36.0894 cv
58.6895 35.8765 li
59.1152 35.9536 li
cp
f
29.21 46.2617 mo
28.8999 46.2617 28.3677 45.5576 28.2319 45.1504 cv
28.1543 35.9536 li
29.1421 35.9536 li
29.21 46.2617 li
cp
f
31.9302 47.3193 mo
31.8164 47.3799 30.9927 47.1602 30.8301 47 cv
30.8071 35.9536 li
31.9883 35.9536 li
31.9302 47.3193 li
cp
f
34.77 35.9697 mo
34.9458 36.9463 34.1069 36.4624 33.8857 36.9219 cv
33.5923 37.0991 li
33.5952 35.9536 li
34.77 35.9697 li
cp
f
40.7012 37.9673 mo
41.0293 38.9312 40.4111 38.7422 40.082 38.8774 cv
40.1396 38.6841 39.9854 38.5869 39.8682 38.4517 cv
39.4619 38.374 39.7139 39.0518 39.249 38.7998 cv
39.2686 38.7422 39.2104 38.7031 39.1719 38.6646 cv
38.8813 38.5869 39.0361 38.916 38.9009 39.0132 cv
38.2422 38.9937 37.3906 38.7612 36.9448 38.9551 cv
37.0225 38.8584 37.1196 38.7998 37.0806 38.6646 cv
36.771 38.5483 36.3252 39.187 36.0352 38.7422 cv
35.396 39.5552 34.9897 37.9868 34.4282 39.0132 cv
34.0215 38.6064 33.2148 39.3906 32.8853 38.9453 cv
32.9629 38.8677 33.2759 38.7549 33.2178 38.4839 cv
32.6948 38.3096 li
32.8887 38.0576 32.5093 37.8662 33.5952 37.4834 cv
34.2539 36.7671 35.1411 36.6699 36.0317 36.6699 cv
36.8335 36.2852 37.6616 36.6118 38.5522 36.6509 cv
38.6685 36.6895 38.7461 36.8442 38.9009 36.7861 cv
39.0098 36.5864 40.7256 37.9907 40.7012 37.9673 cv
cp
f
42.6631 47 mo
42.4111 47.0381 41.7119 47.2588 41.4404 47.2383 cv
41.4756 36.0117 li
42.6055 36.0117 li
42.6631 47 li
cp
f
45.0381 44.5889 mo
44.9805 45.2676 44.5156 45.9385 44.0898 46.4609 cv
44.0898 36.0117 li
45.0381 36.0117 li
45.0381 44.5889 li
cp
f
22.3848 37.4834 mo
22.1719 37.4834 li
22.2295 36.0894 li
22.2876 36.5537 22.7524 37.0186 22.3848 37.4834 cv
cp
f
48.0977 37.0571 mo
48.1758 37.0767 li
48.0205 37.7739 li
47.9629 37.7544 li
48.0977 37.0571 li
cp
f
49.918 37.9673 mo
50.0918 38.3159 50.7119 38.374 50.46 38.7998 cv
49.8604 38.4131 49.2012 37.793 49.0654 37.0571 cv
49.4141 37.2124 49.6279 37.6768 49.918 37.9673 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
23.7788 39.3037 mo
23.4883 38.7998 22.6558 39.2065 22.6558 38.4517 cv
22.7329 38.0449 li
23.1978 38.3159 23.4302 38.8584 23.7788 39.3037 cv
cp
0 0 0 0 cmyk
f
59.3857 38.3159 mo
59.3477 38.3545 59.3086 38.4131 59.251 38.3936 cv
59.1729 38.3936 li
59.1729 38.103 li
59.251 38.103 li
59.2314 38.2192 59.3477 38.2578 59.3857 38.3159 cv
cp
f
53.9131 39.4648 mo
54.3643 39.5811 li
53.9971 40.2588 li
52.293 37.8384 li
52.5576 37.7417 li
53.9131 39.4648 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
47.8271 38.3936 mo
47.8076 38.4707 47.8662 38.7612 47.75 38.8774 cv
47.6133 38.7227 47.2646 38.2192 47.8271 38.3936 cv
cp
0 0 0 0 cmyk
f
38.6104 38.6064 mo
38.6104 38.6841 38.6299 38.7612 38.5522 38.7998 cv
38.4165 38.7998 li
38.4165 38.5288 li
38.4941 38.5288 38.5713 38.5098 38.6104 38.6064 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
21.8232 38.6646 mo
21.7261 38.916 21.3584 39.0518 21.0483 39.0903 cv
20.9131 38.7808 21.4746 38.5869 21.8232 38.6646 cv
cp
0 0 0 0 cmyk
f
46.0068 39.6519 mo
45.9297 39.6519 li
45.8711 40.0586 li
45.8711 38.6484 li
47.2891 38.6484 45.5811 39.3423 46.0068 39.6519 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
20.4287 39.3618 mo
20.3711 39.4971 20.2354 39.4194 20.1387 39.439 cv
20.0996 39.3037 19.8867 39.1289 20.1387 39.0132 cv
20.4678 38.8774 20.332 39.2261 20.4287 39.3618 cv
cp
0 0 0 0 cmyk
f
19.3833 39.5747 mo
19.3057 39.9038 18.7251 40.0781 18.396 40.1362 cv
18.2407 39.478 19.0156 39.5747 19.3057 39.3037 cv
19.3833 39.5747 li
cp
f
60.2188 39.3037 mo
60.2188 39.3809 60.2383 39.4585 60.1602 39.4971 cv
60.0254 39.4971 li
60.0254 39.3037 li
60.2188 39.3037 li
cp
f
23.1396 39.5747 mo
23.1396 39.7876 li
22.7329 39.7876 li
22.7329 39.4971 li
22.8687 39.5356 23.043 39.439 23.1396 39.5747 cv
cp
f
34.77 39.6519 mo
35.4941 39.8506 34.6797 43.0088 34.6797 43.0088 cv
33.6987 45.0771 li
33.731 39.6519 li
33.9634 39.3423 34.2446 39.5078 34.77 39.6519 cv
cp
f
36.6738 39.5747 mo
36.4028 39.9424 36.5386 40.2715 36.5967 40.6978 cv
36.9258 40.9878 36.7515 41.8594 37.4292 41.5303 cv
37.1001 41.8975 37.4487 42.3242 37.5068 42.7119 cv
37.855 43.0596 li
38.0293 44.1631 38.3198 45.2285 38.4746 46.332 cv
38.3394 46.332 li
37.9712 45.6543 38.2617 44.6865 37.7778 44.0283 cv
37.5068 44.3184 li
37.5068 45.0342 37.8359 45.7129 37.7197 46.4092 cv
37.1196 45.4033 37.7583 43.9502 37.1582 42.9824 cv
37.313 42.7305 37.1582 42.4404 37.0225 42.2275 cv
36.9448 42.2852 li
36.7319 41.9365 li
36.4609 42.0342 36.2676 42.3828 36.4609 42.6338 cv
36.7319 42.7119 li
36.8291 43.4082 36.4995 44.3955 37.0225 44.8027 cv
36.9448 46.4092 li
36.8096 46.0996 36.9839 45.5576 36.519 45.5 cv
36.3252 45.6934 36.3447 45.9639 36.248 46.1963 cv
36.1123 46.0615 li
36.0156 45.1904 36.5771 44.5313 36.3252 43.6797 cv
35.7832 44.2988 35.9961 45.5 35.125 45.8486 cv
35.5508 44.8994 35.667 43.8154 36.248 42.9248 cv
36.0352 42.7119 li
35.3574 43.6602 35.0283 44.7637 34.6411 45.8486 cv
34.5249 45.751 34.6025 45.5771 34.4282 45.5 cv
34.2344 45.7129 li
34.6411 44.5889 li
34.7764 44.7256 li
34.7534 44.7568 35.3506 43.4717 35.3604 43.4277 cv
35.3379 43.1953 li
35.0605 43.3926 li
35.2734 42.3857 36.1704 41.4912 35.7642 40.4072 cv
35.8027 39.9619 36.1704 39.5356 36.6738 39.5747 cv
cp
f
23.9722 39.71 mo
23.7979 39.71 23.6816 39.8262 23.4883 39.7876 cv
23.585 39.7295 23.856 39.6133 23.9722 39.71 cv
cp
f
39.8115 43.4082 mo
39.4229 42.4014 38.1406 41.4644 38.7651 39.978 cv
39.0752 39.9976 39.5586 40.0781 39.7334 39.7876 cv
39.8115 43.4082 li
cp
f
49.1436 42.7881 mo
48.582 42.7881 li
48.4463 42.9824 48.7949 43.1572 48.9307 43.3311 cv
48.6787 43.4854 48.1758 43.583 48.3691 43.9697 cv
49.0273 44.5889 48.834 45.3057 49.4922 45.9258 cv
49.6855 46.3125 49.9961 46.7578 49.7627 47.2422 cv
49.7051 46.4287 48.7754 46.3125 48.7178 45.5 cv
48.4463 45.2871 li
48.5244 46.3711 49.3369 47.3389 49.7627 48.3652 cv
47.8848 47.8418 48.5625 45.6738 47.8271 44.376 cv
48.0791 44.0283 47.4209 43.7178 47.3232 43.3311 cv
47.459 42.1104 47.5947 40.8911 48.0205 39.7876 cv
48.4854 40.7559 48.5049 41.8975 49.1436 42.7881 cv
cp
f
56.9463 39.8457 mo
56.8857 39.9058 56.5615 40.1899 56.5977 39.7876 cv
56.7139 39.8071 56.8691 39.7295 56.9463 39.8457 cv
cp
f
58.9023 40.1943 mo
58.6123 40.2134 58.6895 40.6396 58.4756 40.6201 cv
58.2051 39.9229 li
58.5146 39.8071 58.7275 40.1167 58.9023 40.1943 cv
cp
f
24.2627 40.4072 mo
23.8364 40.4844 23.1011 40.5815 22.6558 40.3491 cv
23.1978 40.3687 23.7207 40.6006 24.2627 40.4072 cv
cp
f
36.519 41.1816 mo
36.4414 41.2979 36.3252 41.3364 36.1704 41.3174 cv
36.0156 41.0654 36.1704 40.6978 36.3252 40.5425 cv
36.5386 40.6978 36.3838 41.0073 36.519 41.1816 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
46.8359 41.7046 mo
46.4297 41.6465 45.9873 42.1689 46.084 42.3633 cv
46.4131 42.6143 46.665 42.4209 46.9756 42.7119 cv
47.0518 42.6338 li
47.0137 43.2148 47.0918 43.7568 47.2646 44.2412 cv
46.917 44.1826 46.9551 43.6602 46.5684 43.7568 cv
46.4521 43.834 46.5293 44.125 46.2783 44.0283 cv
46.4717 44.3379 45.833 44.7637 46.4326 44.8799 cv
46.375 44.9961 46.4912 45.0742 46.5684 45.1504 cv
46.9551 44.8418 46.7813 45.4219 47.1299 45.4219 cv
47.3232 45.1504 li
47.3232 45.5576 47.9814 45.1904 47.75 45.7129 cv
47.4004 45.751 47.1299 45.9258 46.917 45.7129 cv
46.6064 45.8486 46.5879 45.3447 46.2197 45.4219 cv
45.8711 45.7705 46.0654 46.0801 46.0068 46.5449 cv
45.7744 46.5645 45.5225 46.3711 45.3877 46.6807 cv
45.3486 46.8936 45.5811 47.0293 45.7354 47.1064 cv
46.084 47.1064 li
45.9482 47.3389 45.9873 47.4746 46.084 47.7256 cv
46.1426 47.9199 46.4326 47.8232 46.3555 48.0752 cv
45.7354 47.2422 li
45.5225 47.6875 45.3096 47.2617 45.0381 47.5127 cv
44.9219 47.4746 44.8252 47.4355 44.6904 47.4551 cv
44.5732 47.8232 44.3799 47.3008 44.3418 47.4551 cv
44.5156 46.9326 45.0586 46.5449 45.3096 46.0615 cv
46.3359 44.5693 45.6943 41.9463 45.8877 40.1069 cv
45.9844 40.5718 46.2939 41.5493 46.8359 41.7046 cv
cp
0 0 0 0 cmyk
f
24.3984 40.833 mo
22.7329 40.7559 li
23.2754 40.7749 23.8364 41.0073 24.3984 40.833 cv
cp
f
17.0791 41.3174 mo
16.8857 41.356 16.6143 41.2012 16.5176 41.4526 cv
16.5566 41.7236 16.8467 41.6465 17.002 41.7432 cv
17.002 41.9365 li
16.8857 41.8975 16.8081 42.0146 16.7305 42.0918 cv
16.7114 42.1504 16.7695 42.1885 16.8081 42.2275 cv
16.5952 42.4404 15.9946 42.0527 16.0337 42.5752 cv
16.8467 42.9824 17.5635 42.3428 18.396 42.7119 cv
18.1055 42.7119 17.8149 43.0215 17.6987 43.1953 cv
17.5049 43.1953 li
17.7764 42.9248 li
17.1372 42.4014 16.2852 43.041 15.6074 42.6338 cv
15.7627 42.4795 15.9946 42.3428 15.7627 42.1504 cv
15.2593 42.1504 li
15.7046 41.9756 16.3242 42.2275 16.7305 41.9365 cv
16.0337 41.5303 15.937 41.356 15.0654 41.2397 cv
15.2979 41.2783 15.5688 41.085 15.6074 40.8911 cv
17.1567 40.833 li
17.0791 41.3174 li
cp
f
27.4575 44.8799 mo
26.9541 44.7832 26.3926 44.7832 25.9277 44.5889 cv
26.2568 44.3184 26.6636 44.8799 26.9155 44.376 cv
26.1602 43.7764 24.9985 44.125 24.127 43.834 cv
23.9722 44.0283 li
24.3208 44.4346 24.9019 44.3379 25.3081 44.5889 cv
25.1919 44.6094 25.0371 44.5313 24.96 44.667 cv
24.96 44.8027 li
24.0884 44.7637 23.1592 44.8799 22.3848 44.667 cv
22.8687 44.5693 23.6431 44.8994 23.8364 44.376 cv
22.9268 44.2988 21.8037 43.9121 20.9902 44.4541 cv
20.7192 44.2021 20.2544 44.2021 19.9448 44.3184 cv
19.8672 44.3955 19.751 44.4541 19.79 44.5889 cv
19.8672 44.667 li
19.4414 44.667 li
19.519 44.3184 li
20.332 44.0664 21.4937 44.3184 21.9585 43.5439 cv
21.7456 43.5439 21.2617 43.5439 21.0483 43.5439 cv
21.3003 43.3896 21.7651 43.3311 21.7456 42.9824 cv
22.0361 43.1377 22.3457 43.5635 22.791 43.4854 cv
22.7329 43.6025 22.501 43.6406 22.5781 43.834 cv
22.8491 44.0664 23.333 43.9697 23.6235 43.8926 cv
23.4492 43.0215 25.502 43.3311 24.1851 42.6338 cv
23.5073 42.499 22.7139 42.6719 22.1719 42.2275 cv
21.6099 42.4795 21.0483 42.3242 20.4868 42.3633 cv
20.3516 42.1504 li
20.7773 41.8975 21.4165 42.1504 21.8232 41.8789 cv
22.2295 42.3428 22.4619 41.7817 22.9268 41.9365 cv
23.4492 41.7432 24.4175 42.0723 24.8823 41.6655 cv
24.96 40.8911 li
25.6182 40.9297 26.7603 40.833 27.4575 40.9688 cv
27.4575 44.8799 li
cp
f
46.7041 41.0459 mo
46.4912 41.2397 li
46.5098 41.2979 46.5098 40.7749 46.7041 41.0459 cv
cp
f
56.8887 41.3174 mo
56.54 40.9688 li
56.8115 40.9688 li
56.8887 41.3174 li
cp
f
51.7959 41.6655 mo
51.583 41.4722 51.1963 41.5107 51.0986 41.8013 cv
52.1836 42.0918 50.6729 43.5439 51.8545 43.1953 cv
52.0674 42.7881 li
52.3574 43.4082 li
51.835 43.3311 51.1377 44.1826 50.6729 43.4854 cv
50.5176 43.4473 50.3047 43.5439 50.1885 43.4082 cv
49.9756 43.6211 li
49.8018 43.1758 50.0342 42.7305 50.0537 42.2852 cv
50.5576 42.3047 50.9053 42.3242 51.0986 41.8789 cv
50.8477 41.4526 50.4219 41.8594 50.1113 41.7432 cv
50.0723 41.4912 50.1504 41.2397 50.4014 41.1816 cv
50.6152 41.2012 50.7705 41.3945 51.0215 41.3174 cv
51.2354 41.0459 li
51.4287 41.2397 51.8545 41.2979 51.7959 41.6655 cv
cp
f
24.3208 41.1816 mo
23.8364 41.2588 23.1201 41.3364 22.7329 41.1045 cv
23.1782 41.3364 23.8364 41.2588 24.3208 41.1816 cv
cp
f
59.251 41.6655 mo
59.251 41.8013 li
59.1348 41.9561 59.0381 41.6655 58.9023 41.6655 cv
58.8252 41.2397 li
58.9023 41.4141 58.9404 41.7817 59.251 41.6655 cv
cp
f
19.0928 41.3174 mo
18.7832 41.3364 18.4541 41.5688 18.1245 41.3945 cv
18.4731 41.4141 18.7832 41.356 19.0928 41.3174 cv
cp
f
27.3223 41.5303 mo
26.8379 41.4526 li
26.8574 41.2012 27.167 41.356 27.3223 41.3174 cv
27.3223 41.5303 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
15.4141 41.6655 mo
15.0269 41.8594 14.6592 41.627 14.291 41.5884 cv
14.6592 41.8203 15.0269 41.4336 15.4141 41.6655 cv
cp
0 0 0 0 cmyk
f
56.0361 41.5884 mo
56.0557 41.5303 li
56.6172 41.6655 li
56.5977 41.7432 li
56.0361 41.5884 li
cp
f
55.5518 43.2725 mo
55.9785 42.8467 li
55.8818 42.8086 55.9004 42.7119 55.9004 42.6338 cv
55.9785 42.6143 55.998 42.6719 56.0361 42.7119 cv
56.0361 42.9824 55.5918 43.1758 55.6885 43.5439 cv
56.1133 43.8926 li
56.4629 43.4668 56.4629 42.4014 57.2949 42.7119 cv
57.4502 42.6338 57.585 42.5371 57.7793 42.5752 cv
57.9336 43.1572 58.5732 42.5752 58.7666 43.0596 cv
59.4639 43.1182 59.4639 42.459 59.5215 41.9365 cv
60.084 43.2725 59.0186 44.7441 58.5537 46.0615 cv
58.3213 45.751 58.0508 46.5068 57.6436 46.332 cv
57.7217 46.332 li
57.7217 46.5449 li
57.6436 46.5449 li
57.5273 46.3125 57.8379 45.8867 57.9336 45.6357 cv
58.1084 45.4033 58.4756 45.5576 58.6309 45.2285 cv
58.6699 45.0156 58.5732 44.8604 58.418 44.7256 cv
58.3018 44.8027 58.1465 44.8027 58.0693 44.9385 cv
57.9727 44.667 58.0107 44.2793 57.6436 44.1826 cv
57.2373 44.1826 li
57.2949 44.4541 57.1592 44.8799 56.8115 45.0156 cv
56.5977 44.9766 56.4434 45.0547 56.3271 45.2285 cv
56.3848 45.4609 56.6367 45.5381 56.8887 45.5 cv
56.9658 45.6934 56.7529 45.6543 56.6758 45.7129 cv
56.3467 45.5967 55.8623 44.9961 55.5518 45.2285 cv
55.9395 45.6357 55.8623 46.3516 56.4629 46.5449 cv
56.7334 47.1064 55.6299 47.1836 56.3271 47.668 cv
56.6172 47.8037 56.9072 47.417 57.082 47.2422 cv
57.0244 46.6221 li
57.1592 46.6221 li
57.3525 46.8164 57.043 47.3584 57.5078 47.3193 cv
57.7217 47.1836 57.624 46.6611 57.9922 46.9717 cv
58.0889 47.4355 57.585 47.8232 57.4307 48.2881 cv
57.3145 48.2686 57.082 48.3076 57.1592 48.501 cv
57.1592 48.7139 li
57.1211 48.5977 56.9268 48.249 56.6758 48.3652 cv
56.501 48.6367 56.4238 48.9463 56.1914 49.1982 cv
56.1914 48.7139 li
56.3848 48.7715 li
56.5596 48.5781 56.4238 48.2686 56.1914 48.21 cv
55.959 47.3008 56.1338 46.0996 55.4941 45.2871 cv
55.4941 43.9893 54.6426 42.9629 54.8555 41.6655 cv
55.0879 42.1504 54.9131 42.8857 55.5518 43.2725 cv
cp
f
19.0347 41.7432 mo
18.7056 41.7627 18.3765 41.9951 18.0474 41.8013 cv
18.3379 41.6851 18.7056 41.7627 19.0347 41.7432 cv
cp
f
26.1406 41.8013 mo
26.1797 42.0342 25.5791 41.9561 25.3662 41.8789 cv
25.3662 41.7432 li
25.6182 41.7817 25.8696 41.8203 26.1406 41.8013 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
58.9795 42.1504 mo
59.0186 42.0723 59.0957 42.0918 59.1729 42.0918 cv
58.999 42.4209 58.5537 42.0527 58.3408 42.0918 cv
58.0693 41.8789 li
58.2051 41.7432 li
58.2246 42.1504 58.7666 41.8789 58.9795 42.1504 cv
cp
0 0 0 0 cmyk
f
35.8994 42.3633 mo
35.8223 42.4404 li
35.6284 42.2275 35.8994 42.0342 36.0352 41.8789 cv
36.3062 42.0723 35.8608 42.2275 35.8994 42.3633 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
47.1299 42.4404 mo
47.0518 42.3047 46.8389 42.0527 47.1299 41.9365 cv
47.1299 42.4404 li
cp
0 0 0 0 cmyk
f
24.6694 42.2275 mo
24.127 42.1104 23.6816 42.8467 23.2173 42.2852 cv
23.2559 42.0918 23.8174 42.1299 24.127 42.0146 cv
24.6694 42.0918 li
24.6694 42.2275 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
27.3994 42.6338 mo
26.7021 42.4404 25.9473 43.0791 25.4438 42.3633 cv
26.1216 42.1885 26.8765 42.3633 27.3994 42.6338 cv
cp
f
46.7813 42.8467 mo
46.5684 42.7119 li
46.7813 42.7119 li
46.7813 42.8467 li
cp
0 0 0 0 cmyk
f
19.5962 42.7881 mo
19.5962 42.7119 li
19.9448 42.7119 li
19.9448 42.7881 li
19.5962 42.7881 li
cp
f
15.9561 43.2725 mo
16.1689 43.6211 li
15.2783 43.3115 14.291 43.9307 13.5938 43.6211 cv
14.5425 43.418 15.7119 43.1396 15.2593 43.3311 cv
15.0654 43.1377 li
15.3945 42.9043 15.6465 43.2539 15.9561 43.2725 cv
cp
f
27.1865 43.6211 mo
26.4893 43.9307 25.6953 43.6211 24.96 43.6211 cv
25.0952 43.4082 li
27.1865 43.4854 li
27.1865 43.6211 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
17.8535 43.6211 mo
18.3765 43.9502 18.8218 43.2539 19.3057 43.6797 cv
17.8535 43.6211 li
cp
0 0 0 0 cmyk
f
56.1133 44.1055 mo
55.9785 44.1631 55.8428 44.0283 55.9004 43.8926 cv
55.959 44.0088 56.1338 43.9502 56.1133 44.1055 cv
cp
f
19.0928 44.2412 mo
18.9185 44.2021 18.7441 44.1436 18.5508 44.1826 cv
18.667 43.7959 18.8799 44.2988 19.0928 44.2412 cv
cp
f
38.8784 46.2617 mo
38.5522 44.1055 li
39.1489 46.1357 li
38.8784 46.2617 li
cp
f
51.7959 44.1826 mo
51.7959 44.1055 li
52.2021 44.1055 li
52.2021 44.1826 li
52.0283 44.1055 51.9697 44.3184 51.8545 44.376 cv
51.9512 44.5693 51.9512 44.8027 52.1445 44.9385 cv
52.4346 44.8604 52.4346 44.5313 52.5508 44.3184 cv
53.1904 45.4219 li
52.9775 45.2676 52.4551 45.4219 52.1445 45.5771 cv
52.2803 45.9258 li
51.8154 46.1582 51.1963 45.6738 51.0215 46.332 cv
51.1963 46.7969 52.0479 46.2549 51.8545 46.9717 cv
52.126 47.4746 52.4551 46.874 52.6289 46.7578 cv
52.958 47.3584 53.1904 46.5254 53.5391 46.5449 cv
53.6748 46.7969 53.752 47.0674 53.752 47.3779 cv
53.4619 47.5127 53.5391 47.1836 53.3252 47.1064 cv
53.0742 47.5127 52.2998 47.2803 52.1445 47.8037 cv
52.5322 47.8037 52.9189 47.5908 53.3252 47.8623 cv
53.6943 48.0166 53.9648 47.8232 53.9453 48.3652 cv
53.9453 48.5586 li
53.6357 48.8105 53.209 48.1328 53.0547 48.5586 cv
52.9189 48.4619 52.9961 48.2881 52.8418 48.21 cv
52.6289 48.249 52.416 48.4814 52.2021 48.2881 cv
52.1445 48.21 li
52.0088 48.3076 51.9893 48.4229 52.0088 48.5586 cv
52.2803 48.8496 li
51.9131 48.6367 51.5254 48.2881 51.0986 48.4229 cv
50.8477 47.126 50.7705 45.7705 50.2666 44.5889 cv
50.1309 44.5117 50.0918 44.3955 50.1113 44.2412 cv
50.5762 44.0088 50.4219 44.6279 50.751 44.7256 cv
50.9248 44.6475 50.8857 44.4736 50.8857 44.3184 cv
50.9639 44.376 li
51.1572 43.9121 51.5059 44.5693 51.7959 44.1826 cv
cp
f
17.1567 44.2412 mo
16.7114 44.2988 16.2271 44.4346 15.8208 44.376 cv
16.1108 44.125 16.7114 44.2988 17.1567 44.2412 cv
cp
f
50.1885 45.1504 mo
49.4141 44.2412 li
49.7822 44.4346 50.1885 44.6865 50.1885 45.1504 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
15.6528 44.667 mo
13.7554 44.7959 li
14.0845 44.2285 15.3237 44.0986 15.6528 44.667 cv
cp
0 0 0 0 cmyk
f
18.6865 44.667 mo
17.9116 45.1904 16.7695 45.1123 15.8208 45.0156 cv
15.8208 44.9385 li
16.7695 45.0547 17.6021 44.4346 18.6865 44.667 cv
cp
f
22.2295 45.2285 mo
20.6421 45.2285 li
21.1455 45.0156 21.7651 44.8027 22.2295 45.2285 cv
cp
f
27.4575 45.1504 mo
27.9805 46.3896 29.2583 47.4355 30.5361 47.8623 cv
32.0464 48.1523 33.5952 47.9004 35.0669 48.0752 cv
34.3892 48.1719 33.5762 48.1523 33.0342 48.3652 cv
33.208 48.7715 33.7891 48.7529 34.1567 48.6367 cv
34.4668 48.2686 35.1636 48.5205 35.3379 48.1523 cv
35.667 48.1133 35.9385 48.1914 36.1704 48.3652 cv
35.4351 48.2686 34.8345 48.4814 34.2344 48.7139 cv
34.2925 49.1396 34.7764 48.9268 35.0669 48.9844 cv
35.2993 48.6367 36.1318 49.1201 36.3252 48.5586 cv
36.4414 48.3652 36.6353 48.6553 36.8096 48.7139 cv
37.894 47.9785 39.4043 48.0752 40.7012 48.0752 cv
40.334 48.5586 39.7715 48.0166 39.3071 48.2881 cv
38.8813 48.5781 37.9521 48.21 37.9907 49.0625 cv
38.4941 49.4297 39.249 49.1982 39.8682 49.2559 cv
39.3652 49.5264 38.4941 49.5264 37.9907 49.6045 cv
37.6035 49.0039 37.042 49.6426 36.519 49.5469 cv
36.5386 49.624 36.519 49.7012 36.5967 49.7588 cv
35.9385 49.624 35.2798 50.3008 34.854 49.9521 cv
34.3701 50.1084 33.75 49.9336 33.3823 50.3789 cv
33.4404 50.5537 33.6147 50.6504 33.731 50.8047 cv
34.1567 50.9209 34.2539 50.3008 34.7183 50.5146 cv
34.583 50.9404 33.9829 50.8242 33.6729 51.1533 cv
33.75 51.4629 34.2148 51.25 34.2925 51.5596 cv
34.0796 51.6953 33.7891 51.6182 33.5371 51.6377 cv
32.4336 51.1143 34.1377 50.5918 32.9756 50.166 cv
32.5303 50.5146 32.0464 50.127 31.6396 49.9521 cv
31.1362 49.8174 30.8457 50.2051 30.4004 50.166 cv
30.5747 50.2432 30.6328 50.0303 30.749 49.9521 cv
30.7295 49.8174 30.5557 49.7207 30.4585 49.6045 cv
30.5361 49.5264 30.6523 49.4688 30.5942 49.333 cv
29.4517 49.2168 28.2319 49.0039 27.0508 49.1982 cv
27.3223 49.4688 li
25.0176 49.5469 li
25.6182 49.4688 26.2183 49.4492 26.7021 49.1201 cv
26.4121 48.8496 li
23.9531 49.2754 21.0874 48.5586 18.6089 49.1982 cv
16.8662 49.1982 li
17.7954 48.9658 18.9185 49.1006 19.8672 48.5586 cv
21.0483 49.0625 22.5977 48.8105 23.9141 48.7715 cv
24.0498 48.6367 24.3594 48.6367 24.3208 48.3652 cv
24.708 48.6748 25.1533 48.3652 25.5215 48.21 cv
26.2373 48.3838 27.0122 48.4619 27.8062 48.4229 cv
27.6704 48.4033 27.5542 48.4424 27.4575 48.5586 cv
27.8838 48.9072 li
28.9292 49.0811 30.0132 48.9268 31.02 48.7715 cv
30.9814 48.9072 31.0781 48.9658 31.1558 49.0625 cv
31.7363 49.3135 31.5044 48.5781 31.8525 48.501 cv
30.9424 47.9785 29.8389 47.7842 28.8516 47.5908 cv
28.9678 47.5713 29.0645 47.7461 29.1421 47.5908 cv
29.2002 47.3965 28.9482 47.3193 28.8516 47.165 cv
28.7158 47.3193 li
28.8711 47.2422 28.4644 46.9131 28.3096 46.8164 cv
27.8062 46.7773 27.4189 46.4092 26.8379 46.5449 cv
26.9736 46.0225 26.373 46.4092 26.2183 46.1963 cv
25.8311 45.8291 25.4243 46.0029 24.96 46.0615 cv
23.1396 45.8672 21.0098 45.79 19.2476 46.1191 cv
19.2476 46.2744 li
21.1064 46.1963 23.0039 46.6807 24.96 46.4092 cv
25.231 46.6807 li
24.0303 47.165 22.0942 46.2744 20.8354 47.165 cv
19.4219 46.8936 18.1245 47.3779 16.7305 47.3779 cv
17.6797 46.6221 18.9961 47.417 20.0801 46.9717 cv
20.5645 46.7002 21.397 46.9521 21.6875 46.4678 cv
19.6738 46.2744 17.6797 46.8936 15.6851 46.4678 cv
16.7695 46.0029 18.144 46.5645 19.2476 45.9834 cv
19.2671 45.8867 19.1509 45.8486 19.0928 45.7705 cv
20.061 45.9443 21.3389 45.4795 22.5781 45.6357 cv
22.791 45.3633 li
23.6626 45.4414 24.4175 45.2285 25.1729 45.0156 cv
25.9082 45.1123 26.6831 45.3252 27.4575 45.1504 cv
cp
f
52.0674 45.0742 mo
52.0479 45.1709 52.126 45.3057 52.0088 45.3633 cv
51.8545 45.3633 li
51.8545 45.0156 li
51.9316 45.0156 52.0283 44.9961 52.0674 45.0742 cv
cp
f
19.1704 45.0742 mo
19.1704 45.0156 li
19.7319 45.0742 li
19.7319 45.1504 li
19.1704 45.0742 li
cp
f
14.291 45.3633 mo
14.8525 45.2285 li
15.4141 45.3633 li
14.291 45.3633 li
cp
f
27.6123 45.6357 mo
27.2446 46.042 26.7217 45.6934 26.2764 45.7129 cv
25.2891 45.7129 24.2432 46.0225 23.2754 45.7129 cv
23.2754 45.6357 li
24.6304 45.4219 26.2959 45.1123 27.6123 45.6357 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
18.0474 45.7705 mo
17.9312 45.8486 17.4858 45.6357 17.1567 45.7129 cv
17.4082 45.6357 17.8345 45.5381 18.0474 45.7705 cv
cp
0 0 0 0 cmyk
f
16.2466 45.7705 mo
15.4722 45.8867 14.7944 46.1387 14.1553 45.9834 cv
14.1553 45.8486 li
14.8525 46.042 15.5498 45.8096 16.2466 45.7705 cv
cp
f
34.6411 47.3193 mo
34.3892 47.4355 34.0405 47.3584 33.731 47.3779 cv
33.731 45.9834 li
34.2148 46.2939 35.123 46.1436 34.6411 47.3193 cv
cp
f
48.7949 48.4229 mo
48.8145 48.5977 48.7178 48.7139 48.6592 48.8496 cv
48.3877 48.7139 48.543 48.1523 48.0977 48.1523 cv
47.8848 48.5586 li
48.1758 48.2295 47.6133 47.668 48.0205 47.165 cv
47.8271 47.0098 47.4775 46.8545 47.4004 47.2422 cv
47.207 47.707 47.207 47.9971 47.1299 48.501 cv
47.0713 48.3838 47.2461 47.959 46.917 47.9385 cv
46.7813 47.9385 li
47.0518 47.5127 46.1611 46.7578 47.0518 46.6807 cv
47.2461 46.2158 47.8076 46.7773 47.9629 46.1963 cv
48.1367 46.9717 48.4072 47.7256 48.7949 48.4229 cv
cp
f
39.7334 47.3779 mo
38.9878 47.4092 li
38.5923 47.0313 38.5439 46.6113 39.5977 46.4678 cv
39.7334 46.4678 li
39.7334 47.3779 li
cp
f
37.584 46.8418 mo
37.5454 47.2295 37.3823 47.7578 36.8677 47.8623 cv
36.4141 47.8057 36.0269 47.0801 36.1802 46.8164 cv
36.1699 46.834 37.4673 46.8613 37.584 46.8418 cv
cp
f
14.7168 47.165 mo
14.7168 47.0293 li
15.4722 47.0293 li
14.7168 47.165 li
cp
f
27.6123 47.165 mo
27.0244 47.0918 27.4912 47.9346 26.354 47.2422 cv
26.7603 47.2227 27.1865 46.9902 27.6123 47.165 cv
cp
f
22.5781 47.3193 mo
22.4619 47.4355 22.2686 47.3584 22.0942 47.3779 cv
22.3071 47.4551 22.3848 47.2227 22.5781 47.3193 cv
cp
f
20.7002 47.5908 mo
20.4287 47.6875 20.0996 47.668 19.8672 47.8623 cv
20.3901 48.6553 21.3584 48.0947 22.1719 48.3652 cv
20.6611 48.249 19.3638 48.2686 17.9116 48.501 cv
18.4346 48.21 19.1704 48.4424 19.6543 48.0752 cv
18.2217 47.3193 16.7305 48.3457 15.2012 48.0166 cv
16.0142 47.6299 16.8276 47.8809 17.7764 47.8037 cv
18.8218 47.7646 19.6348 47.2617 20.7002 47.5908 cv
cp
f
43.8379 47.8037 mo
43.7021 47.8037 li
43.7021 47.668 li
43.8379 47.668 li
43.8379 47.8037 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
22.9268 47.8037 mo
23.2173 47.7256 li
23.7012 47.7256 li
22.9268 47.8037 li
cp
0 0 0 0 cmyk
f
26.2148 47.9814 mo
26.1406 47.7256 li
26.8345 47.9814 li
26.2148 47.9814 li
cp
f
57.082 48.0166 mo
56.7334 48.0166 li
56.7334 47.7256 li
56.8496 47.8232 57.082 47.8037 57.082 48.0166 cv
cp
f
43.4316 47.9385 mo
43.4316 48.1523 li
43.1797 48.0947 43.1992 48.3838 43.083 48.501 cv
43.1416 48.7139 li
42.7539 48.5205 42.5986 48.249 42.1729 48.3652 cv
42.0566 48.54 42.0762 48.8301 42.251 48.9844 cv
42.3086 49.0625 li
42.0381 49.0625 41.8438 49.2939 41.6113 49.4111 cv
41.6113 49.7588 li
41.4756 49.6045 41.2236 49.7783 41.2051 49.9521 cv
41.0693 49.7979 41.0498 49.5264 40.7793 49.5469 cv
40.6436 49.4883 40.334 49.585 40.2949 49.8174 cv
40.2168 49.9922 40.4307 50.0498 40.5078 50.166 cv
40.8955 50.2432 41.3213 50.8633 41.6885 50.3789 cv
41.4951 50.2432 41.7275 50.1084 41.7471 49.9521 cv
42.1143 49.9717 41.8438 50.7852 42.4443 50.5146 cv
42.6963 50.3789 42.251 50.1465 42.6572 50.2432 cv
42.6572 50.3594 42.792 50.417 42.8701 50.5146 cv
43.1416 50.2432 li
43.7607 50.4756 43.083 51.3086 43.8379 51.1533 cv
44.2061 51.1533 43.9736 51.9668 44.4766 51.6953 cv
44.3027 51.2695 44.5732 50.6113 44.1279 50.2432 cv
44.1094 50.0684 44.2832 49.8945 44.1279 49.7588 cv
44.0508 49.6816 43.9736 49.5654 43.8379 49.6045 cv
43.5283 49.9336 43.8379 50.3594 43.8379 50.7275 cv
43.625 50.5723 43.7217 50.166 43.4893 49.9521 cv
43.3926 49.7393 43.877 49.6621 43.6445 49.4688 cv
43.7803 49.4297 43.877 49.2939 43.9932 49.1982 cv
43.915 49.3135 44.709 49.6621 44.2637 49.9521 cv
44.2061 50.166 44.458 50.2432 44.5352 50.3789 cv
44.8057 50.3398 44.9219 49.7979 45.2324 50.1084 cv
44.9609 50.4561 li
45.1348 50.9404 45.542 50.4951 45.8711 50.7275 cv
45.6387 51.0566 45.1543 50.9014 45.0381 51.3467 cv
45.1348 51.5986 44.6133 51.9092 45.0967 51.9854 cv
45.4063 51.8896 45.6006 51.3086 45.9297 51.502 cv
45.8906 51.5791 45.6006 51.4248 45.5811 51.6953 cv
45.8711 51.9668 46.2588 52.2178 46.626 52.0439 cv
46.8203 51.9092 46.8389 51.8115 46.7041 51.6377 cv
46.5684 51.25 46.3555 51.8896 46.2197 51.502 cv
46.4131 51.2314 46.5684 51.2314 46.8389 51.1533 cv
46.8008 50.8828 46.8779 50.4951 47.0518 50.2432 cv
47.2266 50.5342 47.7881 50.166 47.75 50.6504 cv
48.0791 50.7461 47.8271 50.3975 47.9629 50.3789 cv
48.2334 50.6504 48.6982 50.9209 49.0654 50.8633 cv
49.1631 50.6504 49.6279 50.7275 49.4141 50.4561 cv
49.8408 50.3398 50.4014 50.3398 50.8086 50.4561 cv
50.6729 50.5146 50.5176 50.5723 50.4014 50.7275 cv
50.6729 51.2119 51.1182 50.6113 51.3701 51.1533 cv
51.5059 50.9795 51.6602 50.9014 51.8545 50.9404 cv
51.835 51.0371 51.9512 51.0752 52.0088 51.1533 cv
52.1836 51.2314 52.2021 51.0176 52.2803 50.9404 cv
52.2803 50.8047 li
52.3965 50.7852 52.4736 50.9404 52.5508 50.999 cv
52.4736 51.1143 52.4932 51.2695 52.4932 51.4248 cv
53.0742 51.6758 53.79 51.8115 54.3711 51.8506 cv
54.5068 51.6953 54.7783 51.8506 54.9336 51.6953 cv
53.5967 53.167 li
53.4033 52.9541 li
53.1904 53.167 li
52.4346 53.1289 53.4805 52.1602 52.5508 52.334 cv
52.4736 52.373 52.4932 52.4697 52.4932 52.5469 cv
52.3193 52.4307 51.9512 52.5088 52.0088 52.1982 cv
52.1445 52.083 52.377 52.0635 52.416 51.8506 cv
51.9893 51.8896 51.3896 51.6377 51.1572 52.1211 cv
51.3311 52.373 51.7383 52.1602 51.7959 52.5469 cv
51.8154 52.7607 51.5635 52.8564 51.6602 53.0889 cv
52.0674 53.3027 li
51.8545 53.5156 li
51.7568 53.2451 51.3701 53.3027 51.1572 53.0889 cv
50.9248 53.2832 50.7705 53.4189 50.6729 53.7285 cv
50.6338 52.8564 49.918 53.5547 49.5693 53.4385 cv
49.5693 53.5928 li
49.4922 53.5156 li
49.3369 53.5732 49.1826 53.8447 49.3564 54 cv
49.5693 54.4834 49.9756 53.8838 50.1885 54.3486 cv
50.3828 54.2129 50.5957 54.1543 50.751 53.9414 cv
51.3311 54.3672 51.874 53.8838 52.5508 54.1357 cv
50.2666 55.9551 li
50.0918 56.0127 50.0342 55.8584 49.918 55.8193 cv
49.8018 55.9746 49.7119 55.4326 49.5566 55.5098 cv
49.5527 55.6729 48.4189 55.3086 48.0918 55.1357 cv
48.2266 54.4961 48.4141 53.542 48.5303 52.8447 cv
46.9766 53.1602 46.3721 53.0654 45.3096 53.3154 cv
44.374 54.1416 li
43.8252 53.8057 li
43.6318 53.8838 44.3867 54.5029 44.0967 54.3672 cv
44 54.1934 43.8574 54.6387 43.6445 54.6387 cv
43.0635 54.9873 42.8311 54.251 42.3857 54.1357 cv
41.6689 54.0967 40.9727 54 40.4307 53.5156 cv
38.4165 53.0322 li
37.7002 52.4697 38.9199 52.373 38.9009 51.8506 cv
39.2881 51.2891 39.1719 50.2822 40.0049 50.166 cv
40.1211 49.9141 40.3721 49.7393 40.2949 49.4111 cv
40.624 49.1982 41.1084 49.2363 41.2627 48.7715 cv
41.1279 48.4229 li
41.6885 47.8232 42.6572 48.1523 43.3545 47.8623 cv
43.4316 47.9385 li
cp
f
28.1772 47.8262 mo
30.1699 47.9346 26.9429 48.4033 27.8286 47.8262 cv
28.1772 47.8262 li
cp
f
29.4907 48.4229 mo
29.3745 48.5586 29.1616 48.4814 29.0063 48.501 cv
29.1421 48.4229 29.3354 48.2686 29.4907 48.4229 cv
cp
f
26.0635 48.5586 mo
26.0439 48.6367 26.1021 48.6748 26.1406 48.7139 cv
25.9473 48.8682 25.4824 48.7529 25.5791 48.501 cv
26.0635 48.5586 li
cp
f
16.0337 48.5586 mo
15.9175 48.6748 15.8013 48.8496 15.6074 48.7715 cv
15.6074 48.5586 li
16.0337 48.5586 li
cp
f
50.1885 48.9072 mo
50.1885 49.1201 li
49.8018 49.2754 49.667 48.8877 49.4141 48.7139 cv
49.7236 48.6943 49.8984 48.7529 50.1885 48.9072 cv
cp
f
52.8418 49.0625 mo
52.7637 49.0625 li
52.9004 48.7715 li
52.8799 48.8682 52.958 49.0039 52.8418 49.0625 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
36.6738 48.9072 mo
36.7515 49.3135 36.1899 49.3916 35.8994 49.5469 cv
34.8345 49.8369 33.8086 49.7783 32.6274 49.8174 cv
32.5693 49.6816 32.395 49.585 32.6274 49.4688 cv
33.0146 49.5078 33.3633 49.4297 33.6729 49.2559 cv
33.5952 49.1787 33.4795 49.1201 33.5371 48.9844 cv
34.1763 48.6553 34.3701 49.585 34.9312 49.2559 cv
35.3188 48.8301 36.0352 48.9268 36.6738 48.9072 cv
cp
f
32.8403 49.0625 mo
32.6274 49.333 32.1431 49.4111 31.7944 49.2559 cv
31.6206 49.1787 31.7754 49.0625 31.8525 48.9844 cv
32.2207 48.9072 32.4722 49.1396 32.8403 49.0625 cv
cp
f
51.6602 50.1084 mo
51.4473 50.1084 li
51.4668 49.6816 51.3125 49.3721 51.1572 48.9844 cv
51.7188 49.1396 51.1963 49.7783 51.6602 50.1084 cv
cp
0 0 0 0 cmyk
f
23.2754 49.333 mo
23.2754 49.2559 li
23.4883 49.2559 li
23.4883 49.333 li
23.2754 49.333 li
cp
f
20.0801 49.4688 mo
19.8867 49.6045 19.6157 49.5264 19.3833 49.5469 cv
19.5381 49.3135 19.8867 49.3916 20.0801 49.4688 cv
cp
f
50.1885 49.8945 mo
49.2012 49.8174 48.292 50.3594 47.3232 49.9521 cv
48.1172 50.0107 48.7178 48.9844 49.4922 49.6045 cv
49.7822 49.585 50.1309 49.624 50.1885 49.8945 cv
cp
f
43.1416 49.5469 mo
42.9473 49.7588 li
42.9092 49.7207 42.8701 49.6621 42.792 49.6816 cv
42.8125 49.5264 43.0254 49.3721 43.1416 49.5469 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
20.5645 49.8174 mo
20.9902 49.5469 li
21.3389 49.7588 li
20.5645 49.8174 li
cp
0 0 0 0 cmyk
f
18.8994 49.6816 mo
18.144 50.166 17.2534 49.9336 16.3823 49.8945 cv
16.2466 49.6045 li
18.8994 49.6816 li
cp
f
29.9746 49.6045 mo
29.9077 49.6377 30.4741 50.9414 27.8838 49.6045 cv
29.9746 49.6045 li
cp
f
39.1138 50.0303 mo
38.8813 50.2822 38.4941 50.127 38.2036 50.166 cv
38.4165 49.9336 38.8428 49.7588 39.1138 50.0303 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
19.9448 49.9521 mo
19.751 50.0879 19.48 50.0107 19.2476 50.0303 cv
19.48 50.0498 19.6738 49.9141 19.9448 49.9521 cv
cp
0 0 0 0 cmyk
f
27.3994 50.0303 mo
27.0703 50.1084 27.167 50.4951 27.0508 50.7275 cv
26.5864 50.5342 26.2959 49.9336 25.6567 50.166 cv
26.1602 50.1084 26.8765 50.0107 27.3994 50.0303 cv
cp
f
46.4326 49.9521 mo
46.4912 49.9521 li
46.4912 50.2432 li
46.4326 50.2432 li
46.4326 49.9521 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
24.3208 50.1084 mo
23.0815 50.166 li
23.4106 49.9336 23.9531 50.0107 24.3208 50.1084 cv
cp
0 0 0 0 cmyk
f
36.8677 50.5146 mo
37.2549 50.3789 37.7002 50.4756 38.0684 50.5918 cv
38.0684 50.6504 li
37.1357 50.6289 35.6729 50.4746 35.2026 51.2119 cv
34.583 51.2119 li
34.9897 51.0957 35.377 50.7666 35.4155 50.3008 cv
35.8994 50.8047 36.4224 49.9336 36.8677 50.5146 cv
cp
f
54.7969 50.5146 mo
54.584 50.6504 li
54.7002 50.7275 54.623 50.8828 54.6426 50.999 cv
54.5654 50.9404 54.4678 50.9404 54.3711 50.999 cv
54.3711 51.1533 li
54.0811 51.25 54.1582 51.2314 53.8877 51.0752 cv
53.7324 51.1338 53.6553 51.3086 53.4619 51.1533 cv
53.3252 50.999 li
53.6943 50.6113 54.1006 50.166 54.6426 50.4561 cv
54.6807 50.4951 54.7197 50.5342 54.7969 50.5146 cv
cp
f
18.0474 50.5918 mo
17.6797 50.6504 17.021 50.8047 16.8081 50.4561 cv
17.1758 50.5723 17.6797 50.4561 18.0474 50.5918 cv
cp
f
40.8564 50.5918 mo
40.6436 50.5918 li
40.6436 50.4561 li
40.7402 50.417 40.7793 50.5342 40.8564 50.5918 cv
cp
f
46.4912 50.5918 mo
46.4521 50.6299 46.3936 50.6689 46.4326 50.7275 cv
46.2783 50.5918 li
46.4912 50.5918 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
19.0928 50.6504 mo
18.9961 50.7852 18.8218 50.708 18.6865 50.7275 cv
18.7832 50.5918 18.9575 50.6885 19.0928 50.6504 cv
cp
0 0 0 0 cmyk
f
26.0635 50.8047 mo
26.0244 50.9014 25.7148 50.8438 25.7148 51.0752 cv
25.9277 51.2891 li
25.0952 51.3467 li
25.2695 51.0752 25.2891 50.9209 25.5215 50.6504 cv
25.6763 50.7666 25.9082 50.708 26.0635 50.8047 cv
cp
f
43.083 50.999 mo
43.0254 51.1338 42.9092 51.25 42.792 51.3467 cv
42.0244 51.3467 42.4629 51.0371 42.3086 50.8633 cv
42.4629 50.5918 42.9092 50.7461 43.083 50.999 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
38.8232 50.8047 mo
38.8813 51.1143 38.4941 51.0371 38.3394 51.1533 cv
38.2036 51.1533 li
38.4165 51.0371 38.6104 50.7852 38.8232 50.8047 cv
cp
f
41.2627 50.8633 mo
42.0957 50.8633 li
42.0566 51.4053 41.3604 51.25 40.9922 51.4248 cv
40.8955 51.4629 40.9141 51.5596 40.9141 51.6377 cv
41.6113 51.6182 40.8369 52.334 41.5537 52.334 cv
41.3018 52.7607 40.9336 52.4502 40.5654 52.5469 cv
40.2637 52.1631 39.8594 52.9756 39.5977 52.6836 cv
39.5791 52.2764 40.4502 52.4307 39.9463 51.9854 cv
39.792 52.1025 39.5977 52.1406 39.3848 52.1211 cv
39.1719 51.8311 39.792 51.7148 39.5977 51.3467 cv
39.9463 51.2119 li
39.8301 51.1143 39.8496 50.8828 40.0049 50.8047 cv
40.4307 50.6113 40.9922 51.2891 41.2627 50.8633 cv
cp
f
23.6235 51.2119 mo
22.1719 51.4248 li
22.0747 51.0957 21.668 51.1924 21.397 51.1533 cv
22.0942 51.0566 23.0234 50.6689 23.6235 51.2119 cv
cp
0 0 0 0 cmyk
f
48.8721 51.5596 mo
48.7754 51.5791 48.6396 51.502 48.582 51.6377 cv
48.9307 51.8506 li
48.5049 51.9092 47.8076 52.0635 47.5361 51.6953 cv
47.7686 51.2891 48.1953 51.6953 48.2334 51.1533 cv
48.4463 51.2891 48.9697 51.1143 48.8721 51.5596 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
30.4004 51.502 mo
29.9502 51.7275 29.2891 51.6836 29.355 51.6953 cv
29.6646 51.6953 30.168 50.7461 30.4004 51.502 cv
cp
0 0 0 0 cmyk
f
50.5381 51.502 mo
50.5381 51.6377 li
50.0342 51.0371 49.4141 52.0635 49.1436 51.4248 cv
49.4922 51.1729 49.8408 51.3271 50.1885 51.2891 cv
50.2666 51.4248 50.4219 51.4248 50.5381 51.502 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
19.79 52.0439 mo
19.2866 52.0439 18.5894 52.373 18.0474 52.0439 cv
18.8994 51.7725 li
18.8799 51.5215 18.6089 51.6182 18.4731 51.502 cv
19.1509 51.4053 18.9961 52.4121 19.79 52.0439 cv
cp
0 0 0 0 cmyk
f
23.9722 51.5596 mo
23.2754 51.8311 22.6558 52.2178 21.7456 51.9854 cv
22.4814 51.8115 23.1201 51.4053 23.9722 51.5596 cv
cp
f
27.3994 51.7725 mo
27.3413 52.1797 26.7217 52.1025 26.625 52.3926 cv
27.0317 52.7607 27.6123 52.6836 28.0967 52.8184 cv
28.4063 53.6514 29.4907 52.6836 30.2456 53.0889 cv
31.5044 53.0889 li
30.7104 53.3418 29.7422 53.167 29.0063 53.5156 cv
29.4712 54.0771 30.207 53.6123 30.8071 53.6514 cv
30.5361 53.7871 29.9941 53.6123 29.9746 54.0771 cv
30.3618 54.1543 30.6719 54.4443 31.0977 54.4834 cv
31.0781 54.7549 31.3491 54.7744 31.5044 54.9092 cv
32.2012 54.9482 32.8403 54.8711 33.46 54.6963 cv
33.2471 54.8516 32.8984 54.6963 32.6851 54.832 cv
32.6274 55.0449 li
33.3823 55.1221 34.1636 54.916 34.8408 54.374 cv
35.0732 54.4326 35.1123 54.6387 35.3442 54.6963 cv
34.9961 54.6768 34.8408 54.8643 34.5698 55.0381 cv
34.938 55.5225 35.5703 55.4521 36.1318 55.4131 cv
36.3838 54.9678 36.2607 55.4004 40.1533 55.2773 cv
43.2256 54.7549 li
46.7295 52.4121 li
48.1963 52.2764 li
48.8662 52.5342 li
50.3311 52.5664 50.625 53.1846 51.1006 53.4951 cv
51.5098 53.7617 51.1494 54.626 51.0049 55.0205 cv
50.7227 55.791 50.1504 56.0283 48.6719 56.8818 cv
47.6602 57.4668 46.3506 58.2002 45.2607 58.6113 cv
44.001 59.0869 42.8193 59.3877 42.0176 59.3828 cv
40.0127 58.71 li
38.7217 59.3389 li
37.7856 59.3271 li
36.5107 58.6895 li
33.8857 59.2754 li
33.8857 59.2754 33.1709 59.375 31.8979 58.6279 cv
31.8979 58.6279 29.9277 59.5039 29.5552 58.4043 cv
29.1997 58.4248 27.2612 57.8525 27.3154 58.2529 cv
26.9102 57.6602 25.418 57.5947 25.9375 57.7979 cv
25.4922 57.9141 25.6245 57.3105 25.1987 57.5625 cv
24.9858 57.3301 25.3018 56.9551 25.0308 57.0518 cv
24.1079 56.9033 li
24.0498 56.9814 23.2397 56.3711 23.3174 56.2744 cv
22.9297 56.042 23.3203 55.4902 22.8169 55.5879 cv
22.8364 55.4717 23.7915 54.9551 23.8887 54.8779 cv
23.5786 54.3926 23.1978 55.2383 23.0039 54.6387 cv
22.8491 54.5801 23.333 54.4258 23.0815 54.29 cv
22.0166 53.6514 20.9517 54.3672 19.8672 53.7871 cv
20.6421 53.7285 li
20.7969 53.5547 20.6421 53.3604 20.4868 53.2451 cv
20.7773 53.1475 20.5645 52.7607 20.5645 52.7412 cv
21.1455 52.7607 21.7065 52.0635 22.2295 52.5469 cv
22.6943 52.373 23.1011 52.4697 23.5654 52.5469 cv
22.9268 52.9346 22.1909 52.4697 21.5327 52.8184 cv
21.8232 53.0889 li
21.4746 53.2451 li
21.8423 53.4766 21.8232 54.2129 22.4424 53.9414 cv
22.6172 53.5352 22.9849 53.8643 23.2173 53.9414 cv
23.7979 54.4258 23.6724 53.4414 24.2144 53.3838 cv
24.2529 53.3057 25.4053 53.3965 25.3662 53.2998 cv
24.894 52.8271 24.6211 53.3311 23.8364 53.2451 cv
24.0693 52.9922 24.6499 53.167 24.8242 52.8184 cv
24.4951 52.7021 24.4951 52.5088 24.2627 52.334 cv
25.1338 51.4053 26.2764 52.8965 26.9736 51.6953 cv
27.3994 51.7725 li
cp
f
43.2959 51.8506 mo
43.374 52.0244 43.1416 52.083 43.083 52.1982 cv
42.0879 51.8838 42.2461 52.3584 41.96 51.8506 cv
42.3672 51.7148 42.9473 51.6182 43.2959 51.8506 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
35.4736 51.7725 mo
36.0498 51.9268 35.8408 52.1504 34.7183 51.8506 cv
34.9312 51.7148 35.2217 51.792 35.4736 51.7725 cv
cp
0 0 0 0 cmyk
f
37.9131 52.9541 mo
37.9521 52.7607 37.4131 53.0732 37.2583 53.0146 cv
37.231 53.0059 37.4395 53.3076 36.8096 52.7412 cv
36.5776 52.9404 37.3623 52.2197 37.3711 52.2568 cv
37.7778 52.2568 38.1069 52.0439 38.4165 51.7725 cv
38.2422 52.1602 37.5645 52.373 37.9131 52.9541 cv
cp
f
28.0381 52.334 mo
28.3677 51.9854 li
28.6582 52.1982 li
28.0381 52.334 li
cp
f
34.6411 52.3926 mo
33.5762 53.125 33.8491 51.8496 33.0342 52.1211 cv
33.5566 51.8311 34.1377 52.2383 34.6411 52.3926 cv
cp
f
32.4146 52.5469 mo
31.7754 52.793 31.5688 52.6113 31.4463 52.4697 cv
31.4463 52.334 li
31.814 52.2959 32.124 52.373 32.4146 52.5469 cv
cp
f
45.4453 52.4697 mo
45.5029 52.6436 45.29 52.7793 45.1748 52.8184 cv
45.0381 52.7607 44.9424 52.7607 44.8838 52.6055 cv
45.0771 52.5674 45.2715 52.1025 45.4453 52.4697 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
44.8838 53.2451 mo
44.9609 53.4961 44.6514 53.4766 44.5352 53.5928 cv
44.1279 53.3027 li
44.2832 53.3799 44.6318 52.8379 44.8838 53.2451 cv
cp
f
34.3701 53.3799 mo
33.9053 53.5547 33.2856 53.6123 32.6851 53.5928 cv
32.8584 53.5693 33.6421 53.0752 34.3701 53.3799 cv
cp
0 0 0 0 cmyk
f
38.6875 53.5928 mo
38.4165 53.6904 38.1069 53.3994 38.126 53.3027 cv
38.6875 53.5928 li
cp
f
35.2026 54 mo
35.3379 54 li
34.5635 53.9219 33.9634 54.251 33.1113 54.1357 cv
33.1978 54.1494 34.1929 53.8701 34.854 53.5156 cv
34.9312 53.6904 34.9702 53.9609 35.2026 54 cv
cp
f
41.0498 54.29 mo
40.585 54.251 40.043 54.0186 39.6553 54.2129 cv
39.8682 54.4258 li
39.5977 54.4258 39.4043 54.1738 39.5977 53.9414 cv
41.0498 54.29 li
cp
f
37.0225 54.1357 mo
36.8872 54.29 37.042 54.4834 37.0806 54.6387 cv
37.2935 54.6387 li
36.2354 54.6387 36.1123 55.1807 35.5508 54.9092 cv
35.5122 54.8711 35.4541 54.832 35.4736 54.7744 cv
35.9189 54.6582 36.4414 54.7549 36.8096 54.4258 cv
36.7319 54.1357 li
37.0225 54.1357 li
cp
f
38.2036 54.6387 mo
38.126 54.6963 li
38.2813 54.7939 38.4165 55.1426 38.6104 54.9092 cv
38.6875 54.832 38.8037 54.7549 38.7651 54.6387 cv
38.6875 54.5615 li
38.7651 54.4834 li
38.9976 54.4639 38.8232 54.7549 38.959 54.832 cv
38.8037 55.1035 38.4551 54.9297 38.2036 54.9873 cv
38.0874 54.6582 37.7583 54.5996 37.4292 54.6387 cv
37.6807 54.0381 37.8359 54.8711 38.2036 54.6387 cv
cp
f
21.126 54.5615 mo
20.8354 54.5615 li
20.9517 54.5801 21.0483 54.4063 21.126 54.5615 cv
cp
f
40.9141 54.832 mo
40.876 54.9482 40.8174 55.0449 40.8564 55.1807 cv
40.5654 54.6963 li
40.9141 54.832 li
cp
f
39.7334 54.9873 mo
39.7529 55.0449 39.6943 55.084 39.6553 55.1221 cv
39.5977 54.9092 li
39.6553 54.8896 39.6943 54.9482 39.7334 54.9873 cv
cp
f
22.9268 55.8193 mo
22.7715 56.0518 22.4619 55.917 22.3848 55.7422 cv
22.9268 55.8193 li
cp
f
43.5674 58.7432 mo
43.3926 58.7051 43.167 58.5439 43.0127 58.4268 cv
43.1094 58.292 43.4316 58.3564 43.5674 58.3174 cv
43.5674 58.7432 li
cp
f
40.8564 59.3047 mo
40.8174 59.3633 40.876 59.4014 40.9141 59.4404 cv
40.7588 59.5566 40.5654 59.5957 40.3525 59.5762 cv
40.2949 59.5176 li
40.3721 59.3438 40.624 59.3047 40.8564 59.3047 cv
cp
f
38.0439 38.77 mo
37.9951 38.77 37.834 38.7861 37.834 38.7861 cv
37.834 38.7861 37.7373 38.6567 37.7534 38.5923 cv
37.7695 38.5278 37.9146 38.5117 37.9146 38.5117 cv
37.9146 38.5117 38.0112 38.4795 38.0278 38.5439 cv
38.0439 38.6084 38.0439 38.77 38.0439 38.77 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
24.4678 53.4131 mo
24.6113 53.4609 27.9966 54.3506 28.2661 54.5283 cv
29.3188 55.2207 26.7974 55.1533 27.3857 54.9238 cv
26.5967 55.2314 44.5518 56.7637 45.0342 54.8467 cv
44.9512 55.1768 42.4971 55.3516 44.4521 54.334 cv
45.2979 53.8926 47.9736 53.0039 47.9736 53.0039 cv
47.416 55.2695 li
49.5586 55.8594 li
49.5586 55.8594 46.1738 57.5889 46.1475 57.6885 cv
46.1211 57.7871 46.1699 58.042 45.6885 58.1045 cv
39.583 58.8926 32.8359 59.1357 26.3774 57.3584 cv
26.0859 57.2783 26.4771 57.0684 26.4175 57.1357 cv
26.478 57.0674 23.5049 56.3252 23.3789 56.1963 cv
23.2529 56.0674 25.2842 55.3213 25.2842 55.3213 cv
24.4678 53.4131 li
cp
f
30.1157 55.9961 mo
29.9238 57.1475 li
29.8994 57.2939 29.8325 57.5088 29.583 57.6064 cv
29.4912 57.6396 29.3877 57.6455 29.292 57.6299 cv
29.1963 57.6143 29.106 57.5791 29.0366 57.5322 cv
28.835 57.3418 28.8115 57.1357 28.8389 56.9717 cv
29.0308 55.8193 li
29.3125 55.8662 li
29.1196 57.0215 li
29.106 57.1279 29.105 57.2939 29.334 57.3311 cv
29.5576 57.3672 29.624 57.2119 29.6416 57.1064 cv
29.834 55.9502 li
30.1157 55.9961 li
cp
0 0 0 0 cmyk
f
30.5747 56.791 mo
30.9624 56.835 li
31.0288 56.8418 31.1582 56.7705 31.1606 56.6025 cv
31.1748 56.4834 31.1377 56.4092 31.0112 56.3945 cv
30.627 56.3506 li
30.5747 56.791 li
cp
30.3774 56.0303 mo
31.144 56.1172 li
31.2813 56.1396 31.4116 56.2344 31.4297 56.4209 cv
31.4399 56.4961 31.4541 56.6201 31.4028 56.7607 cv
31.3516 56.9023 31.2847 56.9482 31.1836 57.0049 cv
31.2266 57.0498 31.3125 57.1006 31.3096 57.2549 cv
31.3086 57.3252 31.2861 57.5469 31.2778 57.6318 cv
31.2666 57.7256 31.2866 57.75 31.3145 57.7754 cv
31.3071 57.8379 li
31.0024 57.8037 li
30.9858 57.751 30.9805 57.6982 30.9829 57.6426 cv
30.9893 57.5596 31.0049 57.4258 31.0234 57.3047 cv
31.0332 57.1914 30.9717 57.1279 30.873 57.1172 cv
30.54 57.0791 li
30.4609 57.7422 li
30.1772 57.71 li
30.3774 56.0303 li
cp
f
31.9502 57.6094 mo
32.2832 57.6396 li
32.3682 57.6465 32.4971 57.6533 32.5171 57.4219 cv
32.5332 57.2314 32.4263 57.2129 32.3735 57.208 cv
31.9873 57.1738 li
31.9502 57.6094 li
cp
32.0122 56.8838 mo
32.334 56.9131 li
32.4551 56.9229 32.5298 56.8711 32.5415 56.7373 cv
32.5537 56.5908 32.4805 56.5381 32.3818 56.5283 cv
32.0449 56.499 li
32.0122 56.8838 li
cp
31.7861 56.1836 mo
32.3555 56.2344 li
32.8267 56.2764 32.8213 56.6514 32.8154 56.7217 cv
32.8066 56.8232 32.7642 56.9648 32.6548 57.0576 cv
32.73 57.1416 32.8003 57.2969 32.7832 57.499 cv
32.7754 57.5879 32.7427 57.7246 32.6089 57.8438 cv
32.5059 57.9346 32.3511 57.9375 32.2642 57.9297 cv
31.6416 57.875 li
31.7861 56.1836 li
cp
f
33.8711 56.8623 mo
33.8828 56.7256 33.7969 56.5947 33.6006 56.5771 cv
33.4619 56.5654 33.3555 56.6172 33.3374 56.7549 cv
33.3232 56.8711 33.354 56.8965 33.415 56.9307 cv
33.4453 56.9746 33.7051 57.042 33.7578 57.0576 cv
33.8335 57.0781 33.9951 57.1299 34.0762 57.2451 cv
34.2246 57.459 34.126 57.8564 33.9443 57.9814 cv
33.8208 58.0674 33.6572 58.0801 33.5029 58.0723 cv
33.4321 58.0693 33.2661 58.0293 33.1685 57.9326 cv
33.0508 57.8154 32.9995 57.6436 32.9995 57.4834 cv
33.2778 57.501 li
33.2754 57.5459 33.2827 57.6162 33.3267 57.6797 cv
33.3853 57.7627 33.4868 57.7939 33.582 57.7959 cv
33.6777 57.7998 33.7695 57.7705 33.8081 57.7314 cv
33.8735 57.665 33.8945 57.5342 33.8311 57.4463 cv
33.7461 57.3242 33.4717 57.3066 33.2964 57.2207 cv
33.1494 57.1484 33.0332 57.0088 33.0728 56.7363 cv
33.1113 56.4688 33.2832 56.2793 33.623 56.3008 cv
33.6973 56.3057 33.9561 56.3301 34.0791 56.5469 cv
34.145 56.665 34.1548 56.8242 34.1401 56.8789 cv
33.8711 56.8623 li
cp
f
35.1323 58.0996 mo
34.8462 58.0879 li
34.9131 56.3975 li
35.1987 56.4092 li
35.1323 58.0996 li
cp
f
35.7217 56.4268 mo
36.2534 57.6025 li
36.2842 56.4404 li
36.5703 56.4473 li
36.5259 58.1377 li
36.2437 58.1318 li
35.7119 56.9395 li
35.6807 58.1172 li
35.3945 58.1104 li
35.4395 56.4199 li
35.7217 56.4268 li
cp
f
37.2969 56.458 mo
37.583 56.4551 li
37.5874 57.0908 li
38.1387 57.0869 li
38.1343 56.4502 li
38.4204 56.4482 li
38.4316 58.1396 li
38.1455 58.1416 li
38.1406 57.376 li
37.5894 57.3799 li
37.5942 58.1465 li
37.3081 58.1484 li
37.2969 56.458 li
cp
f
39.5439 57.749 mo
39.6328 57.6436 39.6738 57.459 39.6709 57.2754 cv
39.6641 57.0918 39.6133 56.9111 39.5186 56.8115 cv
39.4443 56.7324 39.3521 56.7031 39.2607 56.7061 cv
39.1689 56.709 39.0781 56.7441 39.0078 56.8271 cv
38.9189 56.9326 38.8779 57.1172 38.8809 57.3008 cv
38.8877 57.4844 38.9385 57.666 39.0327 57.7646 cv
39.1074 57.8438 39.1997 57.873 39.291 57.8701 cv
39.3828 57.8672 39.4736 57.832 39.5439 57.749 cv
cp
39.7568 57.9482 mo
39.6445 58.0986 39.4766 58.1689 39.2993 58.1738 cv
39.1221 58.1797 38.9502 58.1201 38.8301 57.9785 cv
38.6963 57.8174 38.6133 57.5645 38.6064 57.3096 cv
38.5996 57.0547 38.6694 56.7969 38.7944 56.6279 cv
38.9072 56.4785 39.0752 56.4082 39.2524 56.4023 cv
39.4297 56.3965 39.6016 56.4561 39.7217 56.5986 cv
39.8555 56.7588 39.9385 57.0117 39.9453 57.2666 cv
39.9521 57.5215 39.8818 57.7793 39.7568 57.9482 cv
cp
f
40.4043 57.1201 mo
40.7949 57.0977 li
40.8613 57.0938 40.9766 57.001 40.9502 56.835 cv
40.9424 56.7148 40.8926 56.6475 40.7646 56.6543 cv
40.3779 56.6768 li
40.4043 57.1201 li
cp
40.0742 56.4033 mo
40.8467 56.3594 li
40.9863 56.3584 41.1318 56.4297 41.1836 56.6104 cv
41.2061 56.6836 41.2422 56.8027 41.2168 56.9502 cv
41.1904 57.0986 41.1328 57.1553 41.043 57.2285 cv
41.0938 57.2646 41.1875 57.3008 41.2119 57.4541 cv
41.2236 57.5225 41.2412 57.7451 41.2471 57.8311 cv
41.2529 57.9258 41.2773 57.9463 41.3096 57.9668 cv
41.3135 58.0293 li
41.0059 58.0469 li
40.9795 57.9971 40.9658 57.9463 40.959 57.8916 cv
40.9502 57.8086 40.9424 57.6729 40.9385 57.5508 cv
40.9277 57.4375 40.8555 57.3857 40.7559 57.3906 cv
40.4209 57.4092 li
40.46 58.0771 li
40.1748 58.0938 li
40.0742 56.4033 li
cp
f
42.3633 56.2324 mo
42.3877 56.5225 li
41.9854 56.5586 li
42.1045 57.959 li
41.8213 57.9844 li
41.7012 56.583 li
41.2822 56.6201 li
41.2588 56.3301 li
42.3633 56.2324 li
cp
f
43.4551 57.4385 mo
43.5322 57.3262 43.5547 57.1377 43.5342 56.9561 cv
43.5088 56.7744 43.4404 56.5986 43.3379 56.5088 cv
43.2549 56.4375 43.1602 56.417 43.0693 56.4287 cv
42.9785 56.4404 42.8926 56.4844 42.8301 56.5732 cv
42.752 56.6865 42.7295 56.875 42.751 57.0576 cv
42.7754 57.2383 42.8438 57.415 42.9473 57.5049 cv
43.0293 57.5752 43.124 57.5967 43.2158 57.585 cv
43.3057 57.5732 43.3926 57.5283 43.4551 57.4385 cv
cp
43.6865 57.6172 mo
43.5889 57.7773 43.4297 57.8633 43.2529 57.8867 cv
43.0771 57.9092 42.9004 57.8662 42.7676 57.7363 cv
42.6172 57.5889 42.5098 57.3457 42.4775 57.0918 cv
42.4463 56.8389 42.4902 56.5752 42.5977 56.3955 cv
42.6953 56.2354 42.8555 56.1494 43.0322 56.126 cv
43.208 56.1035 43.3838 56.1465 43.5176 56.2764 cv
43.667 56.4229 43.7744 56.667 43.8066 56.9209 cv
43.8379 57.1748 43.7939 57.4375 43.6865 57.6172 cv
cp
f
14.9702 16.6782 mo
15.418 17.0435 15.7627 17.6626 15.8052 18.1475 cv
15.8408 18.5278 15.7207 19.104 15.3789 19.5688 cv
14.7617 20.4038 13.6753 20.4634 12.5796 19.9092 cv
12.3398 19.7832 12.0352 19.5894 11.7422 19.356 cv
11.4434 19.1172 11.1582 18.8491 10.9561 18.5894 cv
10.2896 17.7222 9.98438 16.7661 10.7397 15.8198 cv
10.9478 15.5596 11.2764 15.2236 11.8716 15.1167 cv
12.7246 14.9365 13.3184 15.3691 13.5483 15.5444 cv
12.9766 16.2598 li
12.71 16.0801 11.9458 15.749 11.4292 16.5332 cv
11.1875 16.8979 11.2749 17.4019 11.5571 17.8237 cv
11.6763 18.0005 11.9292 18.2842 12.2344 18.5522 cv
12.5439 18.8154 12.9058 19.063 13.2603 19.1816 cv
13.6797 19.3198 14.0068 19.3105 14.2588 19.208 cv
14.3833 19.1519 14.4839 19.0762 14.5679 18.9707 cv
14.6538 18.876 14.7236 18.751 14.7705 18.6167 cv
15.0098 17.9551 14.5698 17.5801 14.3984 17.394 cv
14.9702 16.6782 li
cp
f
17.5537 16.9082 mo
16.874 17.5879 li
12.8472 13.561 li
13.5269 12.8813 li
17.5537 16.9082 li
cp
f
17.062 9.83203 mo
17.6821 10.5874 li
16.626 11.4517 li
19.6211 15.1016 li
18.8774 15.7104 li
15.8818 12.0605 li
14.7861 12.9575 li
14.166 12.2021 li
17.062 9.83203 li
cp
f
21.1958 7.26025 mo
21.7715 11.0991 li
22.8633 12.9038 li
22.0396 13.4004 li
20.9478 11.5957 li
17.7734 9.32275 li
18.6909 8.77002 li
20.7734 10.3784 li
20.2729 7.81641 li
21.1958 7.26025 li
cp
f
28.3735 9.2041 mo
28.5586 8.78125 28.5117 8.146 28.3252 7.55713 cv
28.126 6.97217 27.7871 6.43311 27.3877 6.20215 cv
27.0708 6.01758 26.7441 6.00977 26.4521 6.10547 cv
26.1597 6.20166 25.9019 6.40186 25.7559 6.73779 cv
25.5708 7.16064 25.6177 7.79541 25.8047 8.38477 cv
26.0034 8.96973 26.3423 9.50879 26.7422 9.73975 cv
27.0591 9.92383 27.3853 9.93213 27.6777 9.83594 cv
27.9697 9.74023 28.228 9.54004 28.3735 9.2041 cv
cp
29.2549 9.64746 mo
29.0371 10.2378 28.5635 10.6235 27.9976 10.8096 cv
27.4312 10.9956 26.8208 10.9653 26.2959 10.6191 cv
25.7085 10.2275 25.1963 9.48975 24.9277 8.67236 cv
24.6592 7.85498 24.6343 6.95752 24.875 6.29395 cv
25.0923 5.7041 25.5659 5.31836 26.1323 5.13232 cv
26.6982 4.94629 27.3086 4.97656 27.834 5.32275 cv
28.4209 5.71436 28.9331 6.45166 29.2017 7.26904 cv
29.4702 8.08643 29.4951 8.98389 29.2549 9.64746 cv
cp
f
32.8916 3.73096 mo
33.0483 4.69629 li
30.7559 5.06641 li
30.9639 6.34814 li
32.9834 6.02148 li
33.1401 6.98682 li
31.1201 7.31299 li
31.5117 9.72949 li
30.562 9.88281 li
29.6494 4.25439 li
32.8916 3.73096 li
cp
f
39.9971 7.50293 mo
39.9609 8.07959 39.6572 8.72021 39.2881 9.03711 cv
38.9995 9.2876 38.4609 9.52539 37.8843 9.51855 cv
36.8467 9.50293 36.167 8.6543 35.981 7.44043 cv
35.9438 7.17285 35.9248 6.81201 35.9443 6.4375 cv
35.9644 6.05566 36.0171 5.66748 36.1108 5.35156 cv
36.4287 4.30518 37.0293 3.5 38.2373 3.56348 cv
38.5698 3.58105 39.0342 3.65234 39.4668 4.07373 cv
40.1094 4.6626 40.1025 5.39697 40.0938 5.68604 cv
39.1792 5.6377 li
39.1709 5.31689 38.9956 4.50244 38.0576 4.53906 cv
37.6211 4.55518 37.2617 4.91943 37.083 5.39502 cv
37.0083 5.59424 36.9248 5.96533 36.8838 6.36963 cv
36.8496 6.77441 36.8584 7.21289 36.9683 7.57031 cv
37.0996 7.9917 37.2974 8.25244 37.5269 8.39746 cv
37.645 8.46582 37.7651 8.50342 37.8994 8.51074 cv
38.0269 8.52539 38.1685 8.50928 38.3052 8.46924 cv
38.9819 8.27832 39.0317 7.70215 39.0835 7.45459 cv
39.9971 7.50293 li
cp
f
41.5557 3.95703 mo
42.4941 4.16064 li
42.0381 6.25146 li
43.8467 6.64404 li
44.3018 4.55322 li
45.2402 4.75684 li
44.0283 10.3188 li
43.0889 10.1152 li
43.6377 7.59766 li
41.8301 7.20508 li
41.2813 9.72266 li
40.3428 9.51904 li
41.5557 3.95703 li
cp
f
45.5557 10.8853 mo
44.6445 10.5767 li
46.4795 5.18164 li
47.3906 5.49023 li
45.5557 10.8853 li
cp
f
50.6426 11.001 mo
50.3896 11.521 49.8662 11.9995 49.4033 12.1533 cv
49.04 12.2759 48.4512 12.292 47.9189 12.0674 cv
46.9629 11.6606 46.6553 10.6172 46.9443 9.42236 cv
47.0107 9.16064 47.1299 8.81934 47.29 8.47998 cv
47.4541 8.13379 47.6504 7.79443 47.8564 7.5376 cv
48.5498 6.68848 49.4111 6.17041 50.5068 6.68652 cv
50.8086 6.82861 51.2119 7.07031 51.4531 7.62451 cv
51.8252 8.41309 51.5391 9.09082 51.4219 9.35498 cv
50.5918 8.96436 li
50.7061 8.66357 50.8535 7.84326 49.9697 7.52197 cv
49.5586 7.37158 49.0879 7.57324 48.7422 7.94531 cv
48.5967 8.10205 48.3779 8.41357 48.1875 8.77295 cv
48.002 9.13477 47.8438 9.54395 47.8096 9.9165 cv
47.7715 10.3564 47.8555 10.6729 48.0137 10.894 cv
48.0967 11.0024 48.1943 11.0825 48.3154 11.1396 cv
48.4287 11.2017 48.5654 11.2402 48.708 11.2554 cv
49.4072 11.3345 49.6719 10.8198 49.8135 10.6104 cv
50.6426 11.001 li
cp
f
52.4951 12.0146 mo
53.4824 12.6934 li
54.2266 10.519 li
52.4951 12.0146 li
cp
53.541 15.3066 mo
52.7334 14.751 li
53.1172 13.6294 li
51.6924 12.6484 li
50.7744 13.4033 li
49.9668 12.8481 li
54.5449 9.07617 li
55.458 9.70459 li
53.541 15.3066 li
cp
f
57.5254 14.9058 mo
58.8662 16.2114 li
56.7197 18.418 li
56.3066 18.0156 li
56.7197 17.4253 li
56.3193 17.5151 55.6309 17.6626 55.0127 16.9741 cv
54.4453 16.3447 54.5283 15.8364 54.5459 15.5054 cv
54.668 13.8257 56.8057 11.8398 58.5137 12.3359 cv
58.7227 12.3975 59.0049 12.5303 59.2939 12.812 cv
59.6104 13.1201 60.0137 13.5889 59.9561 14.3281 cv
59.8848 15.1641 59.5176 15.5146 59.4443 15.6177 cv
58.8145 15.0054 li
59.1689 14.4019 59.0088 13.8862 58.6504 13.5376 cv
58.4209 13.314 58.1846 13.2256 57.8389 13.1948 cv
56.9971 13.2148 55.9619 14.2339 55.6924 14.8774 cv
55.499 15.3433 55.4092 15.9316 55.7461 16.3579 cv
55.9531 16.6138 56.3818 16.835 56.874 16.7246 cv
57.3135 16.6406 57.499 16.4502 57.6123 16.3428 cv
56.8496 15.6006 li
57.5254 14.9058 li
cp
f
59.8545 20.522 mo
60.3135 20.5693 60.9043 20.3325 61.4082 19.9761 cv
61.9043 19.6089 62.3154 19.123 62.4131 18.6724 cv
62.4922 18.3149 62.4004 18.002 62.2207 17.7529 cv
62.04 17.5039 61.7715 17.3188 61.4072 17.2822 cv
60.9482 17.2344 60.3584 17.4717 59.8545 17.8281 cv
59.3574 18.1948 58.9473 18.6812 58.8486 19.1313 cv
58.7705 19.4888 58.8613 19.8018 59.042 20.0508 cv
59.2217 20.2998 59.4912 20.4849 59.8545 20.522 cv
cp
59.7002 21.4946 mo
59.0723 21.4668 58.5615 21.1333 58.2119 20.6504 cv
57.8633 20.168 57.7061 19.5781 57.876 18.9736 cv
58.0713 18.2954 58.6172 17.5845 59.3135 17.0811 cv
60.0098 16.5776 60.8564 16.2813 61.5615 16.3091 cv
62.1895 16.3374 62.7012 16.6709 63.0508 17.1533 cv
63.3994 17.6357 63.5557 18.2256 63.3857 18.8306 cv
63.1914 19.5083 62.6455 20.2192 61.9482 20.7231 cv
61.252 21.2266 60.4053 21.5225 59.7002 21.4946 cv
cp
f
0.75 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
36.3818 72.3887 mo
56.2676 72.3887 72.3887 56.2676 72.3887 36.3818 cv
72.3887 16.4961 56.2676 0.375 36.3818 0.375 cv
16.4961 0.375 0.375 16.4961 0.375 36.3818 cv
0.375 56.2676 16.4961 72.3887 36.3818 72.3887 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
7.24561 27.9268 mo
6.47168 27.6528 li
7.68945 24.2324 li
8.46338 24.5063 li
7.24561 27.9268 li
cp
0 0 0 0 cmyk
f
4.14111 30.7393 mo
4.31982 29.7939 li
9.91504 30.8506 li
9.73633 31.7959 li
4.14111 30.7393 li
cp
f
9.51025 33.3672 mo
5.45947 34.9551 li
9.36572 35.2534 li
9.29297 36.2124 li
3.6084 35.7788 li
3.68066 34.8325 li
7.78564 33.2485 li
3.82471 32.9463 li
3.89795 31.9873 li
9.58252 32.4209 li
9.51025 33.3672 li
cp
f
5.87305 40.9902 mo
5.29688 41.0313 4.62109 40.8164 4.2583 40.4922 cv
3.97119 40.2393 3.66406 39.7368 3.59424 39.1631 cv
3.47119 38.1309 4.22168 37.3418 5.3999 36.9937 cv
5.66064 36.9209 6.01514 36.853 6.38916 36.8223 cv
6.77002 36.7905 7.16211 36.7905 7.4873 36.8408 cv
8.56689 37.0161 9.44482 37.5039 9.54297 38.7119 cv
9.56982 39.0444 9.56104 39.5151 9.20068 40.002 cv
8.70264 40.7188 7.97363 40.8105 7.68652 40.8408 cv
7.6123 39.9268 li
7.9292 39.8745 8.71289 39.5913 8.55176 38.665 cv
8.47754 38.2334 8.06885 37.9258 7.57373 37.812 cv
7.36621 37.7651 6.98779 37.7319 6.58154 37.7461 cv
6.17578 37.7666 5.74268 37.8345 5.40283 37.9912 cv
5.00244 38.1782 4.77051 38.4102 4.65771 38.6572 cv
4.60547 38.7842 4.58398 38.9082 4.59473 39.0425 cv
4.59766 39.1709 4.63232 39.3096 4.68994 39.4399 cv
4.96924 40.0864 5.54688 40.0581 5.79883 40.0762 cv
5.87305 40.9902 li
cp
f
6.06055 44.9648 mo
6.46924 45.1787 7.10645 45.1758 7.70703 45.0293 cv
8.30469 44.8711 8.86572 44.5713 9.12402 44.1885 cv
9.33008 43.8848 9.36035 43.5596 9.28516 43.2617 cv
9.20947 42.9639 9.02783 42.6924 8.70313 42.5244 cv
8.29395 42.3096 7.65674 42.3135 7.05615 42.459 cv
6.45898 42.6172 5.89746 42.918 5.63916 43.3008 cv
5.43359 43.6035 5.40283 43.9287 5.47803 44.2275 cv
5.55371 44.5254 5.73535 44.7959 6.06055 44.9648 cv
cp
5.55664 45.8135 mo
4.98291 45.5547 4.63086 45.0557 4.48486 44.4785 cv
4.33838 43.9014 4.41113 43.2939 4.79297 42.7939 cv
5.22461 42.2354 5.99561 41.7759 6.83008 41.5645 cv
7.66406 41.353 8.56104 41.3896 9.20654 41.6758 cv
9.78027 41.9336 10.1323 42.4326 10.2783 43.0098 cv
10.4248 43.5879 10.3521 44.1934 9.97021 44.6934 cv
9.53906 45.2529 8.76758 45.7129 7.93311 45.9248 cv
7.09912 46.1357 6.20215 46.0986 5.55664 45.8135 cv
cp
f
9.03418 47.4795 mo
9.56299 48.6807 li
9.65332 48.8867 10.0801 49.1396 10.5723 48.8594 cv
10.9443 48.6963 11.0972 48.4619 10.9243 48.0684 cv
10.4009 46.8799 li
9.03418 47.4795 li
cp
10.9087 45.6074 mo
11.9531 47.9814 li
12.1201 48.418 12.0674 48.959 11.5562 49.3301 cv
11.353 49.4883 11.0195 49.7402 10.5225 49.833 cv
10.0249 49.9258 9.77783 49.8096 9.44385 49.6143 cv
9.38672 49.8135 9.38184 50.1514 8.93018 50.4063 cv
8.72559 50.5244 8.04395 50.8379 7.78174 50.959 cv
7.48828 51.0879 7.45508 51.1875 7.42432 51.3125 cv
7.23145 51.3975 li
6.81592 50.4541 li
6.94238 50.3145 7.08447 50.21 7.25098 50.123 cv
7.50342 49.998 7.91895 49.8164 8.30322 49.6611 cv
8.64844 49.4951 8.72754 49.209 8.59375 48.9033 cv
8.13965 47.8721 li
6.07861 48.7783 li
5.69189 47.8994 li
10.9087 45.6074 li
cp
f
10.9507 51.7676 mo
11.5298 52.6758 li
11.6919 52.9297 12.0288 52.9033 12.2148 52.8613 cv
12.3906 52.8174 12.7319 52.668 12.9077 52.4639 cv
13.1655 52.1699 13.0771 51.915 12.9492 51.7148 cv
12.394 50.8457 li
10.9507 51.7676 li
cp
12.7007 49.5088 mo
13.8184 51.2588 li
13.9976 51.54 14.3838 52.1445 13.7783 52.9121 cv
13.4365 53.3506 12.7402 53.7422 12.3184 53.8369 cv
11.5103 53.9961 10.9976 53.7461 10.7437 53.2607 cv
10.1265 52.2939 li
8.4126 53.3896 li
7.89551 52.5791 li
12.7007 49.5088 li
cp
f
13.4272 57.9668 mo
13.8887 57.9678 14.4526 57.6719 14.9185 57.2666 cv
15.376 56.8506 15.7354 56.3242 15.7881 55.8652 cv
15.8311 55.501 15.7085 55.1982 15.5039 54.9678 cv
15.2998 54.7383 15.0137 54.5811 14.6475 54.5811 cv
14.1855 54.5801 13.6221 54.876 13.1558 55.2822 cv
12.6987 55.6982 12.3389 56.2246 12.2861 56.6836 cv
12.2437 57.0469 12.3657 57.3506 12.5703 57.5801 cv
12.7744 57.8096 13.061 57.9668 13.4272 57.9668 cv
cp
13.3711 58.9521 mo
12.7432 58.9883 12.2007 58.708 11.8047 58.2617 cv
11.4087 57.8164 11.1934 57.2441 11.3022 56.624 cv
11.4277 55.9287 11.8999 55.165 12.543 54.5918 cv
13.1855 54.0205 13.999 53.6396 14.7031 53.5957 cv
15.3311 53.5596 15.8735 53.8408 16.2695 54.2871 cv
16.6655 54.7314 16.8809 55.3047 16.7725 55.9248 cv
16.647 56.6201 16.1743 57.3838 15.5313 57.9561 cv
14.8887 58.5283 14.0752 58.9092 13.3711 58.9521 cv
cp
f
17.2241 58.8213 mo
18.2471 59.6465 li
18.4214 59.7881 18.9175 59.8164 19.2266 59.3418 cv
19.4819 59.0254 19.5098 58.7461 19.1753 58.4756 cv
18.1626 57.6582 li
17.2241 58.8213 li
cp
18.0283 56.292 mo
20.0488 57.9238 li
20.3984 58.2363 20.6006 58.7412 20.3174 59.3076 cv
20.21 59.542 20.0293 59.9189 19.6299 60.2295 cv
19.2305 60.541 18.958 60.5518 18.5708 60.5313 cv
18.6123 60.7354 18.7632 61.0381 18.479 61.4727 cv
18.3516 61.6719 17.8896 62.2646 17.7129 62.4932 cv
17.5112 62.7422 17.5273 62.8467 17.5576 62.9717 cv
17.4253 63.1357 li
16.6221 62.4873 li
16.6699 62.3047 16.748 62.1465 16.856 61.9922 cv
17.0229 61.7646 17.3081 61.4121 17.5786 61.0977 cv
17.8091 60.791 17.7476 60.5 17.4883 60.291 cv
16.6099 59.5811 li
15.1948 61.335 li
14.4463 60.7314 li
18.0283 56.292 li
cp
f
20.729 62.6934 mo
21.7676 63.29 li
22.3257 61.0586 li
20.729 62.6934 li
cp
22.0449 65.8926 mo
21.1953 65.4043 li
21.4834 64.2539 li
19.9834 63.3926 li
19.1348 64.2217 li
18.2847 63.7334 li
22.521 59.5928 li
23.4819 60.1455 li
22.0449 65.8926 li
cp
f
28.3008 62.2529 mo
27.9463 63.1631 li
26.6753 62.666 li
24.9609 67.0615 li
24.0659 66.7119 li
25.7803 62.3154 li
24.4619 61.7998 li
24.8164 60.8896 li
28.3008 62.2529 li
cp
f
31.9077 63.0957 mo
31.6846 64.0469 li
29.3257 63.4932 li
29.0293 64.7578 li
31.207 65.2686 li
30.9839 66.2207 li
28.8062 65.709 li
28.4702 67.1406 li
30.9355 67.7197 li
30.7124 68.6709 li
27.311 67.8721 li
28.6123 62.3213 li
31.9077 63.0957 li
cp
f
33.0723 67.9678 mo
33.8398 68.0264 li
34.2808 68.0596 34.6479 67.8838 34.9019 67.3389 cv
35.0313 67.0742 35.1309 66.6113 35.1602 66.1426 cv
35.1963 65.667 35.1626 65.1865 35.0181 64.8857 cv
34.8086 64.4297 34.5659 64.3252 34.2207 64.2988 cv
33.3574 64.2334 li
33.0723 67.9678 li
cp
32.4727 63.1846 mo
34.6401 63.3506 li
35.1196 63.3877 35.6992 63.7139 36.0288 64.79 cv
36.1069 65.0303 36.1816 65.4844 36.1367 66.0684 cv
36.0615 67.0586 35.7969 67.7451 35.5483 68.1338 cv
35.1821 68.7168 34.6284 69.0674 34.1426 69.0293 cv
32.0391 68.8691 li
32.4727 63.1846 li
cp
f
39.3052 66.8652 mo
40.4756 66.7168 li
40.1836 64.4297 li
39.3052 66.8652 li
cp
40.9326 63.208 mo
41.3672 66.6035 li
41.8379 66.5439 li
41.9512 67.4346 li
41.4805 67.4951 li
41.6357 68.7041 li
40.7451 68.8174 li
40.5898 67.6084 li
38.7832 67.8379 li
38.665 66.915 li
39.8955 63.3398 li
40.9326 63.208 li
cp
f
42.2725 64.3545 mo
42.0166 63.2344 li
42.8906 63.0342 li
43.1465 64.1533 li
43.6328 64.042 li
43.7949 64.75 li
43.3086 64.8613 li
43.8389 67.1836 li
43.8857 67.3896 43.9453 67.5361 44.0635 67.5088 cv
44.3965 67.4404 li
44.5615 68.1631 li
44.4424 68.2471 44.3086 68.3174 44.166 68.3584 cv
44.0244 68.3994 43.8838 68.416 43.7422 68.4004 cv
43.458 68.3613 43.1973 68.1719 43.0479 67.75 cv
42.4346 65.0625 li
42.0039 65.1611 li
41.8418 64.4531 li
42.2725 64.3545 li
cp
f
43.6973 62.458 mo
44.5459 62.167 li
45.2012 64.0801 li
45.2139 64.0762 li
45.2588 63.6729 45.4873 63.3135 45.8145 63.2021 cv
46.5654 62.9443 47.2061 63.1543 47.5508 64.1592 cv
48.4697 66.8389 li
47.6221 67.1299 li
46.8066 64.752 li
46.6846 64.3975 46.5039 63.9883 45.9287 64.1865 cv
45.4131 64.3623 45.4297 64.7451 45.541 65.0693 cv
46.3926 67.5508 li
45.5439 67.8418 li
43.6973 62.458 li
cp
f
53.1572 64.4814 mo
50.0273 60.9961 li
52.4492 64.9209 li
51.6318 65.4258 li
48.6396 60.5771 li
49.833 59.8379 li
52.8721 63.1045 li
51.3145 58.9209 li
52.5068 58.1826 li
55.5 63.0322 li
54.6826 63.5381 li
52.2607 59.6133 li
53.9736 63.9766 li
53.1572 64.4814 li
cp
f
56.2412 59.6768 mo
57.1396 58.8838 li
55.209 57.6377 li
56.2412 59.6768 li
cp
59.6904 59.458 mo
58.9551 60.1064 li
57.959 59.4629 li
56.6611 60.6094 li
57.1719 61.6807 li
56.4365 62.3301 li
53.8857 56.9805 li
54.7178 56.2471 li
59.6904 59.458 li
cp
f
58.6396 55.7627 mo
59.4746 54.749 li
59.6172 54.5752 59.6504 54.0801 59.1797 53.7676 cv
58.8672 53.5107 58.5879 53.4805 58.3154 53.8115 cv
57.4883 54.8154 li
58.6396 55.7627 li
cp
56.124 54.9365 mo
57.7744 52.9346 li
58.0889 52.5879 58.5957 52.3916 59.1572 52.6797 cv
59.3916 52.7881 59.7656 52.9717 60.0713 53.374 cv
60.3779 53.7754 60.3867 54.0469 60.3623 54.4336 cv
60.5654 54.3936 60.8701 54.2461 61.3008 54.5342 cv
61.4971 54.6631 62.084 55.1289 62.3115 55.3076 cv
62.5586 55.5107 62.6611 55.4961 62.7871 55.4668 cv
62.9502 55.6006 li
62.2939 56.3965 li
62.1123 56.3467 61.9551 56.2676 61.8027 56.1582 cv
61.5771 55.9893 61.2275 55.7021 60.917 55.4297 cv
60.6133 55.1963 60.3213 55.2549 60.1104 55.5127 cv
59.3926 56.3828 li
61.1289 57.8105 li
60.5176 58.5518 li
56.124 54.9365 li
cp
f
64.0088 50.1172 mo
64.5049 50.416 64.9365 50.9795 65.0479 51.4541 cv
65.1377 51.8252 65.1016 52.4131 64.8311 52.9219 cv
64.3408 53.8369 63.2744 54.0498 62.1094 53.6563 cv
61.8545 53.5664 61.5244 53.417 61.2002 53.2275 cv
60.8701 53.0342 60.5488 52.8086 60.3115 52.5801 cv
59.5264 51.8164 59.0869 50.9131 59.6973 49.8691 cv
59.8662 49.582 60.1426 49.2021 60.7168 49.0117 cv
61.5352 48.7129 62.1846 49.0557 62.4385 49.1963 cv
61.9756 49.9873 li
61.6865 49.8467 60.8809 49.6279 60.4834 50.4775 cv
60.2969 50.873 60.4561 51.3594 60.7969 51.7373 cv
60.9395 51.8955 61.2305 52.1396 61.5713 52.3623 cv
61.916 52.5791 62.3096 52.7715 62.6787 52.8389 cv
63.1133 52.917 63.4355 52.8604 63.6699 52.7236 cv
63.7852 52.6504 63.874 52.5615 63.9424 52.4443 cv
64.0127 52.3379 64.0635 52.2051 64.0918 52.0654 cv
64.2324 51.376 63.7432 51.0674 63.5469 50.9082 cv
64.0088 50.1172 li
cp
f
60.9102 47.8887 mo
61.2588 46.9912 li
63.2568 47.7646 li
63.9268 46.0361 li
61.9287 45.2627 li
62.2764 44.3652 li
67.5938 46.4229 li
67.2461 47.3203 li
64.8389 46.3896 li
64.1689 48.1172 li
66.5752 49.0498 li
66.2275 49.9463 li
60.9102 47.8887 li
cp
f
68.7588 41.1816 mo
68.6123 42.0664 li
64.8369 41.438 li
64.6572 42.5117 li
63.9404 42.3926 li
63.9941 42.0703 63.9678 41.6113 63.8125 41.3584 cv
63.6807 41.1484 63.4639 40.9302 63.1982 40.8604 cv
63.2959 40.2729 li
68.7588 41.1816 li
cp
f
66.8672 37.229 mo
66.6279 37.3408 66.5098 37.5347 66.4932 37.7266 cv
66.4775 37.9185 66.5547 38.1211 66.7295 38.2568 cv
67.0703 38.5347 67.7686 38.4873 68.001 38.3564 cv
68.209 38.2368 68.335 38.0562 68.3428 37.8701 cv
68.3506 37.6777 68.2734 37.4819 68.0986 37.3398 cv
67.9258 37.1973 67.2998 37.0098 66.8672 37.229 cv
cp
64.5342 37.0771 mo
64.3799 37.1797 64.2783 37.3682 64.2676 37.6182 cv
64.2598 37.791 64.2998 37.9663 64.4424 38.1133 cv
64.6895 38.3745 65.1572 38.4204 65.5361 38.1606 cv
65.665 38.0762 65.75 37.9131 65.7646 37.7402 cv
65.7803 37.5674 65.7256 37.3853 65.6045 37.29 cv
65.3604 36.9521 64.8154 36.8774 64.5342 37.0771 cv
cp
69.249 37.9155 mo
69.2236 38.4985 68.8477 39.0537 68.2197 39.2773 cv
67.6553 39.478 66.543 39.5068 66.0088 38.6304 cv
65.7646 38.8574 65.4072 39.1504 64.8838 39.1274 cv
64.6885 39.1191 64.4639 39.0581 64.2119 38.9385 cv
63.6729 38.7031 63.4053 38.2036 63.4268 37.6973 cv
63.4521 37.1143 63.6348 36.6729 64.0996 36.4297 cv
64.4521 36.2329 64.7988 36.1836 65.1035 36.1963 cv
65.5488 36.2158 65.9658 36.5288 66.0771 36.8545 cv
66.0928 36.8555 li
66.4082 36.0728 67.6641 35.9727 68.3486 36.4385 cv
69.0088 36.7432 69.2734 37.3389 69.249 37.9155 cv
cp
f
67.4385 34.6538 mo
67.918 34.5713 68.1338 34.5225 68.2559 34.1719 cv
68.3008 34.0396 68.3154 33.9292 68.3047 33.7886 cv
68.2871 33.5713 67.8154 33.2671 67.3408 33.3042 cv
66.8174 33.3452 66.3975 33.7896 66.5693 34.3745 cv
65.8291 34.4326 li
65.7939 33.998 65.6406 33.54 64.9775 33.5923 cv
64.4404 33.6343 64.2227 33.8633 64.2529 34.2534 cv
64.29 34.7266 64.6445 34.8403 65.292 34.7896 cv
65.3564 35.6147 li
64.9746 35.6445 li
64.1406 35.71 63.4443 35.1338 63.377 34.2837 cv
63.2939 33.2285 64.0361 32.7974 64.707 32.7446 cv
65.1514 32.71 65.5479 32.769 65.9717 33.1543 cv
66.2646 32.6938 66.5127 32.4619 67.3545 32.396 cv
67.9717 32.3477 69.0869 32.5693 69.1885 33.8545 cv
69.2139 34.187 69.2188 34.6431 68.6738 35.0977 cv
68.3203 35.3892 67.9033 35.4731 67.5068 35.5171 cv
67.4385 34.6538 li
cp
f
62.6924 29.3457 mo
63.5283 29.1763 li
65.0625 29.814 66.5723 30.1421 68.4502 29.8457 cv
68.6328 30.7383 li
66.4238 30.9385 65.4629 30.6821 63.8477 30.0801 cv
64.2979 32.2866 li
63.333 32.4829 li
62.6924 29.3457 li
cp
f
64.5127 25.0146 mo
65.2891 24.7534 li
66.4463 28.1909 li
65.6689 28.4521 li
64.5127 25.0146 li
cp
f
20.0854 23.8447 mo
20.0854 23.748 li
19.085 23.748 li
19.085 23.8447 li
20.0854 23.8447 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
22.1182 23.8286 mo
22.1182 23.7158 li
20.811 23.7158 li
20.811 23.8286 li
22.1182 23.8286 li
cp
f
23.6348 23.2959 mo
23.6348 23.2153 li
22.667 23.2153 li
22.667 23.2959 li
23.6348 23.2959 li
cp
f
22.2476 23.2959 mo
22.2476 23.1992 li
21.2954 23.1992 li
21.2954 23.2959 li
22.2476 23.2959 li
cp
f
21.1338 25.1357 mo
21.1338 25.0225 li
20.1499 25.0225 li
20.1499 25.1357 li
21.1338 25.1357 li
cp
f
22.0376 24.5386 mo
22.0376 24.4419 li
21.1016 24.4419 li
21.1016 24.5386 li
22.0376 24.5386 li
cp
f
19.9883 24.458 mo
19.9883 24.3447 li
19.0361 24.3447 li
19.0361 24.458 li
19.9883 24.458 li
cp
f
22.4893 22.0215 mo
22.4893 21.9248 li
21.7471 21.9248 li
21.7471 22.0215 li
22.4893 22.0215 li
cp
f
22.1665 18.6494 mo
22.1665 18.5361 li
21.4565 18.5361 li
21.4565 18.6494 li
22.1665 18.6494 li
cp
f
23.1831 18.7783 mo
23.1831 18.6655 li
22.4893 18.6655 li
22.4893 18.7783 li
23.1831 18.7783 li
cp
f
21.1338 19.3105 mo
21.1338 19.1655 li
20.4561 19.1655 li
20.4561 19.3105 li
21.1338 19.3105 li
cp
f
19.8916 18.6494 mo
19.8916 18.52 li
21.0532 18.52 li
21.0532 18.6494 li
19.8916 18.6494 li
cp
f
19.1494 20.4404 mo
19.1494 20.2788 li
20.1172 20.2788 li
20.1172 20.4404 li
19.1494 20.4404 li
cp
f
18.1328 20.4727 mo
18.1328 20.311 li
18.8911 20.311 li
18.8911 20.4727 li
18.1328 20.4727 li
cp
f
22.2148 21.6021 mo
22.2148 21.4731 li
21.2632 21.4731 li
21.2632 21.6021 li
22.2148 21.6021 li
cp
f
23.5059 21.6021 mo
23.5059 21.4893 li
22.5698 21.4893 li
22.5698 21.6021 li
23.5059 21.6021 li
cp
f
22.3281 22.6509 mo
22.3281 22.5059 li
21.3438 22.5059 li
21.3438 22.6509 li
22.3281 22.6509 li
cp
f
23.5864 23.8286 mo
23.5864 23.7158 li
22.8442 23.7158 li
22.8442 23.8286 li
23.5864 23.8286 li
cp
f
24.3286 23.8447 mo
24.3286 23.6997 li
23.877 23.6997 li
23.877 23.8447 li
24.3286 23.8447 li
cp
f
24.958 23.8286 mo
24.958 23.7319 li
24.6997 23.7319 li
24.6997 23.8286 li
24.958 23.8286 li
cp
f
24.3286 18.7783 mo
24.3286 18.6655 li
23.7158 18.6655 li
23.7158 18.7783 li
24.3286 18.7783 li
cp
f
23.2153 18.1489 mo
23.2153 17.9878 li
22.1665 17.9878 li
22.1665 18.1489 li
23.2153 18.1489 li
cp
f
28.2656 19.3267 mo
28.2656 19.2139 li
28.7339 19.2139 li
28.7339 19.3267 li
28.2656 19.3267 li
cp
f
28.4917 26.8779 mo
28.4917 26.7813 li
29.1211 26.7813 li
29.1211 26.8779 li
28.4917 26.8779 li
cp
f
27.4106 26.9106 mo
27.4106 26.7974 li
28.1367 26.7974 li
28.1367 26.9106 li
27.4106 26.9106 li
cp
f
26.1035 26.9429 mo
26.1035 26.8135 li
26.9746 26.8135 li
26.9746 26.9429 li
26.1035 26.9429 li
cp
f
28.54 14.0508 mo
28.54 13.9697 li
29.2017 13.9697 li
29.2017 14.0508 li
28.54 14.0508 li
cp
f
27.7012 14.083 mo
27.7012 13.9697 li
28.2656 13.9697 li
28.2656 14.083 li
27.7012 14.083 li
cp
f
29.1045 14.5347 mo
29.1045 14.438 li
30.0405 14.438 li
30.0405 14.5347 li
29.1045 14.5347 li
cp
f
28.0239 14.5508 mo
28.0239 14.438 li
28.7339 14.438 li
28.7339 14.5508 li
28.0239 14.5508 li
cp
f
27.0073 14.583 mo
27.0073 14.4702 li
27.7334 14.4702 li
27.7334 14.583 li
27.0073 14.583 li
cp
f
26.7329 15.4063 mo
26.7329 15.2769 li
25.9907 15.2769 li
25.9907 15.4063 li
26.7329 15.4063 li
cp
f
27.7495 15.4063 mo
27.7495 15.2769 li
27.1362 15.2769 li
27.1362 15.4063 li
27.7495 15.4063 li
cp
f
28.6045 15.4224 mo
28.6045 15.293 li
27.9106 15.293 li
27.9106 15.4224 li
28.6045 15.4224 li
cp
f
29.3467 15.4224 mo
29.3467 15.3091 li
28.8467 15.3091 li
28.8467 15.4224 li
29.3467 15.4224 li
cp
f
45.0791 18.0522 mo
45.0791 17.9717 li
45.8369 17.9717 li
45.8369 18.0522 li
45.0791 18.0522 li
cp
0 0 0 0 cmyk
f
43.9336 18.0684 mo
43.9336 17.9717 li
44.627 17.9717 li
44.627 18.0684 li
43.9336 18.0684 li
cp
f
42.8516 18.0361 mo
42.8516 17.9717 li
43.6592 17.9717 li
43.6592 18.0361 li
42.8516 18.0361 li
cp
f
43.8047 17.2939 mo
43.8047 17.2134 li
44.2881 17.2134 li
44.2881 17.2939 li
43.8047 17.2939 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
43.0293 17.2939 mo
43.0293 17.2134 li
43.5137 17.2134 li
43.5137 17.2939 li
43.0293 17.2939 li
cp
f
42.335 17.2939 mo
42.335 17.2134 li
42.8203 17.2134 li
42.8203 17.2939 li
42.335 17.2939 li
cp
f
42.8682 15.729 mo
42.8682 15.6479 li
42.3838 15.6479 li
42.3838 15.729 li
42.8682 15.729 li
cp
f
43.6426 15.729 mo
43.6426 15.6641 li
43.0781 15.6641 li
43.0781 15.729 li
43.6426 15.729 li
cp
f
44.5947 15.7446 mo
44.5947 15.6802 li
43.9971 15.6802 li
43.9971 15.7446 li
44.5947 15.7446 li
cp
f
45.4336 15.729 mo
45.4336 15.6641 li
44.8691 15.6641 li
44.8691 15.729 li
45.4336 15.729 li
cp
f
45.8047 16.2129 mo
45.8047 16.1484 li
45.3047 16.1484 li
45.3047 16.2129 li
45.8047 16.2129 li
cp
f
43.1592 16.2451 mo
43.1592 16.1646 li
43.9336 16.1646 li
43.9336 16.2451 li
43.1592 16.2451 li
cp
f
43.6904 16.5034 mo
43.6904 16.4385 li
44.2236 16.4385 li
44.2236 16.5034 li
43.6904 16.5034 li
cp
f
42.8682 16.5034 mo
42.8682 16.4385 li
43.3848 16.4385 li
43.3848 16.5034 li
42.8682 16.5034 li
cp
f
43.6592 14.0508 mo
43.6592 13.9697 li
43.0781 13.9697 li
43.0781 14.0508 li
43.6592 14.0508 li
cp
f
44.4004 14.0669 mo
44.4004 13.9697 li
43.8369 13.9697 li
43.8369 14.0669 li
44.4004 14.0669 li
cp
f
45.2881 14.083 mo
45.2881 13.9863 li
44.627 13.9863 li
44.627 14.083 li
45.2881 14.083 li
cp
f
49.6289 17.3262 mo
49.6289 17.2295 li
48.7568 17.2295 li
48.7568 17.3262 li
49.6289 17.3262 li
cp
0 0 0 0 cmyk
f
47.6436 17.2939 mo
47.6436 17.1973 li
48.3857 17.1973 li
48.3857 17.2939 li
47.6436 17.2939 li
cp
f
45.4502 17.2778 mo
45.4502 17.2134 li
45.9824 17.2134 li
45.9824 17.2778 li
45.4502 17.2778 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
47.2568 16.2773 mo
47.2568 16.1646 li
46.6592 16.1646 li
46.6592 16.2773 li
47.2568 16.2773 li
cp
0 0 0 0 cmyk
f
48.0635 16.2935 mo
48.0635 16.1807 li
47.5146 16.1807 li
47.5146 16.2935 li
48.0635 16.2935 li
cp
f
43.8848 20.4238 mo
43.8848 20.3433 li
43.2715 20.3433 li
43.2715 20.4238 li
43.8848 20.4238 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
44.6592 20.4238 mo
44.6592 20.3433 li
44.0947 20.3433 li
44.0947 20.4238 li
44.6592 20.4238 li
cp
f
45.6592 20.4404 mo
45.6592 20.3433 li
44.9502 20.3433 li
44.9502 20.4404 li
45.6592 20.4404 li
cp
f
46.6436 22.1182 mo
46.6436 22.0376 li
47.9668 22.0376 li
47.9668 22.1182 li
46.6436 22.1182 li
cp
0 0 0 0 cmyk
f
45.9336 24.5547 mo
45.9336 24.4419 li
45.3369 24.4419 li
45.3369 24.5547 li
45.9336 24.5547 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
44.6914 26.9106 mo
44.6914 26.7813 li
45.3213 26.7813 li
45.3213 26.9106 li
44.6914 26.9106 li
cp
f
44.8691 27.5557 mo
44.8691 27.459 li
46.5469 27.459 li
46.5469 27.5557 li
44.8691 27.5557 li
cp
f
43.7549 27.5879 mo
43.7549 27.4912 li
44.4336 27.4912 li
44.4336 27.5879 li
43.7549 27.5879 li
cp
f
43.7549 26.9268 mo
43.7549 26.8135 li
44.3682 26.8135 li
44.3682 26.9268 li
43.7549 26.9268 li
cp
f
44.5625 26.2329 mo
44.5625 26.1357 li
45.1914 26.1357 li
45.1914 26.2329 li
44.5625 26.2329 li
cp
f
43.7549 26.249 mo
43.7549 26.1523 li
44.2881 26.1523 li
44.2881 26.249 li
43.7549 26.249 li
cp
f
42.5615 26.249 mo
42.5615 26.1685 li
43.3682 26.1685 li
43.3682 26.249 li
42.5615 26.249 li
cp
f
42.5938 26.9268 mo
42.5938 26.8457 li
43.5293 26.8457 li
43.5293 26.9268 li
42.5938 26.9268 li
cp
f
41.2217 24.5063 mo
41.2217 24.4258 li
40.5283 24.4258 li
40.5283 24.5063 li
41.2217 24.5063 li
cp
f
40.7549 24.8452 mo
40.7549 24.7646 li
40.0283 24.7646 li
40.0283 24.8452 li
40.7549 24.8452 li
cp
f
41.7383 24.8452 mo
41.7383 24.7646 li
41.0127 24.7646 li
41.0127 24.8452 li
41.7383 24.8452 li
cp
f
40.2705 25.2485 mo
40.2705 25.1841 li
39.6094 25.1841 li
39.6094 25.2485 li
40.2705 25.2485 li
cp
f
41.626 25.2969 mo
41.626 25.2163 li
40.915 25.2163 li
40.915 25.2969 li
41.626 25.2969 li
cp
f
43.0625 24.8452 mo
43.0625 24.7646 li
41.9971 24.7646 li
41.9971 24.8452 li
43.0625 24.8452 li
cp
f
39.9961 26.2813 mo
39.9961 26.1846 li
39.0767 26.1846 li
39.0767 26.2813 li
39.9961 26.2813 li
cp
f
41.4004 26.3135 mo
41.4004 26.2168 li
40.3994 26.2168 li
40.3994 26.3135 li
41.4004 26.3135 li
cp
f
40.2705 26.9912 mo
40.2705 26.9106 li
41.1416 26.9106 li
41.1416 26.9912 li
40.2705 26.9912 li
cp
f
38.9634 27.0234 mo
38.9634 26.9106 li
39.9473 26.9106 li
39.9473 27.0234 li
38.9634 27.0234 li
cp
f
43.917 22.7314 mo
43.917 22.6509 li
44.5947 22.6509 li
44.5947 22.7314 li
43.917 22.7314 li
cp
f
45.5791 22.7476 mo
45.5791 22.6348 li
44.7715 22.6348 li
44.7715 22.7476 li
45.5791 22.7476 li
cp
f
46.5635 26.2329 mo
46.5635 26.1357 li
45.498 26.1357 li
45.498 26.2329 li
46.5635 26.2329 li
cp
f
43.6104 20.8438 mo
43.6104 20.7627 li
42.7549 20.7627 li
42.7549 20.8438 li
43.6104 20.8438 li
cp
f
44.7393 20.8276 mo
44.7393 20.7466 li
43.9492 20.7466 li
43.9492 20.8276 li
44.7393 20.8276 li
cp
f
44.1914 21.1504 mo
44.1914 21.0532 li
42.7881 21.0532 li
42.7881 21.1504 li
44.1914 21.1504 li
cp
f
44.3682 28.75 mo
44.3682 28.6528 li
45.0303 28.6528 li
45.0303 28.75 li
44.3682 28.75 li
cp
f
46.0635 28.75 mo
46.0635 28.6367 li
45.2881 28.6367 li
45.2881 28.75 li
46.0635 28.75 li
cp
f
26.5229 52.7432 mo
26.3125 52.7695 25.8486 52.6758 25.8882 52.8965 cv
26.0527 53.8213 27.1709 53.2979 27.0493 53.334 cv
27.1816 53.2959 26.7002 52.9492 26.749 52.8076 cv
26.6616 52.792 26.5864 52.7266 26.4907 52.7432 cv
26.502 52.7432 26.5122 52.7432 26.5229 52.7432 cv
cp
f
28.1045 53.3213 mo
27.9424 53.334 27.2241 53.4463 27.0767 53.5254 cv
27.0625 53.5342 27.2329 53.7432 27.2495 53.7588 cv
27.4492 53.9453 28.0537 53.7168 28.3286 53.7373 cv
28.4707 53.7471 28.5659 53.9219 28.6899 54.0283 cv
28.709 54.0449 28.7627 54.0439 28.7749 54.0283 cv
28.9097 53.8525 28.8369 53.7021 28.7178 53.5498 cv
28.7798 53.5137 28.7637 53.4307 28.8145 53.3887 cv
28.6714 53.2998 28.54 53.375 28.3916 53.4043 cv
28.2988 53.4229 28.2178 53.3135 28.1045 53.3213 cv
cp
f
25.2002 52.2588 mo
25.0708 52.2588 24.9346 52.2334 24.8174 52.2715 cv
24.708 52.3086 24.8599 52.3613 24.8452 52.4209 cv
24.9419 52.4297 25.0332 52.4482 25.1372 52.4365 cv
25.252 52.4219 25.3633 52.5176 25.4902 52.5176 cv
25.4814 52.4854 25.5156 52.4668 25.5151 52.4531 cv
25.5039 52.2695 25.3179 52.2393 25.168 52.2588 cv
25.1787 52.2588 25.1895 52.2588 25.2002 52.2588 cv
cp
f
43.4189 54.9316 mo
43.25 54.8467 43.0391 54.8662 42.8418 54.7646 cv
42.7197 54.7021 42.5508 54.7217 42.4033 54.7549 cv
42.2969 54.7783 42.3086 54.9355 42.3525 54.9873 cv
42.5928 55.2686 43.0508 55.4453 43.3418 55.1963 cv
43.3779 55.166 43.5049 54.9746 43.4189 54.9316 cv
cp
0 0 0 0 cmyk
f
49.3711 54.001 mo
49.1641 53.918 49.0537 54.0986 48.8965 54.1826 cv
48.8604 54.2021 48.8809 54.3496 48.9482 54.3379 cv
49.2227 54.292 49.333 54.4922 49.5654 54.5439 cv
49.6621 54.5635 49.7578 54.5508 49.8545 54.5508 cv
49.8457 54.5811 49.8643 54.5996 49.8867 54.6143 cv
49.918 54.4492 49.8447 54.2598 49.6924 54.2471 cv
49.4648 54.2295 49.2627 54.2051 49.1768 53.9697 cv
f
28.3008 58.4551 mo
28.292 58.499 28.2837 58.5498 28.3052 58.5791 cv
28.4565 58.7842 28.7212 58.7607 28.9077 58.9111 cv
29.0293 59.0088 29.1099 59.1436 29.2407 59.2168 cv
29.3081 59.2549 29.4395 59.2588 29.4736 59.2148 cv
29.6382 59.0088 29.5049 58.6973 29.3135 58.5801 cv
29.1201 58.4619 28.8638 58.4795 28.6226 58.4434 cv
28.562 58.4336 28.5186 58.3604 28.457 58.3301 cv
28.3618 58.2842 28.3184 58.3701 28.3008 58.4551 cv
cp
f
31.3359 58.9688 mo
31.1104 59.0029 30.6304 58.9463 30.7627 59.2422 cv
30.8237 59.3789 31.1162 59.3555 31.2827 59.4287 cv
31.4893 59.5186 31.707 59.6367 31.9204 59.7256 cv
32.0039 59.7607 32.144 59.8506 32.2241 59.7383 cv
32.3184 59.6045 32.4346 59.4482 32.3765 59.3018 cv
32.3286 59.1816 32.1416 59.2129 32.0132 59.1807 cv
31.9019 59.1523 31.8047 59.0674 31.7148 58.9756 cv
31.6025 58.8604 31.4497 58.9512 31.3359 58.9688 cv
cp
f
35.9478 59.2178 mo
35.5107 59.251 35.1011 59.376 34.6553 59.377 cv
34.5522 59.377 34.583 59.5771 34.4897 59.6006 cv
34.1279 59.6943 33.6914 59.4922 33.3965 59.7783 cv
33.6421 59.8604 33.8794 59.9307 34.1719 59.9219 cv
34.2134 59.9209 34.2583 60.0225 34.2998 60.0215 cv
34.5693 60.0127 34.8442 59.9131 35.1001 59.9932 cv
35.6406 60.1631 36.1616 60.2588 36.7183 60.1797 cv
36.7778 60.1719 36.874 60.1807 36.9136 60.1006 cv
36.9673 59.9883 36.9351 59.8779 36.8154 59.8525 cv
36.6309 59.8145 36.4536 59.8018 36.2686 59.8057 cv
36.2183 59.8066 36.2549 59.7266 36.2041 59.7129 cv
36.3462 59.5127 36.8086 59.6152 36.7427 59.4033 cv
36.6538 59.1182 36.2295 59.1963 35.9478 59.2178 cv
cp
f
39.3975 59.6787 mo
39.2739 59.7266 39.1299 59.7607 39.0181 59.7256 cv
38.7944 59.6563 38.5249 59.6777 38.3721 59.8477 cv
38.3555 59.8662 38.3638 59.9287 38.3677 59.9287 cv
38.6152 59.9609 38.8867 60.001 39.0947 59.9082 cv
39.2188 59.8535 39.3281 59.8047 39.4639 59.8105 cv
39.4551 59.7783 39.4727 59.7607 39.4961 59.7461 cv
39.4404 59.7588 39.4717 59.6504 39.3975 59.6787 cv
cp
f
29.7827 54.0674 mo
29.687 54.0889 29.6226 54.127 29.5273 54.1465 cv
29.4834 54.1543 29.4053 54.1787 29.3936 54.2588 cv
29.3789 54.3564 29.3984 54.4521 29.4937 54.4795 cv
29.6089 54.5127 29.7402 54.4951 29.8398 54.5361 cv
29.916 54.5674 30 54.6914 30.0615 54.6582 cv
30.1431 54.6143 30.1372 54.4482 30.0879 54.3672 cv
30.0381 54.2852 29.9224 54.2422 29.8525 54.1582 cv
29.8359 54.1387 29.8574 54.0928 29.8418 54.0693 cv
29.835 54.0586 29.8042 54.0635 29.7827 54.0674 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
49.2412 54.7461 mo
49.0947 54.6533 48.8594 54.5918 48.7627 54.7471 cv
48.7363 54.792 48.7891 54.8252 48.8232 54.834 cv
49.042 54.8936 49.2041 54.9668 49.5176 54.8135 cv
49.5645 54.791 49.8008 54.9434 49.8672 54.8291 cv
49.9375 54.7061 49.7686 54.6689 49.6572 54.626 cv
49.4014 54.5303 49.123 54.499 48.8584 54.542 cv
48.7959 54.5518 48.6816 54.6807 48.7686 54.7637 cv
48.875 54.8633 49.0195 54.9268 49.1768 54.9072 cv
49.2305 54.9004 49.3115 54.79 49.2412 54.7461 cv
cp
f
43.2695 52.6494 mo
43.1084 52.5332 42.8838 52.4883 42.7822 52.5801 cv
42.541 52.7979 42.2588 52.7646 41.9922 52.8447 cv
41.7881 52.9053 42.0117 53.1582 42.1494 53.209 cv
42.2998 53.2646 42.4463 53.3506 42.5967 53.3672 cv
42.9492 53.4053 43.3672 53.5225 43.6299 53.2627 cv
43.7578 53.1338 43.5 52.9785 43.3887 52.8252 cv
43.3535 52.7764 43.3379 52.6973 43.2695 52.6494 cv
cp
f
50.4609 52.0127 mo
50.3086 51.9268 50.0215 51.8008 49.9189 52.001 cv
50.1279 52.1025 50.3623 52.2354 50.5615 52.2188 cv
50.6699 52.209 50.5547 52.0664 50.4609 52.0127 cv
cp
f
41.4961 54.873 mo
41.5176 54.9238 41.4766 54.9746 41.4561 54.9912 cv
41.3516 55.0752 41.29 55.1787 41.1934 55.2393 cv
41.0547 55.3271 40.7393 55.2803 40.7705 55.4102 cv
40.8086 55.5732 41.1514 55.4912 41.3691 55.4258 cv
41.585 55.3623 41.7744 55.5264 41.9795 55.5049 cv
42.1162 55.4902 42.1699 55.29 42.0664 55.21 cv
41.9473 55.1182 41.7305 55.2295 41.6494 55.1143 cv
41.6025 55.0498 41.7881 54.9668 41.709 54.8857 cv
41.6719 54.8467 41.5723 54.873 41.4961 54.873 cv
cp
f
39.0767 55.0664 mo
39.0547 55.1934 38.9175 55.209 38.8418 55.2383 cv
38.6724 55.3047 38.4658 55.2354 38.272 55.2725 cv
38.165 55.293 38.1143 55.4365 37.979 55.4219 cv
37.979 55.4639 37.9673 55.5303 37.9849 55.5391 cv
38.3784 55.7383 38.8623 55.7021 39.3032 55.7256 cv
39.4922 55.7344 39.4287 55.4443 39.2988 55.3623 cv
39.2749 55.3467 39.2373 55.3623 39.2061 55.3545 cv
39.0684 55.3213 39.0674 55.1738 39.0767 55.0664 cv
cp
f
45.3682 55.2949 mo
45.4375 55.3213 45.4297 55.4043 45.4551 55.459 cv
45.5049 55.5635 45.501 55.6992 45.5469 55.8018 cv
45.7637 56.2861 45.8818 56.7842 46.1348 57.2656 cv
46.1611 57.3174 46.165 57.4111 46.1328 57.4434 cv
46.0996 57.4766 45.9873 57.4756 45.9658 57.4434 cv
45.6846 57.0439 45.5938 56.6025 45.4541 56.1572 cv
45.3672 55.8789 45.2588 55.6006 45.3115 55.2939 cv
45.3125 55.29 45.3486 55.2881 45.3682 55.2949 cv
cp
0 0 0 0 cmyk
f
44.9629 35.1172 mo
28.1558 35.1172 li
28.1558 34.8071 li
44.9629 34.8071 li
44.9629 35.1172 li
cp
f
44.9629 34.3101 mo
28.1558 34.3101 li
28.1558 34 li
44.9629 34 li
44.9629 34.3101 li
cp
f
44.9629 33.5195 mo
28.1558 33.5195 li
28.1558 33.21 li
44.9629 33.21 li
44.9629 33.5195 li
cp
f
44.9629 32.6963 mo
28.1558 32.6963 li
28.1558 32.3867 li
44.9629 32.3867 li
44.9629 32.6963 li
cp
f
44.9629 31.9219 mo
28.1558 31.9219 li
28.1558 31.6123 li
44.9629 31.6123 li
44.9629 31.9219 li
cp
f
39.7705 36.0269 mo
38.5278 36.0269 li
38.5439 36.5112 li
38.5439 36.5112 38.7373 36.6563 38.8345 36.6563 cv
38.9312 36.6563 39.5928 36.6724 39.7539 37.0273 cv
39.915 37.3823 39.7705 36.0269 39.7705 36.0269 cv
cp
f
37.1885 35.9785 mo
37.1885 36.3657 li
35.9946 36.3657 li
35.9946 35.9785 li
37.1885 35.9785 li
cp
f
37.2964 38.625 mo
37.3633 38.6514 37.4414 38.6636 37.5186 38.6465 cv
37.5957 38.6289 37.6045 38.5649 37.5596 38.5308 cv
37.4746 38.4678 37.3525 38.4673 37.3008 38.3706 cv
37.2876 38.3467 37.2891 38.314 37.2612 38.2939 cv
37.2295 38.4897 37.0024 38.436 36.8579 38.4229 cv
36.8579 38.4443 36.8511 38.4756 36.8613 38.4824 cv
36.9272 38.5239 37.0303 38.4736 37.0728 38.5283 cv
37.1323 38.6045 37.2217 38.5957 37.2964 38.625 cv
cp
f
36.5352 38.4551 mo
36.5137 38.4551 36.4849 38.4478 36.4746 38.459 cv
36.4116 38.5244 36.313 38.5728 36.2793 38.5234 cv
36.1992 38.4053 36.2896 38.2676 36.3413 38.1323 cv
36.3579 38.2642 36.4385 38.3706 36.5352 38.4551 cv
cp
f
36.5503 51.9111 mo
36.5698 51.8975 36.5815 51.8711 36.6001 51.8682 cv
36.8018 51.8379 37.0024 51.8506 37.1914 51.7969 cv
37.4106 51.7344 37.4751 51.4736 37.5156 51.2627 cv
37.5493 51.0879 37.2998 51.0244 37.1499 51.0635 cv
36.9497 51.1152 36.771 51.1895 36.5659 51.2275 cv
36.3862 51.2607 36.2124 51.1963 36.0371 51.2432 cv
36.0303 51.2451 36.0259 51.2979 36.0396 51.3096 cv
36.2144 51.458 36.4492 51.2715 36.6108 51.417 cv
36.6309 51.4346 36.6152 51.4795 36.5825 51.4893 cv
36.5581 51.498 36.5254 51.4844 36.5054 51.4961 cv
36.3994 51.5625 36.2671 51.5645 36.2017 51.6729 cv
36.1709 51.7256 36.1143 51.8047 36.1572 51.834 cv
36.2705 51.9111 36.3984 51.9795 36.5352 51.9844 cv
36.5449 51.9844 36.5137 51.9365 36.5503 51.9111 cv
cp
f
36.2476 52.4609 mo
35.9805 52.5107 35.7549 52.6631 35.4863 52.7021 cv
35.4019 52.6045 35.2407 52.6191 35.1685 52.7217 cv
35.0967 52.8252 35.1279 52.9619 35.2451 53.0244 cv
35.2754 53.04 35.3135 53.04 35.3379 53.0615 cv
35.4985 53.2002 35.6626 53.2939 35.8862 53.3467 cv
36.0278 53.3799 36.106 53.5322 36.167 53.6689 cv
36.1729 53.6826 36.1943 53.6924 36.2119 53.6855 cv
36.4463 53.5879 36.5254 53.2793 36.3931 53.083 cv
36.3359 52.9971 36.207 52.9424 36.2241 52.834 cv
36.2378 52.75 36.3223 52.7002 36.3882 52.6357 cv
36.4341 52.5918 36.4375 52.5107 36.3862 52.4844 cv
36.3408 52.4619 36.2808 52.4551 36.2476 52.4609 cv
cp
f
32.3882 50.8467 mo
32.0806 50.8809 31.79 50.835 31.4873 50.7842 cv
31.4414 50.7764 31.3887 50.7539 31.3398 50.7549 cv
31.2773 50.7578 31.2134 50.7822 31.2173 50.8467 cv
31.229 51.0547 31.1094 51.3564 31.3159 51.459 cv
31.5239 51.5635 31.7778 51.4502 32.0039 51.5508 cv
32.0444 51.5693 32.1074 51.5732 32.1406 51.5488 cv
32.2407 51.4756 32.1382 51.3408 32.1626 51.2344 cv
32.1196 51.2246 32.0874 51.1826 32.1055 51.1602 cv
32.1934 51.0518 32.3369 51.0732 32.4688 51.0547 cv
32.5181 51.0479 32.5576 51.0088 32.5742 50.9727 cv
32.5942 50.9297 32.6177 50.8984 32.6465 50.8633 cv
32.5596 50.874 32.4766 50.8379 32.3882 50.8467 cv
cp
f
29.292 50.6504 mo
29.1167 50.5752 28.9624 50.4883 28.811 50.3604 cv
28.7627 50.3193 28.6553 50.3291 28.5835 50.3564 cv
28.5015 50.3857 28.4204 50.4424 28.3374 50.4482 cv
28.1406 50.4648 27.9512 50.4775 27.7598 50.5322 cv
27.6353 50.5674 27.563 50.6758 27.5044 50.7852 cv
27.4731 50.8428 27.5146 50.8945 27.5811 50.9082 cv
27.6401 50.9189 27.6982 50.916 27.7573 50.9092 cv
28.0293 50.8779 28.3247 50.7471 28.5762 50.8564 cv
28.604 50.8691 28.6182 50.9385 28.6484 50.9512 cv
28.8442 51.0293 29.0479 50.9502 29.2446 50.8877 cv
29.3188 50.8633 29.4063 50.8936 29.4819 50.8721 cv
29.5181 50.8613 29.5332 50.8008 29.5103 50.7715 cv
29.458 50.7021 29.3706 50.6836 29.292 50.6504 cv
cp
f
23.5947 54.3486 mo
23.813 54.4502 24.0386 54.3574 24.272 54.3838 cv
24.3374 54.3916 24.3994 54.4229 24.4448 54.4668 cv
24.5186 54.5371 24.6113 54.5596 24.6699 54.6426 cv
24.6978 54.6826 24.7183 54.7432 24.6719 54.7793 cv
24.6123 54.8242 24.5361 54.8604 24.4697 54.8252 cv
24.4204 54.7998 24.3706 54.7861 24.3242 54.7607 cv
24.2188 54.7051 24.1455 54.5918 24.0283 54.5703 cv
23.8345 54.5342 23.645 54.585 23.4521 54.5439 cv
23.3965 54.5332 23.3755 54.4424 23.376 54.3809 cv
23.376 54.3154 23.4526 54.2793 23.5127 54.3037 cv
23.5723 54.3271 23.6084 54.376 23.6753 54.3809 cv
1 /0 /CSD get_res sepcs
1 sep
f
24.6274 55.1875 mo
24.4155 55.1982 24.2041 55.1357 24.0005 55.1602 cv
23.8975 55.1719 23.7905 55.2129 23.6763 55.2275 cv
23.6128 55.2354 23.5547 55.2969 23.5874 55.3604 cv
23.6108 55.4063 23.6831 55.4063 23.7393 55.3936 cv
23.769 55.3877 23.792 55.3564 23.8213 55.3535 cv
24.0669 55.3232 24.3008 55.3652 24.5439 55.3057 cv
24.585 55.2969 24.5981 55.2295 24.6274 55.1875 cv
cp
f
27.2524 55.1318 mo
27.1445 55.2725 27.0801 55.4326 27.0259 55.6055 cv
26.9956 55.7031 26.9863 55.7979 26.96 55.8955 cv
26.835 56.3564 26.5337 56.6758 26.5151 57.1563 cv
26.5991 57.1963 26.7017 57.1982 26.7319 57.1357 cv
26.7979 57 26.8228 56.8857 26.8711 56.7422 cv
27.0396 56.2412 27.1938 55.7539 27.335 55.2344 cv
27.3521 55.1719 27.3018 55.0674 27.2524 55.1318 cv
cp
0 0 0 0 cmyk
f
26.7651 21.6182 mo
26.7651 21.5215 li
25.1196 21.5215 li
25.1196 21.6182 li
26.7651 21.6182 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
28.5723 21.6826 mo
28.5723 21.5537 li
27.2168 21.5537 li
27.2168 21.6826 li
28.5723 21.6826 li
cp
f
24.3125 22.1021 mo
24.3125 22.0054 li
23.3442 22.0054 li
23.3442 22.1021 li
24.3125 22.1021 li
cp
f
25.1841 22.6509 mo
25.1841 22.5537 li
24.2158 22.5537 li
24.2158 22.6509 li
25.1841 22.6509 li
cp
f
25.313 23.3286 mo
25.313 23.2314 li
23.9575 23.2314 li
23.9575 23.3286 li
25.313 23.3286 li
cp
f
26.8618 23.3608 mo
26.8618 23.2314 li
25.6357 23.2314 li
25.6357 23.3608 li
26.8618 23.3608 li
cp
f
30.0244 23.3608 mo
30.0244 23.2314 li
27.3462 23.2314 li
27.3462 23.3608 li
30.0244 23.3608 li
cp
f
22.4731 20.9727 mo
22.4731 20.8438 li
23.6997 20.8438 li
23.6997 20.9727 li
22.4731 20.9727 li
cp
f
20.7305 20.9727 mo
20.7305 20.8438 li
22.0215 20.8438 li
22.0215 20.9727 li
20.7305 20.9727 li
cp
f
23.0864 26.0713 mo
23.0864 25.9102 li
21.376 25.9102 li
21.376 26.0713 li
23.0864 26.0713 li
cp
f
25.0547 26.1035 mo
25.0547 25.9424 li
23.6025 25.9424 li
23.6025 26.1035 li
25.0547 26.1035 li
cp
f
23.2153 26.8457 mo
23.2153 26.6846 li
21.6987 26.6846 li
21.6987 26.8457 li
23.2153 26.8457 li
cp
f
25.2163 26.8779 mo
25.2163 26.7168 li
23.667 26.7168 li
23.667 26.8779 li
25.2163 26.8779 li
cp
f
23.4736 19.2944 mo
23.4736 19.1978 li
22.0537 19.1978 li
22.0537 19.2944 li
23.4736 19.2944 li
cp
f
26.0552 17.2939 mo
26.0552 17.1973 li
25.0869 17.1973 li
25.0869 17.2939 li
26.0552 17.2939 li
cp
f
27.5718 16.6484 mo
27.5718 16.5195 li
25.7002 16.5195 li
25.7002 16.6484 li
27.5718 16.6484 li
cp
f
29.96 25.6519 mo
29.96 25.5229 li
31.2188 25.5229 li
31.2188 25.6519 li
29.96 25.6519 li
cp
f
31.1538 26.7813 mo
31.1538 26.6523 li
32.5093 26.6523 li
32.5093 26.7813 li
31.1538 26.7813 li
cp
f
30.7988 27.7173 mo
30.7988 27.5234 li
29.0566 27.5234 li
29.0566 27.7173 li
30.7988 27.7173 li
cp
f
33.0581 27.7173 mo
33.0581 27.5234 li
31.3799 27.5234 li
31.3799 27.7173 li
33.0581 27.7173 li
cp
f
32.2188 28.2334 mo
32.2188 28.0723 li
30.3794 28.0723 li
30.3794 28.2334 li
32.2188 28.2334 li
cp
f
34.2842 28.2979 mo
34.2842 28.1367 li
32.7031 28.1367 li
32.7031 28.2979 li
34.2842 28.2979 li
cp
f
22.7637 25.2002 mo
22.7637 25.0391 li
21.5049 25.0391 li
21.5049 25.2002 li
22.7637 25.2002 li
cp
f
23.9897 25.2002 mo
23.9897 25.0713 li
23.2476 25.0713 li
23.2476 25.2002 li
23.9897 25.2002 li
cp
f
26.4746 25.2324 mo
26.4746 25.0713 li
24.248 25.0713 li
24.248 25.2324 li
26.4746 25.2324 li
cp
f
51.167 30.8452 mo
50.8438 30.6851 50.5068 30.8369 50.1855 30.9199 cv
50.1592 31.0283 50.2471 31.063 50.3271 31.0264 cv
50.5986 30.9028 50.8887 30.9727 51.168 30.897 cv
51.1729 30.8955 51.1758 30.8496 51.167 30.8452 cv
cp
0 0 0 0 cmyk
f
51.04 31.2266 mo
50.7471 31.2642 50.4639 31.1333 50.1719 31.2031 cv
50.1338 31.2119 50.0869 31.2407 50.0723 31.291 cv
50.1016 31.2856 50.1094 31.3247 50.1377 31.3237 cv
50.251 31.3198 50.3604 31.3247 50.4766 31.2964 cv
50.6426 31.2568 50.7949 31.3433 50.959 31.3198 cv
51.0176 31.3115 51.0215 31.2778 51.04 31.2266 cv
cp
f
50.8896 31.5669 mo
50.6416 31.4844 50.3711 31.4756 50.1064 31.5112 cv
50.0625 31.5171 50.0254 31.5659 49.9775 31.5864 cv
49.9717 31.5889 49.9697 31.6206 49.9785 31.6265 cv
50.042 31.6719 50.1201 31.6567 50.1836 31.6377 cv
50.3008 31.6016 50.4111 31.6025 50.5215 31.625 cv
50.6221 31.6455 50.7158 31.7046 50.8125 31.6709 cv
50.8613 31.6538 50.9238 31.5781 50.8896 31.5669 cv
cp
f
50.7793 31.9277 mo
50.582 31.8506 50.3604 31.7969 50.1572 31.855 cv
50.0869 31.8755 50.0068 31.9102 49.9287 31.9385 cv
49.8984 31.9492 49.9141 31.9775 49.9287 31.9805 cv
50.1318 32.0166 50.3203 31.9365 50.5234 31.9736 cv
50.6064 31.9893 50.6865 31.9888 50.7666 32.001 cv
50.7686 31.9736 50.8037 31.937 50.7793 31.9277 cv
cp
f
50.7461 32.2588 mo
50.5869 32.2197 50.4258 32.2456 50.2627 32.1899 cv
50.1094 32.1372 49.9365 32.1851 49.8232 32.3003 cv
49.7979 32.3257 49.8721 32.3096 49.8799 32.3096 cv
50.1484 32.3203 50.4043 32.4028 50.6836 32.3477 cv
50.7227 32.3398 50.7705 32.2642 50.7461 32.2588 cv
cp
f
50.6533 32.5981 mo
50.5762 32.6382 50.4951 32.6421 50.4131 32.625 cv
50.1416 32.5688 49.8369 32.4888 49.6533 32.7271 cv
49.6797 32.7217 49.6836 32.7559 49.7012 32.7568 cv
49.792 32.7632 49.8721 32.7222 49.9609 32.7007 cv
50.0967 32.668 50.2188 32.7363 50.3477 32.771 cv
50.4824 32.8071 50.6436 32.7656 50.6533 32.5981 cv
cp
f
50.5596 33.0493 mo
50.418 33.0825 50.2715 33.0024 50.1348 32.979 cv
50.0127 32.9575 49.8848 32.9414 49.7686 32.9907 cv
49.6904 33.0239 49.6143 33.0654 49.5557 33.1304 cv
49.5918 33.1206 49.6084 33.1636 49.6357 33.1592 cv
49.7539 33.1421 49.8545 33.083 49.9756 33.0972 cv
50.1768 33.1201 50.3877 33.2871 50.5654 33.1528 cv
50.584 33.1387 50.5791 33.0444 50.5596 33.0493 cv
cp
f
50.4873 33.4639 mo
50.4463 33.4434 50.3809 33.4443 50.334 33.4287 cv
50.1904 33.3813 50.0371 33.3003 49.9004 33.3535 cv
49.7979 33.3931 49.7129 33.4746 49.627 33.5557 cv
49.5859 33.5942 49.4873 33.6055 49.458 33.6426 cv
49.4092 33.7056 49.5518 33.7031 49.6025 33.6885 cv
49.6602 33.6709 49.7168 33.647 49.7725 33.6079 cv
49.8994 33.519 50.0508 33.5112 50.2002 33.542 cv
50.2119 33.5444 50.2383 33.5537 50.2529 33.5601 cv
50.2949 33.5781 50.3496 33.5698 50.3975 33.5942 cv
50.4229 33.6074 50.4688 33.6094 50.4873 33.5933 cv
50.5254 33.5601 50.5215 33.4814 50.4873 33.4639 cv
cp
f
50.4443 33.8569 mo
50.2285 33.8569 50.0137 33.8247 49.8018 33.8726 cv
49.708 33.894 49.6279 33.9702 49.5361 34.0283 cv
49.5088 34.0459 49.4658 34.0303 49.4277 34.0361 cv
49.415 34.0381 49.4023 34.0547 49.4131 34.0645 cv
49.4756 34.1226 49.5547 34.1421 49.6357 34.1255 cv
49.7383 34.1045 49.8115 34.0278 49.9131 34.0088 cv
50.0703 33.9795 50.2285 34.0347 50.3779 33.9658 cv
50.417 33.9473 50.3867 33.8745 50.4443 33.8569 cv
cp
f
50.3955 34.228 mo
50.2607 34.1943 50.126 34.229 49.9922 34.2373 cv
49.9463 34.2402 49.9014 34.293 49.8584 34.3149 cv
49.7061 34.3887 49.5166 34.2729 49.3701 34.3823 cv
49.3369 34.4072 49.3721 34.4731 49.4277 34.4839 cv
49.5547 34.5088 49.6729 34.5132 49.7979 34.4976 cv
49.9238 34.4814 50.0166 34.395 50.1387 34.3643 cv
50.2197 34.3438 50.3145 34.3647 50.373 34.3027 cv
50.3857 34.29 50.3789 34.2524 50.3955 34.228 cv
cp
f
51.8223 30.8989 mo
51.9404 30.8184 52.084 30.8564 52.2158 30.8838 cv
52.5029 30.9438 52.7363 31.0908 52.9404 31.2959 cv
52.9795 31.335 52.959 31.3984 52.9609 31.4526 cv
52.7949 31.4565 52.6484 31.3442 52.5615 31.2275 cv
52.5205 31.1733 52.4707 31.1255 52.4092 31.1064 cv
52.2109 31.0439 51.9961 31.0698 51.8008 30.9946 cv
51.7451 30.9727 51.8047 30.9111 51.8223 30.8989 cv
cp
f
51.7334 31.2412 mo
51.8252 31.1738 51.9424 31.2017 52.0381 31.2236 cv
52.125 31.2437 52.2041 31.3027 52.2881 31.3467 cv
52.4111 31.4121 52.541 31.4624 52.666 31.5259 cv
52.7666 31.5771 52.8779 31.6387 52.8799 31.7754 cv
52.8213 31.7754 52.752 31.7949 52.709 31.7656 cv
52.4424 31.582 52.1533 31.5703 51.8848 31.4258 cv
51.8262 31.394 51.7451 31.3682 51.7197 31.2905 cv
51.7158 31.2744 51.7129 31.2563 51.7334 31.2412 cv
cp
f
51.6543 31.5605 mo
51.8398 31.5615 52.0117 31.5913 52.1836 31.6528 cv
52.2021 31.6597 52.2012 31.708 52.2217 31.7222 cv
52.3281 31.792 52.4258 31.8438 52.5557 31.8672 cv
52.6348 31.8813 52.7598 31.9951 52.7021 32.0474 cv
52.6465 32.0977 52.5488 31.9688 52.4707 31.9346 cv
52.3008 31.8604 52.1299 31.7983 51.9668 31.6943 cv
51.8672 31.6318 51.7139 31.7256 51.6104 31.6255 cv
51.5908 31.6074 51.6064 31.5601 51.6543 31.5605 cv
cp
f
51.5723 31.9683 mo
51.7422 31.9321 51.8945 31.9619 52.0547 31.9971 cv
52.2627 32.042 52.418 32.1772 52.6006 32.2847 cv
52.6367 32.3057 52.6758 32.3726 52.6465 32.4155 cv
52.6357 32.4312 52.5869 32.4287 52.5586 32.417 cv
52.3945 32.3452 52.2578 32.2217 52.0859 32.1743 cv
51.9961 32.1494 51.9053 32.1274 51.8154 32.0957 cv
51.7246 32.063 51.6211 32.1152 51.5469 32.0581 cv
51.5352 32.0493 51.5205 31.9795 51.5723 31.9683 cv
cp
f
51.4805 32.3506 mo
51.6758 32.2725 51.8799 32.3403 52.0879 32.3789 cv
52.0977 32.3809 52.0957 32.4263 52.1084 32.4312 cv
52.1973 32.4688 52.3076 32.4521 52.3916 32.4951 cv
52.4844 32.5435 52.5801 32.6001 52.6475 32.6841 cv
52.6797 32.7231 52.6553 32.7583 52.6172 32.7861 cv
52.5771 32.8154 52.5195 32.7754 52.4814 32.7617 cv
52.3398 32.7114 52.2158 32.6055 52.0703 32.5605 cv
51.9482 32.5234 51.8047 32.5474 51.6924 32.5029 cv
51.6104 32.4707 51.4805 32.519 51.4551 32.418 cv
51.4521 32.4067 51.4727 32.353 51.4805 32.3506 cv
cp
f
51.3467 32.7749 mo
51.5029 32.7456 51.6523 32.7451 51.7959 32.7866 cv
52.0322 32.8555 52.2803 32.8999 52.4648 33.0635 cv
52.4902 33.0854 52.5752 33.1445 52.5059 33.1914 cv
52.4717 33.2148 52.4297 33.1909 52.3994 33.1738 cv
52.2051 33.063 52.0127 32.9941 51.7969 32.9507 cv
51.6318 32.9175 51.4668 32.9312 51.3193 32.8633 cv
51.3066 32.8579 51.3086 32.8062 51.3184 32.7769 cv
51.3193 32.7734 51.3369 32.7769 51.3467 32.7749 cv
cp
f
51.2021 33.1787 mo
51.4131 33.1851 51.626 33.1313 51.8301 33.2144 cv
52.0352 33.2979 52.2256 33.395 52.4424 33.4614 cv
52.4502 33.4639 52.4541 33.5156 52.4404 33.5293 cv
52.3975 33.5718 52.3447 33.584 52.2842 33.5625 cv
52.1133 33.502 51.9424 33.46 51.7754 33.3701 cv
51.6445 33.3003 51.4844 33.3311 51.332 33.3164 cv
51.2783 33.311 51.208 33.3145 51.1729 33.2578 cv
51.1543 33.2275 51.2051 33.2114 51.2021 33.1787 cv
cp
f
51.0898 33.6216 mo
51.3379 33.5947 51.5752 33.5762 51.8311 33.6313 cv
51.8994 33.646 51.9512 33.6714 52.0225 33.6885 cv
52.1475 33.7188 52.2695 33.7627 52.3604 33.8604 cv
52.3711 33.8721 52.3701 33.9111 52.3604 33.9155 cv
52.3262 33.9326 52.2725 33.9326 52.2373 33.9155 cv
51.9346 33.7676 51.6211 33.792 51.2998 33.7563 cv
51.2197 33.7476 51.1475 33.7061 51.0752 33.6738 cv
51.0527 33.6636 51.083 33.6226 51.0898 33.6216 cv
cp
f
50.9629 33.9771 mo
51.3652 33.8525 51.7383 34.1177 52.1377 34.1611 cv
52.1924 34.167 52.252 34.1484 52.2959 34.1704 cv
52.3164 34.1812 52.3506 34.1895 52.3604 34.2129 cv
52.3877 34.2739 52.3418 34.2832 52.2969 34.3013 cv
52.1992 34.3394 52.0928 34.2954 51.9951 34.2681 cv
51.8232 34.2202 51.6572 34.1797 51.4912 34.1177 cv
51.3135 34.0513 51.1172 34.1289 50.9473 34.0571 cv
50.9346 34.0518 50.9346 33.9854 50.9629 33.9771 cv
cp
f
50.8799 34.333 mo
51.1006 34.3081 51.3174 34.2959 51.5381 34.3394 cv
51.7842 34.3872 51.999 34.4912 52.2334 34.5723 cv
52.2744 34.5864 52.332 34.585 52.3486 34.647 cv
52.3555 34.6699 52.3369 34.6875 52.3291 34.6909 cv
52.2979 34.7051 52.2529 34.7041 52.2197 34.6914 cv
51.917 34.5771 51.6211 34.4854 51.2979 34.4438 cv
51.1533 34.4253 51.0088 34.4482 50.8633 34.4321 cv
50.832 34.4287 50.8232 34.3921 50.8311 34.3569 cv
50.8369 34.3306 50.8711 34.334 50.8799 34.333 cv
cp
f
43.4004 14.5669 mo
43.4004 14.4863 li
42.2227 14.4863 li
42.2227 14.5669 li
43.4004 14.5669 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
44.6758 14.583 mo
44.6758 14.4863 li
43.626 14.4863 li
43.626 14.583 li
44.6758 14.583 li
cp
f
41.2383 15.1157 mo
41.2383 15.0352 li
42.5293 15.0352 li
42.5293 15.1157 li
41.2383 15.1157 li
cp
f
45.4502 15.1157 mo
45.4502 15.0352 li
43.707 15.0352 li
43.707 15.1157 li
45.4502 15.1157 li
cp
f
40.4473 14.0669 mo
40.4473 13.9697 li
42.8516 13.9697 li
42.8516 14.0669 li
40.4473 14.0669 li
cp
f
43.0947 13.5991 mo
43.0947 13.5181 li
44.2559 13.5181 li
44.2559 13.5991 li
43.0947 13.5991 li
cp
f
41.4004 16.2773 mo
41.4004 16.1646 li
42.8682 16.1646 li
42.8682 16.2773 li
41.4004 16.2773 li
cp
f
45.918 14.583 mo
45.918 14.5024 li
45.0469 14.5024 li
45.0469 14.583 li
45.918 14.583 li
cp
f
41.1904 13.6152 mo
41.1904 13.5181 li
42.8203 13.5181 li
42.8203 13.6152 li
41.1904 13.6152 li
cp
f
39.625 13.6152 mo
39.625 13.5181 li
40.915 13.5181 li
40.915 13.6152 li
39.625 13.6152 li
cp
f
41.4961 13.1953 mo
41.4961 13.0986 li
40.0283 13.0986 li
40.0283 13.1953 li
41.4961 13.1953 li
cp
f
38.1729 13.2114 mo
38.1729 13.0986 li
39.7705 13.0986 li
39.7705 13.2114 li
38.1729 13.2114 li
cp
f
40.5127 12.8403 mo
40.5127 12.7437 li
39.0923 12.7437 li
39.0923 12.8403 li
40.5127 12.8403 li
cp
f
41.4961 12.8403 mo
41.4961 12.7437 li
40.7705 12.7437 li
40.7705 12.8403 li
41.4961 12.8403 li
cp
f
42.1748 19.3916 mo
42.1748 19.2944 li
42.7393 19.2944 li
42.7393 19.3916 li
42.1748 19.3916 li
cp
f
44.4658 19.3755 mo
44.4658 19.2783 li
43.5137 19.2783 li
43.5137 19.3755 li
44.4658 19.3755 li
cp
f
45.4014 19.3755 mo
45.4014 19.2783 li
44.6758 19.2783 li
44.6758 19.3755 li
45.4014 19.3755 li
cp
f
43.3848 19.9399 mo
43.3848 19.8433 li
44.1426 19.8433 li
44.1426 19.9399 li
43.3848 19.9399 li
cp
f
13.0986 35.2847 mo
13.0986 35.2041 li
12.3403 35.2041 li
12.3403 35.2847 li
13.0986 35.2847 li
cp
f
13.5181 35.6235 mo
13.5181 35.5269 li
12.4854 35.5269 li
12.4854 35.6235 li
13.5181 35.6235 li
cp
f
14.6475 35.6235 mo
14.6475 35.5269 li
13.7441 35.5269 li
13.7441 35.6235 li
14.6475 35.6235 li
cp
f
13.6475 36.0591 mo
13.6475 35.9624 li
12.3726 35.9624 li
12.3726 36.0591 li
13.6475 36.0591 li
cp
f
14.6475 36.0591 mo
14.6475 35.9785 li
13.8247 35.9785 li
13.8247 36.0591 li
14.6475 36.0591 li
cp
f
15.6963 36.043 mo
15.6963 35.9785 li
14.8896 35.9785 li
14.8896 36.043 li
15.6963 36.043 li
cp
f
13.6147 36.4463 mo
13.6147 36.3335 li
12.6465 36.3335 li
12.6465 36.4463 li
13.6147 36.4463 li
cp
f
14.6152 36.4624 mo
14.6152 36.3657 li
13.7764 36.3657 li
13.7764 36.4624 li
14.6152 36.4624 li
cp
f
15.5996 36.4463 mo
15.5996 36.3496 li
14.8091 36.3496 li
14.8091 36.4463 li
15.5996 36.4463 li
cp
f
14.8252 36.8657 mo
14.8252 36.7529 li
13.7925 36.7529 li
13.7925 36.8657 li
14.8252 36.8657 li
cp
f
15.7935 36.8984 mo
15.7935 36.769 li
15.0024 36.769 li
15.0024 36.8984 li
15.7935 36.8984 li
cp
f
14.0508 37.7695 mo
14.0508 37.689 li
13.0342 37.689 li
13.0342 37.7695 li
14.0508 37.7695 li
cp
f
15.0991 37.7856 mo
15.0991 37.6729 li
14.2119 37.6729 li
14.2119 37.7856 li
15.0991 37.7856 li
cp
f
15.9546 37.7695 mo
15.9546 37.6567 li
15.293 37.6567 li
15.293 37.7695 li
15.9546 37.7695 li
cp
f
13.873 38.2051 mo
13.873 38.1245 li
12.8887 38.1245 li
12.8887 38.2051 li
13.873 38.2051 li
cp
f
15.0508 38.2051 mo
15.0508 38.1245 li
14.1152 38.1245 li
14.1152 38.2051 li
15.0508 38.2051 li
cp
f
16.0513 38.2051 mo
16.0513 38.1245 li
15.2285 38.1245 li
15.2285 38.2051 li
16.0513 38.2051 li
cp
f
13.8569 40.0605 mo
13.8569 39.98 li
12.792 39.98 li
12.792 40.0605 li
13.8569 40.0605 li
cp
f
15.2446 40.0605 mo
15.2446 39.98 li
14.0669 39.98 li
14.0669 40.0605 li
15.2446 40.0605 li
cp
f
16.6162 40.0444 mo
16.6162 39.9639 li
15.519 39.9639 li
15.519 40.0444 li
16.6162 40.0444 li
cp
f
14.4219 39.7217 mo
14.4219 39.6089 li
13.0503 39.6089 li
13.0503 39.7217 li
14.4219 39.7217 li
cp
f
15.6802 39.7383 mo
15.6802 39.625 li
14.5991 39.625 li
14.5991 39.7383 li
15.6802 39.7383 li
cp
f
16.7612 39.7217 mo
16.7612 39.625 li
15.9063 39.625 li
15.9063 39.7217 li
16.7612 39.7217 li
cp
f
16.3096 39.2861 mo
16.3096 39.1733 li
15.2446 39.1733 li
15.2446 39.2861 li
16.3096 39.2861 li
cp
f
25.9263 39.9478 mo
25.9263 39.835 li
24.9419 39.835 li
24.9419 39.9478 li
25.9263 39.9478 li
cp
f
27.2329 39.9639 mo
27.2329 39.8506 li
26.1519 39.8506 li
26.1519 39.9639 li
27.2329 39.9639 li
cp
f
25.8613 39.5767 mo
25.8613 39.4478 li
24.6836 39.4478 li
24.6836 39.5767 li
25.8613 39.5767 li
cp
f
27.0234 39.5605 mo
27.0234 39.4478 li
26.0229 39.4478 li
26.0229 39.5605 li
27.0234 39.5605 li
cp
f
25.6519 38.8345 mo
25.6519 38.7217 li
24.3931 38.7217 li
24.3931 38.8345 li
25.6519 38.8345 li
cp
f
27.0718 38.8184 mo
27.0718 38.7056 li
25.8291 38.7056 li
25.8291 38.8184 li
27.0718 38.8184 li
cp
f
25.8613 37.1724 mo
25.8613 37.0918 li
24.6353 37.0918 li
24.6353 37.1724 li
25.8613 37.1724 li
cp
f
27.1523 37.1885 mo
27.1523 37.0918 li
26.0391 37.0918 li
26.0391 37.1885 li
27.1523 37.1885 li
cp
f
25.8457 36.7046 mo
25.8457 36.5757 li
24.7319 36.5757 li
24.7319 36.7046 li
25.8457 36.7046 li
cp
f
26.9912 36.6885 mo
26.9912 36.5918 li
26.0068 36.5918 li
26.0068 36.6885 li
26.9912 36.6885 li
cp
f
26.168 36.3818 mo
26.168 36.269 li
24.7808 36.269 li
24.7808 36.3818 li
26.168 36.3818 li
cp
f
25.7808 36.043 mo
25.7808 35.9624 li
24.8774 35.9624 li
24.8774 36.043 li
25.7808 36.043 li
cp
f
27.249 36.0752 mo
27.249 35.9624 li
25.9263 35.9624 li
25.9263 36.0752 li
27.249 36.0752 li
cp
f
26.4746 35.688 mo
26.4746 35.5913 li
25.2969 35.5913 li
25.2969 35.688 li
26.4746 35.688 li
cp
f
27.2817 35.6719 mo
27.2817 35.5913 li
26.6362 35.5913 li
26.6362 35.6719 li
27.2817 35.6719 li
cp
f
27.1201 35.1396 mo
27.1201 35.0264 li
25.668 35.0264 li
25.668 35.1396 li
27.1201 35.1396 li
cp
f
27.104 34.7036 mo
27.104 34.6069 li
26.168 34.6069 li
26.168 34.7036 li
27.104 34.7036 li
cp
f
27.0879 33.9614 mo
27.0879 33.8809 li
25.2969 33.8809 li
25.2969 33.9614 li
27.0879 33.9614 li
cp
f
25.7324 33.3159 mo
25.7324 33.1709 li
24.2158 33.1709 li
24.2158 33.3159 li
25.7324 33.3159 li
cp
f
0.25 lw
36.5068 60.8193 mo
50.0693 60.8457 61.1055 50.0361 61.1055 36.3818 cv
61.1055 22.7275 50.0361 11.6577 36.3818 11.6577 cv
22.7275 11.6577 11.6577 22.7275 11.6577 36.3818 cv
11.6577 50.3701 23.519 60.7939 36.5068 60.8193 cv
cp
@
54.7822 36.7129 mo
54.7666 36.6943 54.6758 36.6821 54.6729 36.7373 cv
54.6318 37.7373 54.4385 39.9551 54.7744 41.0869 cv
55.002 41.8516 54.8047 39.5366 54.8564 39.5444 cv
54.8564 39.3906 54.8154 39.2388 54.8115 39.0918 cv
54.79 38.4263 54.708 37.771 54.8838 37.0903 cv
54.9209 36.9487 54.8721 36.8125 54.7822 36.7129 cv
cp
0 0 0 0 cmyk
f
55.8252 39.1016 mo
55.7197 39.1104 55.6025 39.1704 55.5674 39.2866 cv
55.5146 39.4619 55.667 39.4873 55.7471 39.6172 cv
55.7646 39.6455 55.7822 39.7163 55.7998 39.7251 cv
56.001 39.8311 56.0625 39.6211 56.0127 39.4492 cv
56.0078 39.4331 55.96 39.4219 55.9619 39.4175 cv
56.0088 39.2505 56.0508 39.083 55.8252 39.1016 cv
cp
f
55.9531 38.2861 mo
55.7842 38.2832 55.5547 38.2002 55.4053 38.3828 cv
55.5869 38.5938 55.8838 38.5674 56.1064 38.5293 cv
56.3535 38.4868 56.6016 38.4546 56.8574 38.4473 cv
56.6572 38.125 56.249 38.292 55.9531 38.2861 cv
cp
f
56.9541 38.96 mo
56.8818 38.9619 56.9424 39.0112 56.9219 39.0278 cv
57.2197 39.2227 57.6143 39.084 57.9551 39.125 cv
57.9277 38.9551 57.7783 38.9355 57.666 38.9473 cv
57.4248 38.9727 57.1904 38.9536 56.9541 38.96 cv
cp
f
0.125 lw
1 lc
56.3574 36.0107 mo
56.583 35.8174 57.1318 35.688 56.874 34.978 cv
56.7412 34.6128 56.9004 30.7002 56.583 30.5571 cv
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (GR00026) ()%%Title: (City_Seal_blu_286.eps)%%CreationDate: 5/15/09 2:14 PM%AI9_DataStream%Gb!Q;kuJ`pdcc)[]n<POfgY992IL\^_T",bGf'SnK0^,@U1a?"EM*2A/=Dc'W[a9qqTO?]bS`?sb)G+cbD=53A\J&l]"W%[?>ojj%WGHj/g%LrAm20ET%SE#/md3lHRk.Jqc+np_<=f,6_eKaMJZ.R0D=NC[\(SKAC,T8/_bU*/dHthYn(XE$;Q6t1k?_u^hD_mtSS#Q:%%]]fL9^?0dl1Y,QrDW<nd9.*<*!"_0=RWV$s4pd,j51!rCL,a\>rN8^lW9)3]r(S[Kb+.drdEScogE`194_&fai78gf5>V!b0u,]%mnZ-[h^Vi]=5K;VjYdUopU)cNEnRC;?J,ni0s's<B&gVQCL!3Mmb=*$Hg2'iRnFMj`N7AfTVh``Im%QE^?tVTp"jPtomMQaGLC.g%gt-l^S8R*Nb'*!js)JE#KD<tRX1fes26EnE)/e+:_lDgQ6.lbWJ=';">)gO/[uGkhPn3.]\#iuKHUBT:G^DkPZe"@]hu8\(CsTK2%IV9>ckioh/3GmUG`5LV\KiIH4IGMCL4$qKR^9>G])u)WRqNhPZe2tDa4gCX5pJ3L"V/fu5-aE0KqVR8BXVitbiM"X[Bn+"V0%b^l%TBM=drY9KkQNQ+r];ALBRgtl@/Z0T"gn'@>RY2O)!"t.E([H&hp;i$7mI/f\')0Ycf]h0t8,L<8aoVHnh6.%:s$QU3lDGJ>YLdH-%^Vr\!3/I&@7eP\A[(+YthIniV"iNU,XG\rSM%+I^r_;;"htTW>IsRdEj6qp#D,FIfQbZaMO'dKs_tthOBrBF/HJ!$3C6tgLY1o;&%nmT4U;dR4W['%"sAVSUY1=Zr_g?i5VJlV-G%l:ck:-,UVI[<9(rb5X16tHQjIiUc0p)8Pq*FHW>Fis$@Vs[:TUtradrJQ/'h./3+%U&9C1)i%Ohoq=f1h;8h]8@BcRa+%AFU3(Pdio>MEp5SqIrU'&KrSco4.]n8dn#@]12FM'7N-?1;IJbPo>@:\7h7RR]hfbL:DU]ea%ohOuLlFq99GIQ1;%`Ys1pa'%?2Ji`UCAl\mDa.p+<02Fl])9+qH,r>^bOk,/FY->oT''c*gW]t2roN10qEk@sgUl.YP/da7nU8)N%n!"Ee:]gG)qcD.N3(Y<]6L%k__Pi[4KnXoC3-9k9^&Z@BrI$=ELrK<nqd1rQ;-k_HIhbmfJ%G)sT.)G-Y;[E^q9n9mX^KB_=i;_<%-lL7rm_iI&-->uV99T;mjg2_@O*BTE56CJ\Z;Wq8J,O8LY6FRbW!(o@m(0Pp1\/+V?51YAs'c5PLna;H*91I581;.UG2i"sPU0j*%Qb'"WdGs^g)p@lnZ;Edss$%>"hd8:KcY!2iduX`^Q_pOM-N-X:(+Y[q4pg_n91b7<<'"8co-&lPb[T2BaRp;9Rr0eHS6]\EoSLjQ%T_Ue\(5NU=%-62F.C<sCHhC:u@T!+?)\7DR?GXM/4+F1-[_;7k;+&F(dgu-;lPZsO.i1[#EF$r'noV4p]d&Uf6/@<>02\`%-kq5c%,db'/)P4Zl\?-CbA]RmK^-e"6idgK_f:I<Unki]>ZAt"k',\^8aq')aFNWFok0lK]4Ojs1#:0L=]PQ1]fB"LsZ'-S0Z[=?;ii^hG%\naP'b.ieOj:o9B;Q#VUbEj@ITEKo7\qZ_&B_nAFpk7usG-;mBX&R!bH7BD#X8=$,5jR]Rd=p=j0ePJ"gPB;;nC2drrQN=L>)j>.%c:$=uSUYAg/Gd!-BJ<W9F_s(LX>p^C:?/o.;QU%ZB*Yj=6<?_6WFFc_]6W9HT,3/We%*/>l8<hD/Zs4WFl)$U0T%UCf1K?)#\CHn%88K1>(&mIrrP2>qrMnD]poE99^(u+Y=C;s)G-'n7FgX=;mq.f"#p,q'+r?dL?U$WSG,nJJ@dXCCJ?:hVAn9"<D9V1'lgbh5OBGt-%@WMgGn3%7jnG)Y(@p8jDB>Vl`M*g7;XUD^GAE+2*ec/>KIHdrP7idKdLNbQ`mg9M;s&htfcgAWHDB6ZF&BMd%/%Qc$nT,lMnmBn3%ruY!MpXd1ZMn/A-p_\,ADm0/Ldph47qO[(I#sE(&2iZSL2an4C.f#^5_$,VeYM8C"9p&:m_>ikpe3292;>jd27">678#*65#)q^%%L$6[/H8NcnO>W!?G#&AH[DoBkh7+.:<I^S>!p5PCn$r>G\SC&Fk^T-"$Qeu5mR"8-X'Z6CB[hKa,PL/o[.4pa?!?2RFpqsP0Ooj6%_bQu]kkrsZT/?Q'.rS_Np?J!RpU@iNPnf0RMR(BFLKAia>.sV+WW'M,5&<GSX4?joK?!TO;cC"/IFgrPL5'Uf)]e3:Y8leS\dck3%s&'$T:VHY[<hnI;FkV'1oU$MM+63^^Il07t@%lp&_ql%__Pdo\*qZ0I["Bt.e[Xn$8\V:`f3;<JP*2baFas92('Oj1Iu?bk/S7P1%<.^EB[6*!"CEa!E"Y;=@Dtf"^/:5#H;45CYLJF+6S+sfkQFS>h1@Hbm&c#rtNN`1eAgq#_Qkl1MZup^AG-fs;al4n#q>2mQ,oY&]%UplgO)d!A_T8!.8VgTHO><g"%::2NckB3kI?#=e7=*$ILAcC+9?[A^><W0WTE=FJn=&.)Hd)5h4hq8s$b$;?cGuH38oE=uOG3RLN%pq(fQmD@u'J20G%CKqAuF4FthA9[iNX&m!KO"Eq<RI8P#*0lf?;R^u0poAD,e!FtFneOu0DNRu[GJ/4t=5LI!eZ3koLUP'i1A<+,%O?.U=:1&6CY'X*^DKI]:R9Br2;le<2QR$H@S,[r9-Abr1)5(j"*>\n5%p/-!"hH]]`rajg\Z@.@"H2R@#Inj2&_$:"\gg)ZY]RS/%OuH,JS*MR^M!//&28V(r>!9$S5;t4<)so\rC42R8rqtaEgJ%Dr/&+RUbsSE-lW,(/[*:/E#Su(&Q%DBiIQ.j^qu4<\$n(&\Bg_.Y%mNqluB%uM`RS9["jeF[_;Wm!WB(!B5\5NpiKosiiW>_X6[@Ad#G7-$MJkl6,14r^=#8HStg'-n^^6`3:'/;<#%gV)@j^TDTD?'I_%D=e#I]1E_&RpY*5f8]4cn!8,7RT0ocq3%#(JH`IKS6N/Q]tE_ilT+SBMGfj;ikdI/R1!1LAB#Zq.d(mg8h/Nbo"KQqQd6f/SQd99%%[\Xmpe-^tRs*tEG`u[&H>%M@A%49>$IQcgqSQ^_K?N@I$cmUI2Biu[Z*Qj")@ocRRRQLt-0sC\eG<5u2g*_>;/s67C6)#Bl!8cM%#NW>d.u+dHZ&[sK1.VfS-0qknl/kZW,h%RuU_/IcKb^:0:pq#NH3]_da[A/jK&Y%$kH5cmFb.E0f*0<3]e3,B6/46V^5(";Ft<%>%U9rGRC=(44@Ne<#H>t[]2DPE":6N,[DampPhaPTt86&'31j(Xa*%Ai/KUg]Z9be(.(1O\ZRn*HCkTCW;Wqgi[m>D=[HT)DihZaN%%i&J.lMjH`AmFTh3o%)bSGbLdbIaU/$;3?O;YH-\aH#6@937_pPcd8YBX+5"cn+G@ZqY6;J4$qd$SKk'uZ0pH8K4#q+S>h0N*MJX<%\ddk/l;YK5?\/r$`^Ii/+E\a)7.rHlj]4IKWK_=*B[m)p,ROB6>7`]TA,kdtZje^\Cp<Hj82m.8DPH=TU9s]P9Jbuhm7$c8U=),o%qDE5'F>G6;WPmbS3C6T>)U'53!(/'>T-Z!&0o*S_/N<u73-u;7bGO]JIBKMNiQ7hR_p0%J)E_</qi>"C5oTJB"K^Zk#aj\^dNZJL%#TVm4j,Lac^tigWX8uGd<ns>Hh!1f\7:U?*@!6G\VJ!eRQLj8!P-$oq<.Ek^fCnK$Dgh4Y\9#.Vnn>SJq9(a);.$H9jWj5+@`I81%Slf*b3\",Vk#Up,9N2qmrl"`ZT4@Z,?+"IApga,nicOS0O4^bEqVgUpZ2=.K.eG6Y>Oc<4DDjQA:KqlF[Ek?>HP=HjlfMJqZ0Uhh%pQo*FRpWV[>qlr'mS[V;FmeDXqTnoeZ+p<^F^G!Y=qJ[12+>L%%;a"SfU-pqYatZVE-Lj`,,;=\$aW>uf;a+!"1Q4-_;M!XPPp2M%h+m-UpS@EJbP[s:kT!CaUUk,TFG&u;-gO;"mZhejb%s@65"%3Xq/1<3#gC*uXNSo-/('XMJK/I0irkFHs'WT1mISSIUYe,i&&*Hc%Dfj&"i@aNrW$WGEZ#kFg^9:tOBoRGJq`C)87c-m5GIhC_PMYMsq9=1n/^9S2Bk-O*bo\KI2!Wpkf;Hp'dMm=@^<O?rIO@W8>/=fX%D#\H\Sj(r]dMb!OfD"072!VcECis?U1E&FV@;PsiIk4bp)s`EQM)VW^G8DX+NUH.:-^iG!I9AT+M2dt1CR88X.($jlqRQ4bBr)#n%cLe=*oXXqnhOG1;3pjY`<&<+9dDMr_7&-p>]Qbi)'$[FG008!/=sk2I^9)b]p8",1k`=8d7u9^?'l%o9d[kpd/\TOj'ApDTD]2.1%NIKZM=a?NRf$YJ-H[WXS<^1)qm`k+`Qa\'b)g0HPNU>);TA&LemGIp(;:G@Q2-R$D>Nu%Zm>ONJQ^,26_+%J#F^o(`kGRrAGDrq-%AZ@KPT;PG'n)aHs2gW1l*FI@Qeb@?E:[clD]Br^q?euVWJ&-e-M8kIYB[,s'g>5\T_%Mb(&'=cSqtd.\dAZff^UrA%Ok&ZmfZ=B)%hnuBq^!XO6V71q8muL?c4aoP*B/[?Y34=gF;6e16B"or8`tpNbdMq$"D7ooFAS+!2d8*]ChjKIi.`XIiIpQ`Gp$7Y.C&d-dHD<@0%Ek;5Cc#S-*&+<gmNJ_k82uDiKk=%&)d1=7[ec!bb7LrP./q/3Gr]RA\YqFouh!J[5p!:0q]q*R7\%qdq]jF<Ko_kD;k(bXpZ-cGq%3S',%KiVf\S]^KX6q3s7VoI;)o3GOpV+N[k^[P^lmIu;ddHo:ko$BL)p_V`LV*1#%1c&KRoiZ+\RTc-9NK:GYr1%%rK18.)MDm'4%rcs_rJ%:bZ[+g&;b`2<sk7T#1pf@DU6]J7@RsS#-V$`=$q+g[+AHJ=&p/@g$"Zb"j?6:WOIGn%uX60CJJe63l3:D^QPUcCfd`-a+%r_@Vtoue+-C*Z='=_kD+rd?_fAE<0N-0@%b9-:33UOji1"M\V/I\%*PD:C5OGc,^\?i=XkAUZfBBJr(dID$4:>NL^P=P@sbH8f2B%HkgGdC2QDirR:6L?bO7fOM1)="b!;sCYcW_MnUQqio/bB\'2%,21+sOm46JLpjQ0A0pPmgc$K'E.e@FmY-i"UJ%bdLla<1drpLq8%>[?c0Hjt7+mCkUJdaqi)O("dNl.iBT:4JZbQMP4[o^^gX/,Gj5Egq,oS]n:0/!l/-BjZ/*5(D<l>0a5JZgu#+bl%=8GPJD3q=X0>%[Jj%K=N^C#h=f!PXKSAPa4G4kf6<OeEgAjuQ)iKtE@n6bX,0o)he"[ZDQOpa2R6u^eN7R>KpbqfD8Ma3=j$O)mM]<QZZ=8_e#sEl%k>"3a=4N7H<8St8TD[K4?.6PLo1)&D5*?[01p@GLHKsgN<!=fHUoohh\p`NMkuhqKhb/5gULR>C&sUS!M1p043TunZn4sc6cADAA%UCI"]F'O&:)StgkO4GW=lb'I!Q4Fe-Q3<Y:7f-4mg/FqOin4<+7lq<@#=3.J=Bn%:&u>3>/(*4W2laQXMmplr1P.[$f]kTtX=bdZ%0lE:*3bUPlNI!6DchX$dW,qqaXjL#MRh]c#Nu=_`HD@G'A2XcGmjbBcCMZtlA'XUT1fhGhf8m=/Y@"th))[<"^M;7n9J8s:C8<rc%fI1E)eEkDi51Wi2@Y0rKbXPJ+cY-;AK0oG7&Y2O3<fQd!Atrg]]2!OE+T3Z+`UgskK(OPVhWUGcC0m[CWQ[h/U<qu+jB+^F3/ObP%,F$I5?b?q+)dfb;q;n"4chr$&[K^45?9\A@3r:V8S9r0NNiBuYmc8;%=JtWOrg[lCll9^DR[*9<%MP11a);V=Ie!-ndX:]5b/<lE%#qG6ebr3!#0_=Em@@WpIgQ,CPSZeN7E7MFjANNAKT_XkT$NDo3d,kO/";^4]ZDHcG(u"N_'oH4fJF'BkhD@,@lCT;,@V4ZO#??!^%>1m>`04nM-/tX2BT<H%Pnh_k0LQhrha4^e/?c=BhT6K=d>H-OFV$_%\c\"9$([gO'OQb-3e!/Lr#P6NrWhJ+n\6k@u!@Q_"rj9C(%B[Yi]mQ>46.H?nd8;p?h=DWZc:LXM)fC/LRi:VGRj!1&ACgr(OV@pc3C!L6(><eL[_cQ4l4&h]Nm*3m8B@m0"-W$MuC=%.mT<-WP%"a3qRYJf,?hH;qt*fJ<krk+/o#k@'#a>8m@AZ^FghkeSEWD[-0ihU4aTCi'6MD)'%=P-OAe_'`,f?ksBFZD@2YDDg]S]W$YC4]C]%,<E+f:]Kq>OkI*km`lUq&nH@YWC2)<lHmg`'HJ+@jSk//A'83WFE3I!2#M!!rtXE<Uip9i%S)5]nNM,lNN-u#IDr8E\(S5Y/"bN!%##qUuXd6D>KK==Sog'TcI@pP0GpPLq[[FBoo+0h[egIA=8"CJARnMYGkE\bUn#2e97\+X3Aj3Lo<4r(tF#Vj'mcrR&k:Zeakr[S"%^GpS_?-ASsr2D[es*UBd/h-Y*KqO@Q>PlfeUHOoF;#!O3BOlqeh]$$P#o]b;qX@@)BjRmTlBrJ^D^Vr*.m'*RX?jQX)SOV=4t/%k%\tr#H8`ol9jEbGMNuLW9'Gn@h\s\L+;eA_XMaEm.g.SXrWP&eR^,n"r]1&PDrPkjeIBRkSF?4!=%b_NTc0Q(5b22EqN)"d\ir8"q%FBY$:"M0c1GX\"?S^?qK"cGZ%Ir#9mQ!D.7M"TL_CmN(rm'r=;MCAKYaPmW)=MH\!)+SkAYJ^juYA]J3S?\!t(hYBpd>"6tLR@+S%hs"'EHRmc;-qua_AE2>@Ms/K)U^R_KBN#eU[=39T0n>9u!d=F>m&du=gSnFBH^l'N;5X6C^6RK-/!Cn+/Y>0fk:^-V:d.L:]\-HP%.^hIdN0#Y/mNPLFE*``%dn2Pn`Ck<K1q5%<W'HK*,\>0^bt63ca,ZAs]&?luMu(*pVX(EQBSLUXq,,;#lt40QXmb)h.N5ZoJ+d9r%D[k)ZT2@tu0L?OKRPb;2O,O1HQR6lD)IK15W@kk(M?#&CW0AP$]iQYecO1;74eToK"H5,#C4&sJj"",aS9,o)$tIVNd3sKlfDaHU%9>/[3(uJrOh"hLY?ZB:_L/'Aprf*J`)+qe?et=7Z2H`"1rUu3tCWI_AS#lAc[jT)*`Rp08q"n@fLo2_:K<7dUcb:f>+j%&:]M"](%PJ-3>a_"^IRd]5KI"kN]fH_u%2H?bfWpk^t[^u,$+Fg+YK+&a#k.@NN>CM<P"8jdg7r._t-$a7L<`"Z%?E08C=sgc74b'?b8+@BM%0nX:j#uZjnYCX7S$LMA`'Z;O3EDcT";c8hqq]KTH<5,+0L$A@NlmG6d_/lM"=M6p$G'?g\K"ZKq:J"l\B+$9+#ksO!n6+pcl/U!d%qg9L]I[p?G@?$RYIb7He^%d+MQ2I0om2]_`cQiM'a2C;EglWt]O3u'`&Mo`hlEXr'0fo\22i%tr4Y#]jT@LbheWfL:!M^:3,+B`q%l;F_k)koRI+u\o&*H?6BEB?a##4oHCA8us3k'8C`DZsYR&)TX@%#8HU9+"q31mXJKa#=Q*>`gScS%^t(_DB%8e?C?,P2rn2i[N%E%UaD\Pq$:-iL2]+!MM*2EJj'_nnC@GY>c$4@2q=%/(l6%FT_n!3@p"9;!%P$1oGq<$<;pUU(7Ik$?)6]II2&f12q(:E\p&3a.@Q4%%aH.Z*`5K<:*0m7h67]rGn<q?Q.@So26f&pdZ=,1c^SD!UkqQ!kZ"ak>)r^,k4@L]fZM%hf)4dK./7Z2:76ET>61aEk@(53DSAj!A%'47t+%9gM-9ZSVS\mSSml%LO-Sj(mg^n,`NgWs5U9g'iFd*Rs/L,e9:1qFO1O:6J7!Q[H!'Hj]X,%PjFmt\9fN+`1W;ZU`]OL"qg%>/I6fMo#nBP:,'s@aTEHiu-YV!jTZXlHGal_0C]R4Mk,SO!,Wm^9'HUKl$"-&^D]5Tn"^'0Ai[E;P7MQN\XlCMK6V\q7I8K7141S%cNWD,1gZP]K*>f3Qga%)IX@#uiUaSsXBJJb<ZW%Z4N#A:Bir0SDcCV1]ufAiV8@KJ\R@ZT9Mh*pO3cmA)8,HjmYMUZ#j;Q^8G_P:%VDUT>poS5XGq*jPa<X(gSX_!g;lQRN!>^U"ZV`"(KUlHmHf"!^m?]lg=]U5]=rX*=!oe)H>9f*1A[TlFcaZ,LNDId^Vo;=ZTC5OA%etp<FM!sDUa"+-bM8QaJa-JW`aUSig-YG.\C]3T\dlfAK\Md:A(HosU"Xn],,&>M9G?j"5J1?"l'47*"*9m\_Hh-iYD&a<(0k:3%%,"@G#U>3lVB,<u^I6s6>fZu@EDlK#ST#g5^l;GG=_1rEDI_Q=_j(Bn15q>sAi&/;`\aJpCL"=;&M>9q3[O)d@llQct[hV?YPq(gN%U!&Lij+sCkA*D>ZN?[TIh<V!oFSQMj*%a-j%%Z*OW=a4aIi0hm/jFrJUBO/JU!&LibD6oR3ehN)2hFdn$]Z&kQe<cVd-8ut-o#i>%&Tg@s+%m#JIKU\E/k1nqbE&:uI=J14\sPj*:)qX>e94M!:K;aa\LorV.'AhGGA2T(GB:"Kp1scg*)G\i1Rq3=]9JD+<L8HLoR>VT%F8I.SQ[6]]R5?W]Dk8)S9XBgkH($<l:)=0?K6r;Jq*pV0*FBknHp=^Fn\ns,#"QrR*abQ$lM6XX=L:^',9I.mY4B.<d2J13T+Nn]%OOe6A.nE?(IT?GKYCJ,oWD^MLUo;s+dqGh.WGRX2??O!O12U]Q?8ht=h4EX6P0isBRQo,-*+,b%KV9kg9,\N2QE<u]9hQtDgra^C%)-RL&6Cf^r2a/Lm\-nVUIq*P64V!?s/4Qu2gBEgJ))3s5mCflj/sM!kT4@;jM)`5%Jl.;U%;0.UU:]b+9<W4[.:tQP$Q]pm&lJD1%'>Ldj-+5-IG%F-oE<J[Y*8!N]CPXsaVr8jq18;Q:#K=HjN#Ab'6dr>n@+%I-4<O?tjdVT>io&S4Z<Uf9#5c1P^,NUZM-D[_@bqL5%nHGIL0erX*@U<dUA>;VM7]8QjcOZ0V!a4ZGJ'Nu^MO58r`Wh0S%PqU_aUj=P9>o,WT:IXR*M%B$Ys(+0X-bHmBCkMgMf`U:3)mOq%(:D4ME;*g<jJ2CsqI.6*5BBWpDPj_+n:N<cm/>cmXR*n<6kMcf72CHq7hHoc9T>dRf4_#P6KOfL67fs)n^]+go;!H9Lp\1Lp'4>_%_Oj&>gLo@5'Sqp!=igP3$n1M-a*gJ<l;`ia\^^"fje(DrAPTcO0f5F:l][.s.;I^2W(P1qg=-,5*3,2C&_24g-@'D\s27Fj]eoN&%s4J@:]T_?17!i`g8FoSOjB/FY6.[WFDLir_187DZn]7G'eh@l-S1_Wd*eoU7b`ah2_QJ-]L9elG[%t51\(Yb_BtbP>,"$_Dh=0A`%.D]Y\R<kBt0Eo@8-C:a9L:>7"lML$>\&\gXdlH8*6\M-J\&dVu$]]+eJKV=17-ZRuLEHZC.:<E0%A&r'MbN*f*0akS88m/MS4m?/%*pkZ@_D9)4ji3u0':/%9e%(g5@kJ[`polu?-UZ)b-^`---q9c[d$CO6q",=>g/&:Gl21_%a0Mg?6\LMK;I0LPp9K@mZ!pJ7/7#%n%?&5O#eTW%2`@DWO4P0qNT:;WKhoQc!2sI>dfUn'9?j$#n'tSc0.3:+i`UntriI1"^j5EJL5?9lf/oQf10-3lPP=LNrbOq2Rk+OhN%4IhY"it6:+N%0g1k@Oi;><H/F2jCC"VKb)Uam#K;@uQ2\<r+$"#4\j)j5Ene7<@]4=$0`r/s^X^F*9U)aEh65A+PNkW5'd$Y\[I\%-h:1th^>_fg$deNUPJs;#oU9EN"kk/YfmV]rIT9O`/u=L,jd:AB+0o-EDM=:+8EYd%>*oOc/*F^pgP;j;ie85*m[cGW=+hJK\Gft%jtZcjZ3H;W`VIF(NhJ_'P#`p%Nb'9Lo7oZ8ana@Eb]aYIEF?lG33iQ0Sg)3fJG+kF7R')(UO,Q3L906BVZb;dVNp7Th4G=)?oBi,%Q'naoB"m/W"i4it;Q*M<;U$"fR)!rUi=R;4lRsjt"HaIY8?KY:bVg=QN_'+2Nel2'O5l'f"[(h$8;2;nd3DNib;^\D!DfsWd$e<K%B)L6Cgn^p'SW'<;/7oYqNoAZ9lrs#g^jr6A,DX,b/loc_kP:fjq730='adI/nuRr4rqoU&BBb[KLVfnN+<#GP>]07iZ%^%(ZB#aM%cd)+b_[dh<%t)ga-nk)S-IZ$R4!T-=4LS*-TGA9UYlRgAZ.sta%EO&NRG%#]1/)&<iF8,]WR9qm"g;n9ZL\E$*jNAb\C\R5c,hSd%b=m[Y4/,\'^`F\N#[WL[:MZ$C!2$c+q/EZ]s/CIPq==ArCHJ&6qkI-D5$9o$HFqh!g=SSlp!5S3CnI>9IbF#!?/,$IhJK>qY;S;i%(\cl#K&[*XN%4Sl0!iMG*fCb%SZrV^rlWjEm'sC[j3jX8^#HkGYHL,0kf2dfKUmHG>Br$PcAF\Fb6rL*?Hd68fKNHaMm070\36d'%2>T,,d@GtfCK/8^WV?1Rk.5</a^@'jm&$Xd-;6Orp0p)O\N$o6P:ki<?up6m2mX^p]U(8n]r,dO_/<V$,4*5N2tJ6[g*\89NP;DM%DQ^;aD</IPp[KfHdB3.MG;?(?Z=UebaF'';r+"WaMW;k(j'TIFQO9%**L.k`T2F&4<\&jNR5q'`bW9NG64bI?Qoqt7:\RG8RV+]7%i,Y<O@-:^AG=74ig>`M,)=4&c[$kO?A+_gOcW*_2h&tn1oZOG6X`*iujJ"7qetp<sU-i.OqHoD4VA8ObAmlLtI".O._0NuZIXO4P%RADo>k?Ho"HpfT.I/36F%=2idkkG@s2,H+4[D4jK76<BRA\.AVfkD]R+tDO=Rf<@.C4'NNVAn%q;_4@i9b6H;Mf[B]3c/QLo#!R?%RP)i3W''LrApO$earF&5HK8QkRP'ThQGst?QSpGJb#kG'7`l9?31;JO7r`@mFD:J+.<hs?7al'eWab5@Dam3QVG"8%B_a7#'MXo8%1G\B3\cR/[`Xkk2(/)^%lSFMOC!h$:bUBd7N%:>LX\1F<@sl[GBsDdM(N[S.9p`;;G[AB.9p^"?45OY^_/B[A,F\$\1H'V;?-\Cg%0q,71Pg(&>l-bAa8rV;Vd<')cV]K&*SnP\l"PUHo@u@-V].M.sJU_i"SVA8L&TjPjFD9]DWAc%H7FS*PdUhs8k==!t9h(RgI'dRu%Zrjp38?Pgal-]b]EtDmgV7U57!#N/1fT#3h^#;jJA\[4N'u7mSp<:=Ma4/"u.:%nu]t->j@XRXp'p1,+bu8OuC'`:Fe'<a_LR?;:%JjmL-Yk+hW0^:[TWQ[!VPCe6Zqj^F#0;aKf;EQ^'FD@aeQh.eaCR>8R9[5b35.fTG@59^7<V'KTTb5tAiPU2$c-qVZ.Bd=U5BQXi%R'i<p35lu:YXi*uRCg9L`nW3]X->\&=I2l*Ta!`&=3*UOjCdm['PH8iG9]=n2hXV>KP0`L/;e-Ph$k$uPkrU01A3<mTt=_dNun#8%OQXbm4Z,#o8duYNYs5[5h%0DP)WMA]^_oLDT#ol^V.'tbAb[;ViG4F(FJG_lLHrFeO(R3HARL1"[M)0iW&0;ab]Z&f_MJ]`-=Qbo%g<"UnCoJ=OU?._?a`o"#R[P(7IVu*cqjs@rk"pV7);\2!;[r4$0C0,o:_!%=/*m]kO;7BNc?F(og,G>=a3h(W&5-@knDrjN`%r[^%9D.X4*p!OEYcnHr+B!IR6^*<W-a6XHQ3@A+O8GIp"DiHg!<LjZ%iH`W\j^Oq&2Tl$APV>Y1mLG@pR3<pbfoeHo+6a+9n1j"A/6ou%_):1R,#aYMO.R0.&B2B6$BU<8JIJl#LWM(+B:SqLiT9h+aN'F^$-&.keN!c(0k:S54O8MZ3l45_r)o(r%Hjd<RMj39bT#E,\WgV!%.5R&o8.5>O?b#E_YDg592c;c#Eip8Xh<H1;g_Gpja7-qd7m;sn)!8JM2sa1_c\j/CGq!\(A(^Om>ulFR,4Qhq?aqW[hWsc>\1=#u%*29&p9hbecS`W'pC1-G<a%S4c<%/sR,`iJ=<Mr;MNr2L1`"sJ.iR#oqF+niGe'2^$/&X60Gg6DdQnC9.:Ne9?]%3+q/fG_L"OH0=%Nc._*m?04une`uRchAHtV<J!gO_NG4J+kNRN+odEVQ&Z!:YAu(4,bU=,&DesZnt/fe'`?3#k\n>4loWq9c#gT7=po(Q<TV/l'5lb%'_p,70W'b'?K>uI_,.HfS.u<>)FcF1OsOkFS<#&;(&2DsX-i=!0l2g7A[c&0URh]S0-Y5Ne5W[j)r#FpkD9T!XOue^1<a==:k#Er%0BFbq(#ta+4s<F?19'dL0s76DKqk72@U.Rf":J)ue(^(\+2keY/tZt:RAJ'GqVo-5RkG`LN]1&&N_btq5Nb0!f?PPYp76Wd^:'n>%?>L876.;uK46F:e6$Vj"O7Ymp3\Sj(<5$3Cl24@:<Q3j(>MAjuSe2JlP9#>.H2>'^`bBH;%*t;8NW#Vrf_hM4mo_r$h\(oH5$/Qs%pL%Vm](>L9BkF,=H^E:?)*rK\1Sm^h6[+<'G!'#Rb't/>,8^qcF)PZf=23T^NT+/Vg&uoOHi1!Pc"tn^hLBU6dASF)XQ$nMr0\:S%GELA<cD6f_kg%58?_U#@NlAG)/@71ckY^1uK);/q)\o8kC[6((^8dCdI9ulk&)oas/h[tiB5\WDEcbWN-&nP'95=\bc7QGN>7m>=%@m5+"6>&\pVGaKF)`d2I@WVe0-8CD,SVc5/D.Yh(%`On@k2hB.Ubp_8-p&\'0(Yr^.K62`G,I6QaV*KTdA88kiN)CfY#Vc#[A8.`%WXZCe-#%Gi,:M9o_2MsOdr>s9ZpIW(_mrh07&B!iBPQ3pMs[F\V,sqlV-'iC'QC!-r&J%l\NB]$'T]gEm%m]3n9X_=DShkdcV$@?%:Q)-LcSmaWY!b3MB&ggEX8gG/kG]'qpYLGMf*,up5IO$>DQ+L8?Pq].;`G[E`On>2/^KK[iA8lY`?]>uk1^k*fI_)hT:+=-a4=(Q%jfCCq+:<);,d^FO\,u20K=$sD>]G1j#2.&V:*V2hXS(r^0sa:sbk;lrjSJQu\))F>#e5ebj7mK.E659$AEBW(f*sPN@@(T5Md'2O%a$'`[]:`)%*`8ANG')JAG*]J/JRikd\2.6-.i_*G(<Q3m(osl3SqEt7RIMr^4*e9pJ^SeE9.psen`PQ,b4WB9*#-.p4;;b]Rl@>4%Qfd%D]e_WEVsn<6GDuj?1,B'=]N92IQ/RfN\B8J@2DCG0LjgpMIi7""jka5P4_$A4>6_CIE8fFYmg)d@7A[ocXgI7Z!G\Mf2[1t(%<F`Ne^nNQ6Rah(j.):f7l\bd;nPC5M$?1M*Q$"`<A/&DYWCr3Obk?Z@&d=ZK>-`MjL5c7.S'Nq&OVMA+/./Up$t+sQ4@Blkmd6JZ%".6)5^SUr%O6X9:nic/)[c&=i98uI_qkJO!<eW7lb#^&`1e)hV:HOjAi1k\r:#\D3-m+u%S5,(.;*OIj//f6cBV)LOjW!dhb%Eo\%f4S*6:3ek*1\PEWBQ3NB5P^2i3-%At^ZmaW,Zi:'IRE7PHKMhgWC%UlDQ*?BIed$<Cd4cThY#(EQ2IZ>Lq05/]70RqLdASFMSAC8%0YVQYn+s0I^?QNlaj5Ig0AeR]<#O#oI`3PB`oO7hnu?%=IsL1gIec@SZs=+9Y$Y5Z?!a,'iSX=O+-:l@+_s?<5<SuIGI^l$MbhQI%8D-m<T<eReqW4>UON,?2Y$XAfe)[crhY!(JQ2[f@1G_l#^$D$R3^pLaUVH,]k66:d/60^]Y2:(*h@%!^2oL&j,J<??@EJ,O)?S7S%Ja_8(WPcF8QQLp>e8budqIPDZ)"=P4.6i'jE-R8&ql4!SmWF2,rUTAjQ6'PFD[D3b`XqV8jZ?_F7\i6.?,*cAX_9@#[2f-N^VR3e%Ogp04n+mb]q]ii@-c6PF?hJccH[GpeP:QPPh_X-^9>R>CTBA^c`8C5\C:WjbidospNFMAQjZBp92V:m`ouk\E61=B'riTW-X+#q-%NqfbardAjR(W!?EqIP@P3ho@.)b$;SMS-tgqXL9Rpr;eSAo=4%in5:Iht8Ml'OM&uH/?/^)2<!WeITsK38X>ogKq-drC2W93ua8_%.hZp5Q0^KcK(&QtM`EPuIaiT?<cVR?)u;_3B1:eQ^W2ZS*Aku%H83rrK_P7rLr.E4QMp:K4[0c)D11Ghf2!F)e5uUQQ*D=H]N>'I%68FRFrULu"12TWN^?_,d[_n&`/`nMZ<PN!dbP7#2NHlG@<t>23?Q'B4?M,7ipE4W.In+2*k!saLDfDfA38X>O%uBW5aNo7c0.VFo%*[Hd]%uB&?%Z"OF'fI2t^[!hS%.h\erR+bF?JlNTY0AquqR_3/r%5t\Y$XA6Lu5rFS68No%q"mp_hZ]_O,oZ:(\u8!;nm$J^p6\H%q2Y3+YXPgdF?2m4'%sKiQ613sO@2!EC-"6VeTSkgNPuD;:X/)"KEkAVgZ_hrRgHo3hG)4BI6VEsT&'3A*9*qE-4a/NWlB-r@e&aL%K4B+ChJKIOIh+c8c;$#LB;X6%f8\VDn(1l05-9/Fhs/h%q!7+tMAs4b/QH*tI!@bo+7ILiqJOio$4aMjWr(>lKNm2NI]adKSZZ9@%+*aDr:)`TWa%t0D?^%,6At7+102@Q$n!<D!S@'<:e#gXus0:!tg[a2sI"&gk2/,kTGa2WCp\&3jDI*YVenKVL/E,#dD!/t*aml9c%lJ.H0'@uWm:NLI@WOKn@qYn(2rTia>Z/`MYl?%K0e"(CGH*@,9LNhEo0>AR.5erSoji)r"<P'$\i!8_Zr[a?bSaNsF4?"(j9W'&=%psRc$C)>j_e].n+YLO;Jn=J^i:U;ggp9sZI0j-J9V$]tQ(i\qDVdiLt,fU`El-4<uWc@h)e!H8`a]<%oqj$:@IX69h4`LpnV!hi5%ketsJKC^/^eIGb&P;ohUI<&4?-6(P<HJ"79ljns5,DLBO&_U2BH`K%]6.Q\?5VGduY'?4kVp-mLNAGrIF6!/Cd@'`Xj8-aL`SR).%D\p%;YIDE9GDBCphqC<5['`qXmQ[7j>MJft/d7hBNtO$-T/gc6h>%W)GlHajle4`3op:<^>-hN#Y3g`<Hni,'l"h18&d(>1Y<pV(%4K8!(mWf$p-Y'D?%Gh@,4eflQDKSSNAPT#^=NlTY&jQ=tN;A5IWu$*n!jFeJ!5ZXgG/V^dWiW_D\@lGo"9Rtn0t0/MH.nkHh:jaK%Vf",kUZ02jN;b!ee^]F8r(sE_VqTpkqQupIq;F9^LIM0Z_o?Wf_:1[8X?T$n_>Dmk-H<?43diH8^Rs,9s)tQqLFU#VB^SX021QuH%R_&s^2LI1^-#2>*];nHko:q&p]_jnt1]%b?ks;#D8UlSrQQV!d^"1H/Kk1o)/OIrbe%Al?K5(5(BWjUk,$KeuIIe(`HOaMCOY':2%1CF[`s!J3NN*.s;DdPj^YMm@qB`5[AHZnfGl;qhDIrF=+g6*p&F!IitVJ2Uef$*RU)ak$W8Rk0cZ*pb1]'f8%-Q>/)^BD;EQ*oYM%akNpNf7sQhd#<.Rp&4-qgPstaU1l0Ms01TS4)q!_[l.<9[:qfXi)EmL+#e]dIU86Di%sGL=h4G?n$IL$=nHi$,A1]-?T.itkCIW=%pF8W4eG5%8!5;%K,QLKp5I@>t5-H'@>G&Ip5d\56]=qiU:\kA_o)7>mg5E:Q_%ca_]pt5&3,J1h4M.)Xc*DflUMDF;]r3R?^,ULO%:PR,c@8'b7>??$0+Wc"&BL]n5q!$#\8t&uAhSRU83O/>YXPd3(kLF<p'6QLT$LLkk5QMsi.]V"\cAsHRbe&cN`fXOom?1Q)h@O<8%+s9p4/!&i*dJBh;ngp>fq2L7mY5@f!4#Puim8nE[n9]G#oA,nE@4\S2%)]d6?VSlL3;`$&+:\8J5\+<b]T"`\LAl$a?[.l72K[21%X?e+6i-+NEX$s(]]RhAJ@dAe"QLUmY@Rp>R=;"%<">"el_QU+oI8(PJfL0YhM[0GU(<$g]:cPdC<G-NXBj=_CS"7iFHWK=Xpn[MN%KnDp$Ybo<Z3teTU6V^V3-T;V<['G)PWXm)FU5$P?52.fW1^A)"D$#Wa7c(Ls]5kK:qfD:NIVAu[["NjR6l=5%H"Z[@6Yju=I.QL`%p;P6WE$'A?+5?`JD9`Q#AI'ZXB8>F`lNrt(6AR#]i:Hp3Heg2<OE/^2?quBr!>LjK,0YN'fU$'ncY_,Ma3`65HjPtY;9"62mmHsC%`H)8?Cf+0R-/Qfb$GVRf\:fpod=?]0"1!B*eGG4YWV-"s<(T2T9sG"X@^CE_Uq&l#MhO]J!X(`aOL/gqq+-<AQ]jqs"N,G,`9OCI%T4Pd(Hg1LK7X60&ZPR(nl*-KkOF2\mi'Qp]/>60$[?Z.:H+#=;<#6/Q;XT^>^DT!I?@O'8]&`RZ09=_h_pJA&f^^c>0M[rM;\=gL%4QnR*nlkmK`O@!%la]]JHFZsqJLM#@U)mlV3GM_^oTB_(7Ma!iOb:8"\S(Kdn%RH-?&tG+H$[t4$Ka%[jgP2V;)up1K!Kn<Ofe:t%Et?#4KQFt:io9bu,+N.D%:)*r7tgJ3,pAl[,JlJ/A6h=t7tbr_=X`h<*tcdkQ%XD]NsOoZ+4J1"Imc7DR9pWRrt430='lciM[JX_%Bj>?eC4iImp^1&3>#m^un_X;mQn>T21pq]nb=>=o*H::NJCuXgKt[>.X,^Wogl'!$fq$,7!:0pX4a0I9`EPrMF5cF)*]S;F(-"Me%Sia0USaiY%p8-6,3/6\l$LXJd2S+rs0dUb9KGa#K"(/5Mf@/2A360sR[^(S(Qo;F&/A:#1?[7QB+)Y#;*lZImWhMQ3`CMZNf'ctQ%[ZQkJ&c%'YMYs.G68Q6[/7o;ZIlL5F-osaOnc)lDq*Eq>h/_EX^A-%6dF3N=o:^7&qmKLr0>/tiY3hY>C$W@Dh.\]@)ZT5B[]c9k%NE36q<*ifkhUpQjgs*i=qmoWo2;.rmCT.<4%t$U=RhB3IB;@Y-rX*l;G$c:Bf/J0sk:>8o)N)Znp?qLi_W''BW<2e,2\VI2\N_fu%oB-s>DNjQV7`A>2ek`QThX&G17VD[6C[Rkh3H;E&p3#gW[iU6LkO&Z\G1U$"Cp)(>HsQdJhE(B)hlb7_T2uEA/(flHCLuLpNEV],%E%kSWi+B`B5J^II-K[PkfUA0lpj=tS]hj3pQHYW+f+SO-p7W?'Wui!2\+_Bd$a#KI-K_J2+Ul#Xl*GU8hWVW^Ya`-O`)pDOB[jLT%g&-TF6gV$u=6c+g\Eapk!WLZ(T8W7OmS9arVX_mH=dk>q&d8`hPC?)YCSP&ZeP]FQN"f']%m6r:rU*?L)a$/&GW;E.GX>#fk_s21%@VW<Z,!X"A917*Z)B!tMS)7A;6*2kj0R)C!77Ts7SNGR6d0G%*=hnd19VQ\o(dNl=83pV<3OJjr390[<a9]`8J0OTBocNTR89O8j%*h'uM'anH!"nD3*J<Oo/J$.bn)5.cm7u6tO9U`'.Yg@C(LFXfWfe?d6)*@jp`E)?u^^a[0Ia%`D\FI!lXPX79"7<JSdXmo]aHGt[%nleoK4'IU4Pq(h0G\TV`^!l)>NO@5:YCCHFq"kS;-Yoj1.)a\'C]3Sc&)+cS=(f"*)4fCl,Lb9=Z5.;B3pX,=7jP<i:X'=H<IaOQ%!WU"e9BIkXqA4JpmOlf(<dM*=N"jMup.LgoSeKJI*rDB"?`&D"M.?RmF9lN/G@H#5od&YO:F;,cm6IAFP8(FtD/G`c9!e'k*^=V;%qW!/A;k</D9N<'O$8"6qIgaBpG@u_Y$;CnXc7)]8PVr,Wik#cDOP,L)5ECZfE3^6tc[&TS9Q'$[k3rSrSp\6E0$OV<m/s^]e3EH]%<4(YC'=Qm.AR$GaFE1EJk;4#Ic79hA`')_eS?C#@^UL.884#`65OE@d]N`!C:]]3r#IMO!YtkFbk"uDh!EkhJRM'<rpUNn"EUuV0%MF&i;o&?:_$=bo!\;N(/Nk5[Vb=?7QlHJp*Jl[pi"FK%gX1H`7g=4:0`U&mG=e2FWXBt0=X"W&9KZVBhHLkPq@Im)r^cfY5m(V3(%YOA"A.EOfjfK&ugJim=J0@'%3_-^1G>?!;]@.VF"5a-QD*AVgWe($+.h-\Y?dVf8VDFR),9\2;+)$J7iCRTOk04lKijHFk$Vcdk%%W;N^?W3Le]@\4X8P74h7P<;t%#Q@V\:rIC2o'PDkl`1O$+GRXm1SV':8&b2r)]Rmm!.Fin`^8T.J*GN4=T&:/!=u,f?s/^i>)Zo(%6[uGt5(FM/hnBD2\jnN;mTaoi1hi1_ggmL@kX0a;%_iabINDg+CtKRo;6J<3jj(VK3L5lhfkI-jHQj,5Z%LeVTpf`]BA_?)35<m7%Sps[#lWdX,A,H/kOd$#70^c'g!WVXE7<4BGrIZ:S?WmBG,!!/;a4/[i6mPhHlout_;gR3oIomtO<eO<K%u]MFb1JE1Lu`"mK2DOX%MrZ/"c4:K.J\PaPXVSEL"_p'Wh<NeRS(1DJjL`qD2lgVI)=;=L^s/m$[r26'Q'+s!_+o*We[j=K7&<LE5`Qes-eKqrm_sM4pMHs3%s1?Z-R:Z5e+oV`HqI/'aK!OLL!&+CX].?ZdiNbIBY-gleMoE)!DtE\&GM@#c4+ET`!-EB\45JXB09rO'Kdci04>"-S>_phfdgT?U%/jpL/8k+)#r;Z+jV:hcpPPFHrk_;t-4Qo5aYfbFMC[Y%_]\b2CJQL]q&`A/*%.9pipUBqf:AjWPJGrPlap7%3hi71aTKF],?<B'i%cRM#2=`.t=/O40`!iJt>I,?M;[Tdko4"/j<?.FC1Q#+XD\kk:7@f+^&Z(2.p";1$W.e9JXR+2bp.jVRd<F&[bNnR>pY=bfF$DtD8%d)<qF<Vf_ThW!b-9;eVj4?ZV,q^a)B/8rs<%pJY^Wq]ArA=J$*n8);qCeJHDTe3hhGZ?C*XU)d2;*RdaC)_o+#q-3,&>T!"6"la.%b2c>88m!sgd#VS#moMZi$R7J?"PZd<<C[%Gj]Ro7C18kNHp\B!AI<$F7HZh=@\,/T26)7/3\UYF5ecQ@mYcC7!6]'[<SoW%e"M;Z%Y#mU*Y54hdSI$ka[fHn!#^k%4(n>6UYf.]]:E?eOYrf'AX?*L755AO8(DpOfTi(Ib0jV4)@Gj,Z(mlUm9ctR0fMK:.+9JD&GqSe5%oPN@n!ek940J]P@"GX]5LtuZ)@e!0jlM<,,;'=SFBf9BAL=i##2+#\,R!R5:Pr@EtCUsN97<=2#JLSSfL*7\63QIoRM+IsbAr:b#%29Vt&+g.3"7,&<+lC1LM!jhg:AAENhWs!YVL[dEsL!smB<Ir+:Qj(qJ&@!Yq@U$PaLKI=8Q8]AAmJ7<X140UZ*EX)B10k8A3FX:$%BMTc?"01O?igtoZ7gol#GrEs2,rVon5CeEICEpb2Mh^oCVQsJ4`uhl.oZ@jEc_Pkf@+kmk6Qd/=N,/2Hee:.#ZE4C5_lXOU0$sp]%'^K4t@P:r1MT"ojCp=3(PLqrN]s.CPD@j=.S:o6f!V7;9`G,[r]`g*pHNFNFHjaAciJ%d49dcTS@Z+Y&Tf?'Y0l[*8WWat7G_1L8%@PuJ#<3X%>AKb#M`@s+\Q".U_$&BUT?G-0D0+K't74=H_Je09X[Af`&"9H\JAr%+/G[c(%,#4>]&Bh:(-LhngCtNG]JR\;IW<%fh%q=+pteGtm?VEdtg12^jEUftJllj.T_J9iIHPK24lQ>iTJL';ZdS:QcF1dJufEj1K;g0Dn,(khL=eO,cua0;MMckN,E)2Cu@I',S)%bWlVGiYVk&$O"'FLtF@=f#0q:4U=b5&r>"gW!$/ME"Q].2XOX0#QXBXgF>_j'=P4j[PQI/1Ep6-Z+PUc]]TM&nQbF2+<P&S;)JTH%*7/XX1jQ,,*d12H.6-lT)A@'T3Pu@i*0$We9`:*065_lW@d(dCp0:+=#a6hZ<7N7/e)_lf7#op8:;E7@0H`^HR1>L&EEYaRZ/>5&%+D@b4\6R;LYld6GCoYKJ/4O(dY-n\3Li:F9n9d0f64ObcHm[=V7sg#h>7AD+R;-uR<F(1%_%R6!eou@2%#:_.'eAWJ#JpIc"thHn%&qi-I_P0bcqde>#m2"ILW)k<>"[H=VfA$Z!+PMWVcfCW/m2sZMHGlT:PJanY__nurl'l*\O1'f$8[K992l)9a"h2HFD42f2-?R-2%5Z8>b@ArXB2*_1^JTsXi?jP9bjousO#cO@&Oc;+l2!\TuHX$kK4%%r8TEMD]>-U?,:F.R42jmbBL(W__XK:eYV\:2Ei5+qdEf%1P%(q'r3%j@8*6"#&eb#'f$_:8.(/eNPL2-lkJ$ul`GgG;3hekQc'$VQmGSf`M(RB"oGL)%]e%if/9RWE=u(i<r2G-k6n(+L,jlNmlQ%8ibBK+]lWP-[KL<6#p#U9SL2NUEa(R7n^(4)R&>Nb(YEQEBP#M!TogOEI-6Vp6`>l`,^HS2'L]l]QZ[QKKK8IVht+t@tZ7kpqB8c%].crY9aGUK%g)*o/U!?@7XIYJ-i.EjNB,2_GfSPm2cRu-%;O`U679L8'hll/OE(H["+_R4HM[d'(p^gtjE_*4&^1c.5u*BbEin!^%OV/gT289Y<_?a4V#"6Obd%YsmL.)e:E:'qhA0u0#1QWb@\4]P_p5d0\PGJ'=:dl?iUOFJ&j0nW[IE1heU]<<4/^K>_JkZ1J"/]".%GrfLQ8("]#OIN-+aQ#iG0hS-j@As6;:`,C\!"B/N2=)MWdW25>0KHimje)i<3'.<V3nHjs`?qiR&gh$u]g-bro5K"mcnRYB5`._i%1Y$)L,%P8W=%[;N=CWHd0goFCFD`^c)^m$^)5l\[a8D7"%ZmaoP!]Y@KH)J%AXEQ<Sn-W:LMJ>LDk(&U247!n7?;9?X5ZD@(87ub%-5T:M'/0[PH'!LX'TF(TD[o(WJ3%DSQ7o(FO4gmkW\fN`,XRB^pirT7H_=3G;EFFjKA&+tjD@45Y`M'61[!Jp>0E9e+jNVLSCFf\%=olJ&=]Y*lP%iTa76p/N7nmk@ToIE^32Bl:h%go0I/UGnk`\[HVog=@J]j"+c\XP:E>em"#f9,SY[*I(.K3,TRG!WtQRimm8B!=2%4;%-*j<H"9,F_?rhA(.[G%io,Q=ilr:[Vl5n,dkFD!o!q\5#&-=A6VUj!Vb6*8(Q\e7/9%;M:,t;3N'J#<^Hpl[kRZ7Z:=TLsTKT%EsW6nTbH(P54=dK.[d7)TbasGR#4nu(,lI\'N`.pBjLkOK$:_U1)EbMAlK,L+??UB]jb<fSD"Yc_tBE_"s.Y;Tm_R<X]Ek@UsRit%Q84inRpn!p1H60<1K0eIe!@KF%q+Ci3"@ZYQVNZ>*5sCt@j)We6m9@&KH-6`,8@KBB\Kj;1mYoa(q2Jk5/M]1Z31<4$N_LdaWOp9%"T_A2!!6b'Ob0r\6QDZtVc-?T!=-j<-'&:.>(CFU(;Y[CG7:\g3C,[ZjoT!bq-TBWdDWr,#`g?m#uZ4,4H`sKPJ6es@9*q9Qb^lJ%!8!$Ld3Et;)]WBubU.2R2[%>Z:]UU.)\ODA`[/S-_]omgQVF,Z?kSZII%.?EVVu4deSn)2AoRj*$@j9K"epSe1dK.G@=qf%+N+X5%LDL#CLEOVa&I.>R!8'\V<%hO=<2Fsj:9G>JBX@9(]0Q6b%Nt;XE/9Ef\/[If-KDD5J?3"#:iSZ>ggXaE>.?BMp(\-;M?^'pORCJR%[tc`A2H/TG8Ip?Z;`4*%OBY]&oF:ZAb@sglj-=TAg8\7#rLa-*U:&8J@F@T.R[ROjA9nlS80E]M4;OP/['`.:gQ[K;o<@+!%=iU9%$$u_#2P/)GDGq)Zf9%2_RR's*Vi=3Be,\eXbBeaU&]BuU,?s*m:n2;cTM5i:%X=ZJ`W6GM)_6$G1i;p%I*ei[OB!;3@B_5spHju>%_#PH!-2.r`!.P$*@0#*f#]S?(;9o@k*pS<iV$t*j$cHE"09l4HSEbZSA;=RmTh:&!2))]FA-%Gj8Do*Q7T9b(ZNDBR\."T6dR,E%%ZZ%T&*)8'G,#O""[07;cp)TLoLP[i!OII$2T**#uRfaiCA-/h8@(Q%t%Y8=\@h2QQe<n=O"WA&=+u:8O`;hq!&B?0hl@@O%J[TY:%eIs(CE;]c;h]T.[Qj*cLJ]/^10+_;:edKDaKhTh/MMDbp-2VNrpk6aG!XID6)9?P)a9l<V=b36[+U\e$e1@h/LF`E2A^`r$jhrGt%J-k$eLnqKuhK":`ksr$.ehgJc1+^bf9,U#MLt.AG@j<UWf()AMYsBRc;?h)Ukc*J?0L/iG?5.$@R-@Hs+/q&JM"_3f/#6%DBR'Un%nj:5[L^cDH@`X5FZAAC8DH_k='G<(aN\Qo44&et:'^-te7V^;XEP^R"a'eO)G;cZH.3#"g3%@mem'Yg`.n"oC4&6rjp_KTa`,ZGp%0DN%i7B$i3S2M3MA:+Wc,m#dJRoI]BD&T]!qBQoGJiY'.G]Y3-`F*0LqXFl'0bX>uJfg>rdEt+?&iJ3.L_?@q#kNX=E5oTs/3]cs%M*$:4$nNB9i3"hKD;_uKTR&o^qiNjq&1?sh5ndG.*8ZY\UE0]#Jp*TE^B,Aa&R$W`@kYM\Qe_[qGBC@"4ku\gR(M]US&7fVCu3+E%bOaspcXB,h"q@YqHKr'B<@"oG!*J>Y3+0qj*XIu2h.1h_*GH@8N'bREpX0*=DX5>=KCIg+HE?2m"8:\ONoine>gh1+$)N'Ic=dL;%%\Rh_Qcbti:%t//2@GnF,'k&m:1t>,lDlWNWfXm`Uo>*@^bD+?J"JV#DfjS/[4Mg"0pKksS"K*#d:l+O/f*r)ZFdE5!@SbblO9i5%@<c!G0VJu_A_WF#c?*%dR[`X,]9BA3e0uQ(PAS3i)buo3_]rrTTVAlD)O.c9B@n>gi"I`+=MkHerds9\J@M:EOH>-4W2@dma<QOH%gGU#M%,MtUR:u=$J4f%dCh4k*@N60SIS#hMoXr^`0\$5.V_gTS[S8d_6CB.#+^USp/dg9dV>;[?3gUutG;M6pOGe6ScphcqoNX0!%Z,me"T$>8=f14ia8V=TMU+\cbLe\.e2e;LGnV',4+IU.rKg8CfC<s9iI4aA(_7$m;+,hrbRNFX2YmZD@D4+e]"GlMNFDlm-FOZoN%o"CQ%R4ad<>`qgZJOTMG>_=W$A/,7`cW1P'*aB!%&/X30au_6XGrFPB,&\ZmD`VtN`j_7;2aT3(6ha"OL.O=s<Yu#HEU[QW%7,`n%dYD8"";;2sKGNJ8Bd,mq,[j3i(5L&"*r"N64DIXXF,P_f"[d_EOMGE5MY>\m]OsXl9jOCriUW/-!u.E,lQL3i+j/IrhsX1:&4A^h%C^ZV4*>/DW@5b*LMb=S(3P;O2OO.sV3QK-$AV6oo3DWaVas-XI@.N:+$O@@JC/:B"!:QK+S.H!oo%#f66Y..$?HG(B,g-gX`]d(J%JCl!=7rkg;Jqmd>YUnjJJtX1f0F;aVUf,8]V/2/'Z;%'0C^5&PDqcFligt'L3[U)0>e77Sfb(Rn+(roOHQ<pq"W&iPi3qMEROfST%C!^/#:ka>#(SX>$8g.9!RKl1GO<M'7]+';-K!Hc8.=fDJO:Y4#F>j1ga)MM8Ea76^ji7DE"P)FJ'EGRS&]F@i.0NUTh]rK+#Lm#B%H5_b8-keN\W2h0QJO\Z#/PNrHDUT$s'AZF-^gV$hrAN_E4B@V1JWbI!e5LAd_U+;=@"GWG0HM0lq+skB_(]V[M_:!b^BVIV2S@[t%[;^)r1l)a:`Wm<*-LDrj!=1p-$t='MO%^k(s"16??4hRp2pfa%4@W!a.[DdkMoZ$W/-)n:,Bdu10UJ^Go)jMfP+;[G`(gtcOgbl]%>.PdWjVLZ?k`B>Q[`N4i+@0CgA^(pF0[D$/f#3b(0F;&];R%UJH9#.D.48&@e8_c1@P+4j>oP?`dII?laT6KTMUH/I`G/</-4q4?%FKH=8o6NP4qUP:;MLg;f[\]r6)qr:7<<Tt5E%!"&_r5eZKSUos--,S%isXieH=VnT6ej"BFY8q7*O%O1FZaV>g,6qjC85;INSO$%%3O3*"J/C=]3K>EZl8]VhTbs"PE*Rs/Nl@Oj7iVt6#Z;h=(:.F0ActJ^1(q&"dIY.WBu!_4/kTZ\"m_L_L/cJcj=\o*W#'uh%]jS>%C*Geo<XPb--=EFXb7cQ?$m::#r\5ge_tr*lptcjh.>24R"VWED"UHI7@Ngdbi`T)Ba$Lq`*CR!EEQo]:(pKF5.iZY1G_6&a']9Hu%7mVD>0#J+URQgU43!=1fLZE-0mUi,N_,<&GYlHlHlTiq<3=/:K5RGm1a:,#[SD`\b+QT+,Y70<F6YnH':j]po=8ZJ#^eP+cKDF`1%"C?Ba?`sZQfVt<Jg3t=7BQHSINfCI^NsLUnNXa=C9th/ir;_L1Q]toBd@-0c"\bSMKnOJ5!XmlM,/e%Y,UECG=?$t^&k`U9%q&:P%lD3&XQ7dAh%noDB&MlHJ#lnfI(]?APVbKWm!>BTI:@R2_,K'nE,F`r>,Bb/tnc47X%'b+0'`c1fb7:HU$jb%lXUaoFLTIBRo9ggB%Q@gD,E<*L(9pf?EqaVG`B\l15#Cq><$kNY^`["an`8ZST0!RD]`7=T+k)YO0Gd,QR!P#X*:+h8K75Z$s5H#X6pd-FB_F0;HZT)QN%2Hn5%Rd"#d;MEIdhWUW)&eGP9X=]3^9&q9DW<)W)gb`L>ChCY.cX<,f(Mgk+B0`R"56Oh&@"Csmd05.O5Wj/_!Xl0i;g\)X7)4JO%9=W?N%3T=.!/T_a0j/loDh->N3t\QK0YE.UnH?cMK^_MARR1FP#T<p.LrfhN6G5e(C;bGgp&RYC+Nn<7##V(7)rgAnWTQI'#9e>*%;@cT.5]1,d<]!n#lP:Y87skc9S#d`aObi#M%`&5$-Os^Wgf*js7K.sp3=2BCYW*qbRMQUQ#4iHUn<Q_6@n8o4?spN5nbV'M2pboT%OE8$:rYN!\U;r_d#<5C6'-P`&@uHW[1L1b6A(YN&a'H?tE+hc$>u[$CWZB!B67$Gk7lp48-jo.R1kIDB&9LBHRk^U_>U,Vs/&l3<%:QcUBM>-L1J6g$2F:A4qVnmho/l6>60Mufae/H%s1r3bd!4^=\fsOlr@NgtRZiCD)Gg`^\C0<H]1=8/c0Cq;@*6eR(,n]M#-9kL\%iC+uQ2Xkr6[dCSELhYPR:4r`uAA*p.Sg$E$!dY,q.88;Jna]P#JE-nQ*>bL(k"-ccGm!sJG\G1+?18_UeI8]N68CMr$)+UEdq1oe%O=VWfBPLHrefTS]IF5jCcZIl0!<>M8a5D4N9nIUP<]-"1X'uGZ&E2`=C(1H(:[9?u[LF?ZXqN77!&5LHPUHY33^;Ru%KeYGp)fi4%_(k;T*'h0`ALDTSE&B@(de=;b&I<5:2F\:g^<ScA_:$$F%K&c0_gj7KKV1/sr8J0igO!7sj_-@!'*75Dh(_=kJU96#HY'Iu:R3.9%R[fM8H=-gD,5Qt_ad'%)Z3r"Kki?\t#STUr33Quk/<3qhWA@&`@l.Ep)nQ.5T]dOAJgs3hA.532$HPW`p#!4u8^g",X*FkK.98`s%(J;RHhg**s.%5oCM[["lJ2gfY1C[6,:uKc_#`,a5ctnpW%<*EqFI>]pMF"[]RQP3TK'N4]f>B2$9*/:I%O0;(E>/Y[40PSK=4b+Q%2@"Rg(_D>:;4o.8gP(d1j:>;&C%iR?90iq6L"5fIWX_-5"D,0<Z_TLg6dBQRmN+F$G`dbo_X]j<[VWAk8uiVr$&Vj3l'Vu-9qLOp%VbW&ejf[;W#GaD!Ye,pHOq\A\$i)W)%bo]rO9<*3'AS8QSik;ol#H1nD/Kd=5\]%?9R-"EGo";t)Jl+5T$uugJ;lSq8C^]5BZIOV%]I@VTE,2I$j;[Zq1h5]<?6I%,oGuPAN;b)d\=p_[Posn:PTh-cL!iX5Gt;8&dFA6\qbFpc!?mAC[`oU(U6)SEqd+AG%Ui`J64XY9%*<k(K)HAFipW9m'11Q)QZmB3@HIAOlL/p\6"9[6^-,`D_=14Yj2,;541^SQCVI?2t)?j38:hd6R)m;\%lpF!EV9,DR81n%3l132K%j@^"4'hs:'+4"mN;``kMh(g4o&Kl84MBcF2U\tO2)-M^4;8t8Kn<'E$a)d9;Cs/XeU#32297r=6.t-'TQH/k9g_cuZkbF(Zf-"Rq%NP^p%1=dT%[&Y@&ml]:m/;)c1/YD*6<C6'^Bb$)R)'\+8]O*um?Pj>,1M1K_I).ZWLX=!+GW^$g]/E*?;`IS$ODe;TXb-!\UmY]m%6aR&\>Z*^)*uN)hEZ(a@K&qMeg9`_bdrHW^8C`*RK[@7:pRUWVe_)89`q=GV8XnGC4>RU`;7e!jgE@(8']*!ROJGUU'aOAE@MhG;%$mW<Y?[aZ2Bn1RLKIdY.%+U<SPf+9_%;lpildeu'eM'`ULeR`H'b.#oL6:.R%Am<#i_*3a9V8hX"5K`PZbhNDBcn*P#prV4]+5ZE%<uXJm'7A3723"@KLZ,D9+j@dgo*cIok5G'gL-ooQFnJdE0ZFBq2V2@H+Ut:_J0_kC).lgI1bCQs,WGd\4-%;R<jlh#C*%V+68a]*%M_;gG7^pSb"ZN-V9"2F*rs-,'.g$%LUOhBh(<KquYU+5H1_DFQF,T*@[X^e?&>V=YNTK6-'1lb[W%F#AAT@gQ_2<n2m:sQB03W)]%[U#(Lao\2/o:^$KL;o]p`EqYdA!trW[*'(V^(j&Q2p6V"0T:F2SaVdtYF0p'2Mlc41c%EoZ^-2;Sp<)!aq6Jj0J84EkVtmLUh&%%%[_D]r<ZTmrkhFi[/QN-l1dr81KFm#`C"r2!dVE]F.ja"Ed6lH@Aeqdf]R4?H"LV[t<#hXT[H&VJ?M)`(Kigqh;0se&'FZ8*e"[IV%0L2QR?d!RK)i9GNMJa'$BI]i;K6?!?g"R+uVnn^)(c)IrG%g,&*!L"WnRa&)/@qQO"=b\>\O)1d!bQCb+GD(l7UeD(^ehP)dR^a<%..jq/n>!cS\O3Oe.(KH1plOOc[#mAWBgk@J2Nomk$s$HP"tY,[^+]YTTgH3BEg-e7D\f`naCncf_(oik2aQ&VdB&It($RAL!iECO%T"slqP3[-f1r`rBBI\0M$'iaP'Q41WI5Y4m9[BB^Vb"707Pst>`Z]u6d:_1r]nJHNUp3AG>%/[MG/\EbnqU`kHY"%)T-0ncMHEq@%*73b3c4Q*i,_pT62;9r4YmV.H*)"O?(2><FQ)8Uh,K@fFgtg+"KN@;We8M<#do^9eUrJlh7CEu?6Rs7:W)NQ+#hq*kk/C*1fMB(,%Yj&krf<:J9$TF4QBD-;3)PYtT9\!.p.B6;Xb[I`PbRKB[;dbg#G)WqfAmlAGSA<_dG[u\&P/7[(`t1o)o/(t^+q[An&kg$'o6Z@o%iOqN/V.t#?a+i>UoK\c8[2F`C-RF7`928A'b`kEP8USTqi8PGh&1,)/-=?k0&Qof-SdC%\[1n"OV1iHM@N/*!%R[p]q3T2i:)XQ,%el)"b=9L?:/2Pk7%[.`0P\:7p[aKr7O*)?rm$ktr-GnD>>e,/L[Q-.*WF$(uqTB[&Rd.%2/>-\W*K_TV+=@d/%T\$ZWYFO'Yh3B9%,q">83-CEO<(`Pm'GX6#B,H%F,+.$5-A(HC!)[g)5;=eu.3MZdle7m^39^Y6?5E*_-;#or*@#;k*):SVQ7E;2OI*`,":Qd38t,?P%#)pFBqXM[;jLOh"RTbQc#U:<,_[k".QjdFsifb=ODZdCJFI:"fJN"GhfgZTYhtHcb*>u=36u%g@)dUTjJQ-7k$:WHPah#A<I`cWM%<[G>rZ[JIZ-,\*]c#bKIU+8sr"]:c#rt[;/cQE<bi%[Gc-[*c2'oEk`V$2k]+@AaPJEB#HAF/MWg"0#1(K'`950-G]GtB:?7T$PZ%l\Ub4(:T,e#=<f%$'*0>_WZ81(rjaS(2Z&04kS];_qt/>GrOb;(29KKa&EW$XJK="%BADB[5Kk/7&XR7;aIFC,W9C)"lF'3BJ>9>%V=I.\WA]pl,gd`i.!AC#`^!c=4Yg;<b**%IWjR:le:b2*k\XueKb0Cs3+4.-23Po0GFGAU8O(JB`C;1s:u#+5=V)-q3/FUuWg$>h%?t5t:a^n6ng[rUa`g:sEA-SUG2[?L""7d6P:*)\fG&,K'CB,uB[4"^%Jl/ial!e(WDH>1ELb5:dG9j<L669QB0TTMZ.CTUKA<IY'%NIV,&6ct`_W"gArR%ZCW*pYOKkcp-`4]a+0/mbCLm-#CVqU&q'n-KoB=WiQd.9Y#1*[!B,?)fp!*`lO1r%/T/W&dd>'L5>8gbPW.%`n:N(]Gd1]j7Pa.Zb)m>.$cVK0ENml1`epX/9i(EM@$Y$PEjVWWtc<.O<KJt>tH_dgEm3:-\0qlD`?on+<s\WU>=`a#adHQVHrka%R*CWW&*Oh.WV+[]6-I%F@DccfO>.(&=D2aq!QLd!7pT^lY&2<MYQC;R%7*O#k?FH_9CNtX,tps6(/:E1Nr@">3(p5bErn17UR?YS%.ih&'112)jd"egEN6MX0BGWT"A/Olj_74?M:WW'_LTu'&QD[0J^Z*^7e/@;^e\qm5$oW`Wp)'&88X^"YUdi(6:c:Be@hG^c9`:g/%9jnoC^9W8u%hZZ%*b=5#%XK?c<MS>jI&*6r^<QDZ)a.TVbj0]JB=0J*_De6eAVL]/3AW7>d`!))8G-q/osZl5Li+,),<5+f)$c9C%P^k_Wn)-$!a9g''\<>VO\?>:HdAf#8L6hGPU4g1I!3YWdFuiL;Oed2Rd[bUu%9Q/H0$-0U`u0^kU0@*,L7&aDi[.jD.%?LEUZ@Of%IRK?oj;2"&,F+":@@W0*PU%?=!8\%QRdr!T]!0!h"g]=>e^Pb&(MOAL:FcUE\e)o8dK_&]Pl'/8lnJd4K?,,mbbi9;n19TXn;$(1%Y2RtT$CB*U68';?8;N;,Dl9S!>0OgPE>Y-?8Xf:h%#CWD9&`hB9Vq5Vg!GoLiGtXZajaeeRKt]$4gGPq8Q(EI`Ga.]V<9`=3ae->%AX(aWlH/C)PfX>mrY-UhA[0)dUi+\e)M6=]<]L<8k\\1NkX(b[m)HY4q[_K5=i/$&kl>eM8VYb,k1\7,9tF\"gN673)fcWH#Ps1@%S<8V?i#4FOZ?#9-aJo^Sb0Z0pR/nL`'3eg#5;JQK?A'Xt[QP;!#Le^P@=Df2afoFT^-60Z8LW?Hq`;HB,/#b`nEMoScO(Fe2(o<>%)dS_!`d[QoE+Da!i%d\mb7b!0#6!ouEKLG#$9ZUcL>95:_jFBS8h*hY)G'D_IV^HgPT;b`F-ta;>WGbu2@-\JnQ;<6(>5p@I0/-$%cZpJ);@\J:EpCPQF)">QM)20LA6RA/8S^?qldeu'eMsrnD\dLX,,\flmuZ=_c:OJ\9;]d0:@M,*FU[D)G=smUb[)n^n$?k:9<G1`%,_;PL^S!/7b,PqR;8>$o:?,ojD,<Bf*$V5kT'TG;'-4K9L6+Z4=>kS+o?b:c0THlRe]Ntp):YI+*N_2ZacYPU8U%n53D#.t#4n]4%E9t$p:i)]bm"M/u3?M@`bi.iNa;9,uaUFe\L$)$o)pB&N[t5Q8gJE5(p#'F%L,s42LT#1]rjl"#<lnTD6"5\>idKK/#dY_%SFV_^%#:et@kunZil\MPHnr-:'kdWp?B3_@ihZ_-Ga?s*RJsdLQ<fBq[7^+;k@8o/pVWnpE<%@0:ogOcUO$'=^(i,VG\nNkK(Q`Auf8_Ed%_JJoS$m;\S+e_kU.78WCK\"QWVuU\:G8a0J,hZdmBLZ/&.&aGN>Q;&5\1/XEcT![f,L?EO-CJ*oM1$4h;qf39"#f0^3Pa"+[[hLW%<3>h'lSDcPq2aT0\;7'=#gmAMFcMk-r0[).6IT:_R-Q\h&k5<"N.KL>bEQ$F0^_LF>Mi>Jnk,?l6oPFl+JaBChNV1HnK<\p;j7*M%'49?:.d?(@-O9,,BFZVL1P]-\8&=-f0ldSaJo_!]Jf.c<ZVK^=NQ)qX(d)J(f3=n-IB<r'R"-@'2"d8e1M_=iSK;!H8l-Xq0>un?%BM@mX;mM6VD?-3EIe3r#?K5sos08OZ(P]2AXQA0@%OgKf?p]Sh@4lV6p7i^IC,hY_Ri2__pp64)fY<-l,6>-)i4oIDN_cZmTtr`i%<%Ak\%9@(/aFH"bIXHS,gW,i,,ciuR/km[f-t><,DHVRr/McQ9CCYR$/]m$]9/RA*RAX>e1sUWNS+%9'54M]!gR.Mc8\&\R&dpra%mtuY*@I3t@QDImKA>brVU)G+W_k9UO+hYWW/37ONlR7t/mtO+RC@udk3%G>K0kG?jbp]0a$)*L+KJN[C[m%sc$^AXe3F&#9&?C2P%Ee#WBW$3llb$gT7,GU,u&_f"_rEW)OjgfpSVif@g&"MNJHUNI4'*3>D2Y:&s30SeCNf&uKUDkNBgW,(@Zn=c2ocjp2'+Se-18f6B%St:bd1.+41-:1leKA3`C'[;-'2(PXg%KdM`e=,V&!uC?8A!T`B?4Z4M`m"9;Qr+hb5(3&96/T$[ZgD"cbDuJ9pPgrWZAhYcQn$:l%b3Q-lbM"_,@[-JS;/pbSQ\RuO(-l]"8mtJFk\`5G_'fDqWWquK;R)t`.=Fjr):W)8#$$9%3/k7S707!,<ZHd*l;fCkJM]\X\O(O#%Gu"]L6+M!g$LL[LK)SnBCIaV7Mm5,QY^j'cJWe%I3N4]b%=^rs#t(Q?M@Pgei>j1&'-u='@\]u+"4E;kYr6&F7OXI/B#;'C5("e!%c]s.p(T47i#t9c)(N5g:_Y8GA@I^qHku./h%]>(t``GJRVU@^ZA"6RU%43`b'&HLHGAVAH\u+mM-'Q&YN__.ZV</hqRR<-XmZ\,X%jB"&q+'sGLUpn7<D<OI!kW(:)92m/OD8;ZMOAhSuB*!u[-s5!$54g`+).[`FCXWVp1'9Na",sC"D7Tnj(h_a'r$@T<?DUVW,Xs@M%MX56A<t,bFU$fas;R1okQ0ee`Uq*@3d\a;cf>m.LA):<!f>sQ2TrI-DN2"q3>i[UVk;A;?]fH*Qh;_Bi]M-8ccJKu1qa"9`FS[gR%"V7FS<rnQdEE(G+a;NVb\S;i9"">m?Nr>ar@)sokWKbcp'a01>,`bhoiGK20'<+GUU[dIde#.(EOFg%3^OWu45)$+ZGU'+neUs'J%:\\c&_lO-$Hq+\"lJ[<./N'%OWCb)nhXJcLN;XIP9i26_4`uk)7$]B^da,l$CG:T?Ap-]MWA]plUi-jo"O<6)]Ul6XlGWmqY!Z/L%d9&R)@":VR\LLTl:$7P2*2VX!1!->I&gs$u5MPn=V#-Z,h,J;gJAfQ[^nf3IlBq[T<WnV#s5AMm-e,T*WH-GAOC*f;jF/XeQ<$IJ%\^)7c1VIPlfC0sDH:Gu4Y#NPlTC^I)$UuBTEQY*eI2Nm!M*$g3L@]faP:h65=X]FeMfH)R?F9/(P_qSF'<`kc*T@+[\^R-TiB1>l%1O)bP0GL?GI_Pl(IA'LBPKrBZpotZQ;UfbBC'e]OFiJ25\P5C0Agj.Dr8A8(,r%@/'+V$8]])o:2#*aLgZIZ%=Af8)QD^QMQY[nt%9d\YqQZ+r/hoc<g9l#P:JU40r'$`7",9GQ_au7m7.Rbd82ae3@U6m;`FL,CR]SPUj$BLARPJZAT3ACo#I2)SF@VDN1XerX7S+I[K%k:H*_)7:K>Pd>n=._*V+2M\>Q,&5=r.<E,CjCdNr)Ua75R#'J#6S1DqgH,t.*B;b-a&;!-AlIi2lt0W\V75-N"s]F*`;G.L,Zlft%1,8C=XH8k,k-RjOO9,/">Y>_=0FX)c&]RZ*SZp)TRkaJCK<DE>^)&0S`O@t_%EkWUAIp^LBqJq,OB3W:Bn_9MnYZjq;9TFT&>Tt#%c&-fg0n%-"&b7_'%QrYM:MCa<;%NmcjjPCDW=mAtYsd[]<6pXM`!%g##SQ7&"72&l2i]&I3[V`S#f7X(;>rV83C^Ui-QL0Q1/Bom%7"?+ZcR6%.VOFfh)Q#V%Le!YAnr!sC)l7.:,7)gu:RmM"J4!,[121g/R`iR),_,s9DJ'1L1tN;Y%XIs`.DaX=P`l;l3V%YV+`eI-%krY1GmlVm3P@ofbC6Ii$J-949J#q-bP!Y7K+d8)U=(ma^'_S*qJF1b]EfdghTGdFe`A`/\f&lZ?bQH1(*fl9c;^_bCi2,O4mUgjP%`POe'<Tu4PQ1Z4aAr&+)K]HJDLrdK`#Y?5$FWK@giRL5\-4'L6YBRSEaTm\%-ijAZ0f5i!"6'$[RR601Zlr$Imi'u3:s\0.:s)'t%]k<)RAqN_ghi\4<n9.%Q0?EYnMAD/lVM>d1\U^\4mp(18(a-7sCSq^Wg%k4*OGbUb4.<Mu81b")#%,6+L(c`H&p<&`(N^NV!jl\X%-HH1*eKBt(bWn&k7SBh;+iOXma[J]>\f("WK"&Jh%1'VmJ5eC>d(r?`H=#=fn`*LZ.E"`.E10+O]PfJMIKWLAT"N1D)PMc,NO37?%']5WJ(#lj*Qm0YJHCV,J(5cWr"3??kI3S[q6U%Pean'12pl)#]Nl-oUW4ai#3'(oRo\>/e.+g!1>GRfS`?I!=0m2!1Ul!r)JdF@q%8#YLPp^ApA-DBKs]mqYNr3c_\Moi.WiVZM87?%n6m)S9OTajQi7$$ak`M&bQp6CeZ;W*h-cOW%pUCClD`=,c;)%"P))^Q/W9VEdZ%Ygb@X4&fU&?:Gj:;&3@bG=8l:7Ji>je=n`ip#pr>-#7#E?H/c`C`c]]GA,VH7ROUhq1Jc@Lb_=78q1/<lbL,".K=h5!dS0&L8o.'%1t'Z=J6FB_hBkIZ=%fMSN$V)-F(_>N)2E4DQj;JlZXHtFQ@b/+HZ2hi`u<>j&mkp2q+_\r[ZJFmIDs)[eC8nJ=_t.X@Jk4:J))$T%/$Y]slS,U@IsuHu0X>c"Ho*L@3]`?8LI-[\J0b=,:Edb^:.&eo@W@'GS06MZ9WG!!2?Bj>@J&-F;I#J3'WXG$itnbiW^4r?ZM1"\%:NlAkE0s<-1?51;,rKh4l5PTXTq)3_G,Tk;I96&urNgfB7tj;mUrb'KGiUZ2Od$JAPGc<o+\W1F8o*$_,gF',%ht[Qb"%k&ro94e%Ts)Rk2(FB,hdm0%)!b4i8s+=YB2[Th3<!?(BHT%9B16Yqj"NK>'hb%t;pQ=.nYLIKnq@CN)pJMEaf&ff8-,^PjI:"`HG*/2!%Hr#%ZGd9e\DUF8=QQ36$eJd'PHoZ?/[IT7RF!@MZCTo()ONKUV*p*J07:4*\.68)jmpl]16];"#mo"9FpgKg+o)Gu>l)&]@i5#5Dq<7U%B!,Go@ag-/chq4UWl^<5qg@NPlN?<FRGo7-6T0!De4V]W?Hgj39(,J(>C0n#7@.T:]'2p[%?UcA]ps/HCUSZaih`s699mn(&%u^9%,bJBTdO[k,pS&Z:*KM#Mp<J`BMhQ+URMEOa;39l2b":dgGe>>ZhK(Z9[S9c[W3f;M%ff%5PGi.fWWu]A"k2=a@9DmP*RuRT!oAN"%-Xt^joQKK:^VN\%I,iEB0BRE#bJ]G%A9P5R/Log,;j&L"j,u?`r"^!iZucu'Mp=?E[24>BiH(f?-@/*'E2&[bd?oc/8F\<6LuQYg%_mMTq@[L'Z+P^OuLCR[8b^de?`0/dLBV@*(A?;TU0ie?+_WX*[/e/H-?+TrSjI:!3O%7T#OW:Q6UR6DWhP;]&l;7O%6Ge1YYN4j,%L[^[+d,r:-_pM+pXqZ"\Ph05.dN4pBD\]5VmMpOe76M<774_Z@H3j*:[6At'!k,G3amAt3Pl$s3II7b=J;'<?"l.:0&<0gS!g/'J%abDoZF=]BqMRuJ7HD<1"_*c?I$*iKm*D5Yn<RP4DjVF9fPE5"f@h7KHA$ELB!r2FsmHIpLhQbS:_"H@>hNQWkY;KKtLD%(0'8Ea,%f@3I\E2ptYe2pl,"c^@F>_=\J8JRKI,YYX*>f`FFnfnrkEHN,!TjX+J$^Uq3R^EiG.0hbW@So%](nmC!`T4sL_A<\+`iHdclquaD%Zl3nFBb]r0%p'C"hiX4cG$m-5Y;QV9-G(QM*9M$O0B&+]R!]/JGAq>k4\]LLp)^ab7Re2IJK5&**khe-j37#k$@JM/0+K2t(qN`-%e^+9UlqMXS=dC><0?AXaAN(D92Rs:_+LiO(5_)7Ff005<.TSr;j8D,H77>\Mc\V]bM79uJ1ln,qgSfb'BL9+&r.ZO,TYD9NBX+.o%Ti=I)C6)ZkQrT'6!#Bm_YoR7"TpblG-)`)M?E+9Nq"=?Z(^@EpEA<=.FV4u9++q0;^M/"b]&`P#:n&]PU+niM1/!#ujqWa]&CDoA%kI&=BmB6U0Mo>S<DN_I*HlkqZlr1R0R4GAqLY#H?DZmV[56s-QeG7r88k?ub5VglDjL*qPlJ8;C2m2&mP-s3/=c7Qu:VbZcc)jQ6%(@&!gMA"4dDElEkb>k0'=q,SGZO?c-7=M4a%II0Xj]To0k#^"lG^^=Z7*MKBPGhHqQ\&:TjDn*j6R/1F'S7J(QijPFpZqkj<U[`+%T=C5uQbW0Dj)_:cl*Anidr83^B-/m*o,g=>n$G[tq)jbb&$2eT]3&:De?6R,\rO,sS//j_>kWKdqXd[En`U`C,osW2K<mfI:6SB9%$tNs7f8ga5FPlsJQYMMdRc3cUQ#V;pC*R(U'J#Ge)M5,r":3SRhBm!mA2!,h0]ubfeZG&q?OoRAV22O2/le=V.=]iU$n^`B4SPY^%:q?"Nod$B%<HArV8a7R(f:=DfIQmTeLm?0*OnB=D-W]b<]N8+)hbk&f1t"KB#*56-ZEH$YS5Gs93nkQ-)uFb'l20\\gLZ@r_<'rp%(K'Y/Go>hQ=Ru/(;Prq68GpJ-(\&K%"D(N)9Pfkj5%P^.W5JB,..;:8AKYF2mk(:.h^?+h9Kk))U-`\n5Ui^>[LX'>9!s+;Pn)KP%iOt>Ym@6"9[Md"'>EHe1I;Yn"<6ou2)Uq=4'X@M,qJF0Ym;_P4TjU)o?RE=<,%#?a,c;_c]EX@.Bc"?HNpg8--1'tY?Z:hr]q2Mb%qU-3;VDothA$)`]S:7jr!CmR]'O?,D[3Xs2KQSD1Kl%tMC(es,gJVFi:J1hR<>TH9.$gtuJ+RK_XJ4=-2>fDAm.eU\<6jr2i[)rq%qX`%=FChq!caJ:AXolTa]'P&r,_chiOJ]f5#"J$D9;V5^m)5FX-kQX^k!:6bftJCu.'skU87P6hrC2;\\5t6(M:-*/5?^SHQ)@1o%MN)*p*GDXp[&sM-V%=isY2sXe/]!Fe5(^CsDbF:S(E@+J'V1?HWue56X\nL"e@3ps^"KUC34#TnDR#D7r<R\U*YK[^[Vi@tq%7V,%F4SmWa7jT:5=Eqr0O29CUSHs)aG1-"R#:+=n9NSGF&5tg@K4ST35Xo,)q*$hqe-+5Bq=XEMR##K:kDI/&ObHcC9qPTpHBZL<<`PC%IXHpO9EcCAYn13=;!nbPjHHthGCg9=c7QKC7I?6/do>tlq<O7S\f`Fp*ot(^/B6Z=qI7RpPYjRcoMf;t#e;X<SMAI<)A^`kM(&kl%&(9REWU#+!TWC"b8sR<q0k^%8a/Bd$4:++6o)h*[(Jk3J.L-0"6TiX7aM@f#-b5;c<;N#FFR7dR>LKA>3o)G1gQ*fTPNQr&37;AN%:*gO/4O0gI$"`rqXlu=u.dV8IS3,4@#_VJHOb&W$L5Q/n&:npbQ\TU*r46VfQ/@Y[hu`fPok4^gHXH%V6%7-M5Q?Ia1m/4>2k$fT%lf>Om#3]obLroL9>huS*g3Y9k[YAn+GY8%Nmq0X+m?NT=?BVS!kZ](@Yq+ek"sW"jC.cH1I_>)A7(UWUrS[0dOahlt]_p)dRrdrD%g;gT?d*q%/4_/R"HJn-[;)k3)>PjnKF"_b(?hF:D@s^_6QiBIndJ.PH#>Z>]'9E8Y]0('ApYa73QdZ*%T9N@fO#cnaY1S3l@tBSp%#9V6iBIM<QnC&@GqM.m-+$'_fD+f%4LpfN/knY5*/\&>h=26+iE<:tM;6'l#.AB]m;(%H!*[j"3/D[S;.W:P+W`.`YP?C)CeHUl[%:`_FblV.es2=;J_O>4oefQ*N1k+TK]kbTh3b9cK`*>R^g,ap*QU[iV>3@q/n4oIQTVet>qkC8ZjZ`bJ)F0nQ/f6k4WA4MRDo).Mi%AB.n<gA=1:jsfBVd`GH-pck8)/sfRM38dmQU"A*NGg=2-pK.LF/<:,+W\RtaB.8"cm8RY\XD@h7m&/`W7#:XJc^TpgMT^gB_C1tT%A))V&dbD8k;n9\jqU,<"QptEQ?5i/h6j2V]-Had0K]P=-O%2@JVNl/"Z/9IT=,@A7,6-M\1?UuODssM6*&.S<_gNUm3KUcq/7[3]%CHl)0nXFBn59'HMf7Y$d^7r>;RG;C9J-?/%17f+3gM7)*FA^X8&eu,qj@np=G7d^46_j\F_b5f3@be(CUX9[JSiS;c0H792>c+K+%#K#<I@U^g6Q4>HrW`<8?*6W]&'-LJ@39,J7"/7='#p_<H>S?>^IIrZ6iRSQ+Aa00kV@9UnHhL(M&!<I5N<TJ3=22T,C9crZhMGCE%?Vu+$F7K7D^C.%b+l+`An#$F4=f%Pf0D;$ZqXgH7UU;3!FCYmUPsmVPWUE,sHQ>:1ZXQ`70`5i.^3k1Ib_24)Y7Tc"m5ciR94qC]%]e;B_),3%VW`81XG=S@'Z7r4R<AV[9;V20Kgae9Daf.X'Gr5c&MT3Pk3*IAT<IqL?Sp>dD%)JM;'&B'Y+=j^hF<`')HO*@lPG)_N%ghS=GF%T[;Lq1/jB#6fFFpblh\DgS&WY:gZ%S)`D<r@(g&9!V8ZYl+p8N<$(IN]B3Q/#(>f-+\8ApN<lD4bD/VT$kMrQMT^[:HX(%ohnF$JdWtu'9K+0G@t^GF_DD,"NprSNmW"FH"S&pA4$?u?kK'_Y#Xst5"OgB1^T0`P9?V&m232kS;&@&=R+:*]e,*6e:)N`Ya*.!%\CqFH,aI"eNSnf($h>-.Z4Q8W[O'mR_jnXl6YmXTR[B@PQ?5=rZ]W5mldsO.aZ(mL8V<4nZ,Gt;.KK,)H8bIhl[%i%?'%atn2`es%*/:308el?PA$SAr/>oca(2u'jeg[k!V9J$GBGB;.G%"`2YHt@Ve3&)`).+1\O9+9569=]#MD`F4p/"]->KfNK=ppY(3PlrE`1"B<%]4[U;l`>ngm.FdGL"QMUMJ*T?QS]DN[6Tm>B.$b)M299h&8AH07flPG<quMpd0';uoRl[^%;!4EG[N*t>Trfl*!9Sn/Ys\_ZYU7S%<O?,\b@l%420<7#KV[/3=E"='P?LlGq<`ggJV.o-@5M3Ki=4NE+'8'-'c`d%>B>"'Z7ogj1Akh0Gt&Ia>IJlt4Jqil)dJiP=R+oE%qXscKH/d+&6.<lt,1@m)@6"6qZ/SiuF3gSbf9,q#p_@\[f+0e`[6D)I+*t<9DUiIg%ku+gL,3hf02\jDe$WFZ.Sb?"<"AoJkMZ)%%b=c1Z]a((fg=c^4U_k0<(:m_7T\>0`+d?1&gdL*?>LXt,o2f,HRpan$i^I7cAJ`J,77<(WMm_FRa^/GVnM`d$ht<`TdPcY7^lKD4%>Z!iE-t%\TfN9(R(ZQqH:XSL]<*R/I^a`8e\E[Qd+&.G?q&)!uaHqtT*r)2V\'BrrX.SS`ag;VH^rp2$^.bYKP#'`Ink"6^.OqD6%WD+T8lheo!gV.=DTVJWbT&@_iPCP:IO1,&-Si=uqSFH<*ml/pYaBMu.g]&ZPMV>bQa,Lg3D=G$D`-?UpmRN\:IJqOLLSc"5)""Ho%'6^-Z3^>CT.[O(#aLQ;1PTGp-RW'i.=;pCNiDd3A^.(6IXm@Z2H7L@jh.T/6%\;\jNV%C)rp!h9SJ":@+')o^$qIfH@W<=BqtO0+%<4=7Fl]*t00lD3&%r7c2?='AVRe8_[g^]:fn[^((1j`LD%Ri&jb@3!fK\9>*?gTfeeDJ3JWe5<LqF@g%Eh+nR@ordo@L*\tr/+MU%qE\AKn15;J%"^SSWa](l2G^hV;gm1*3&*BfT6f=$18I,0Fil>&Z%E/nOB*$il''YOj.mL.Fs#%20N8pYXY76hl;2)jN++?Oig7-.%J\X-R;ut#cpqDQT`.nUdf-s,I!uRiWPZ[u/jOREU"4G.?3OAtq^MSi`b3?tf(5L!%gCj1*[dU0Ho1;7u60/4<r?9R=*I_Fs3tK.r%.UGo8fGY*-?$Zo9)l,`0%:N!ls8F",-gQn=Jcd?dmspbtFeHSLV'd2:B+ET,9:%R/Yg;I(SFIX.Pim=*L*JnGSFLK6"4:B&YqdA;%\[1IorP-H6P^.<)4brAFOOP8$JU6rQbOk/eL\<pE>b8?=)N-QsK*W?j:/(BKa<j7()l:Eo.2468Rc=8q)'j<XRDgpP]F^MtBDnT'%[N7]N6-JH,T@YBU'R2E$kBOM0)QR!hZ'`@VMkCQW,a5Pn.=VJ-dWH95q?kS5(S!)d[Y5^]G8\.ua-C16rMWDFZb]j.^oi!+EEhXi%_H8<!Rp%t6c:3R0JIn+gleE9"Niub2n`W>O]U+$hG1hr1_prDl(p3^"VUS5jHQ@i@i-;_LW1LCY7cM_oY;guB8X"j\9&^HK<f+7m%jMsck/cY1G#,A(I>jD(Q6ZVj-#%e1:o2h^Pb%l:%63VAF`lL.n4U31j,RTI]l$O:G".Dj3KZt$^A8PC-]lkpCb_&-k05]%neejl;%5)WUeZrM/\@0r<BquHcglQOaN_h`ng3=3g;.ra.o3+r'c\L[(*qY+>J_UoA$RDB[p_n5:.P[3DsI6F5$8Z$/#mpH+cC]45cs7Q-$%rqH#)OXou!JDtJ\i!:AjA)TR:*n/UEWdk4P]M&RQIbt_$'e@n/#=N9!gXlK0gD;Y+"@Fs/!<at[<O6m^+?[$B%TnR+Z4.S#<oZFY%f"UZA,'[<hIp5_VocTLH"(Gg[@:(B'`q%Q2i)D@@oE\8[ONGJrp2pA?m,UjY>9JW$k1Tj(1&k^'5`TC'MM+[NF17aY6<)RX4Drbn%VTnlUs,DlpO@$E\^Rs+SOU&;&[=<67-\lOXVM)MHjU!nXjruj;NW5EjT/D3(WDg)E$s&kgIPQ;*O+&'c'c(fdr(7l&nu'K3l*3`e%mRL%_=gWE9qia_"^)9\kcL8rER4KrQLP[dfB"#o#q#>MHa'hCr`MfuX_hPn8*d6!!3BZbYGfaDIf>X#9=MQktj5H#Tg4RC8JVhq!%XS;7`Zfh_)-VoL)Z,dT'/I,-s.1TF^,efK-\2Au]HZlOPogA=(.AJ+<-utS54e4RM[o#&rTn*d0Y0F&lfui*+6?iqAc/A(K)6&/e%"DqBJ;1u*5Mitf+2LDmOK0Oq*Gk]"@qh>`P+8u+!T*!g=IZAe?7H%5R/G.8o*\QJCCEL]1-QRKVa7m\aF>89k,V7F/B.5+6lF^EE%\W7Nr)i)FWaG0;7f^6;rX6>j+?iNYM5l4He3WhVA;0,s+1fsQEAMggT5KV'C5(;Q-bjD0VLe.l2[7<m!*`Pm!dCqc$k;SigZoD@%%[*XI<rf;&]DZ'1F(cu47M/\K541J9q"sTS;Rlmm<Ja?@DO/?kM]RFPN?eS/&c?@PbR865H=btdc.r[;TphrQ-`]YUc?Wm\!^/155%@PH[;J*Xq;8d1=-`X#L;$)[#*eY0VhYLCC*Vo,=^P/C3iJbIdFhsA"s^!\B@5&'e9jsA>Z':F<$Z\%$KAS>ANpij([,PKgia(DDH%7R+$daQOMm7XI:J(Rs^g=[2Uk?>1MOfV][CWQR9lo4`/\0"4dBGL!\(+7H?3N>WbI>C,UZ`2&Icj5KGfAWK>GY2SVWAraI[5p1G2%'Tf=>T)S_j1OG>GcVG/'Z7(pc.HfL?<_t-,J[.TPebC9qs4J$sPojSLg-nOrq@JUS;i3KWc%AsDFDiD#gtB'4KKrhpl_un;6K(tu%O*&sqnq@VI!akTQ"*`/i.SE?.$`DKIQ.Z%jj<@Z+/3W`+K(@3/#Dbph'j-Z?07]Wi'"gO@frpT'n%P*Q35'ehKDfr^n\A=_rHu?l%UaYNHZ1s$uq"j[IBf+oSKSS*a]:f8CP@IpGCd&'HZUTU:O-r/:"nVkhb'Q4akfB%qfCFK%Y=u;b1(gMi2#E,X0BBHf4BI=dI6IIm%Q?!Qeg&EU;XL!q;e@/Od7u#):,?]qDoQ!iJ<b,DWBmH;*IcJ_<O)a\13jC6"([m"_'M=+t^/-Z,ZMQC'$e\uYZ-VcijN(DdJXFnq%j+o:NMI6:<`W^-D]HrNB8J#%DF56b=UWR]5Rl7P0lRm$a/G!rMI;Q/dNC!K@_.Z(T=2qFIL"S%?d&mk/.Xf6RXQ4bd>e)>\;tM1<%O'h(tFmGs90E<PY2Tl[6h#WY'6r4dFK8&*4\bG`fL^5imUL'*G>8;Er>@JRoFoD<,5!Re>c2:\cB5PcHom-9BSuk\:+s`,pmtn9[%71;%eU@B`FbM*kp71#C0X]nq`i`(2B]+;'_?SRDZCh*Z?/:Kg/ARrYT+0n<&:)oK=>*Q96/@#GD4Q`6)_`$",n6?`&<l9I/l+FMX%.X=SALPgkk'l#C</W$=!fZE#qG*7Ea$SuZV<^^^1VNosBPDu[(ia0%jPr/@t2@%D-SnGMI6WKM3B19)+B^ks.gu'9FjQWSJ4)f9'%.&X/7+.d:1e^QEFS\nGA9c[(Fh\,F"nR1iMS5%=%=4lR+I]"b%3C6GoTg1au`\XtGDld1pGB19<"86tE:7W\rNhHaZAKe2+B,;VZ%2g0l(g78NRg1JE4:Kc6X0.h,LIWK2865pqr4*bYf7/M@-rY/Y\auZ/^5o^RBKnSP[+0V6k7qoR;#HX%O,0'/082@s&giq65LQ?mE%0hp4G1R!ugB'\/^.Cj6^3qqHmI24J!ErL1A*f`4&s5S6?gMS\$;s$#Q0kuemG,(E3G%l>cR;UafS9[WFCfba"l+Q>lfMtC2qUl%]%ZN^d8qFU@.6<<_QY7pnE4QTXc(%q*u)jI%@2,\$LAG&O*CeJ2!beR="V^Mc5^%I^7b-IqA[aSkdY&_<hZ$//M\[Cb1kfoI_#(;<S%Mq8K!LZ<)g4HLVX,b@%F@pI-6_-"]Wc/cHFm[,$ib'aZs.pF].\<f$4F_DMkp3XP+HM[X?f5m?oQFP-GD,^%^c>bHcUiG_9kC&Lr%9TnQN,CEb9nBhrP!-WG@$5saFV5pAqq?Gf;dSkT4J+h;>kOkljku/").VtX^(d0'P3b1,XZ*i-I>;424s#[3:Hd]*$)taX;aJets%K06E12l"'qO-%nb?32@,q1\ebo70\5'CSR>,Q\-fOWq<JfN[GjTIVd;5^?&t;]"'hQY5p.gCpPk@bsNo%!l8"iN?-OcpAh\OIaZF%^uH90/<+1"Y;FE^f__g@md"pp!\rYl(n/\C);0cuSuHBG_Utnm$!=?8Bb=]OU$4,_WE]p%p'_t?hJ7GB,X;`2G+!FJop"9^*7+al%D(JSd;T:%Tb,0.3>JnJ@=Ckh=6igr<bE(s[9f'nf$o<-U9Mi?74iin%,+Ld3,CglDeXr#c=\<FBd-2/S#*UGK(5XmC`T8Nqb^4@I%5'#$:>Vl`qROH#lE+,I\eiFrBOjOe<j8_Ld^jJ81MEpoi)1IJq-b<Tk.Nu'5jf_Bb(Ce',*K:H>NW`ZB)d'sT=%WqMHk"d=-222q%KM;Xu"a1^mP?$g.M1W,^8ZR,9R#D<[Gld9!U;GPT[k,t4(_g(T>jg;sp^-2)ih/"D8q/pHHSpE\1[+T9PJA3XfKYeSlr"j]oB/"[%\_H7fn.AW@E/q^PQjsF"(7dR(E[*_7AZY[G3'e,VF-mAMlo;_F%@gQ>`FJ.d5=(h-CF=.(Qke;Ln?=;,IF*p-^5+oR:0Q4/ibA#K%)[R\9',#B`0UTBI@%F`A-cB"%ba8'Tmk]UOi*LDX@DL@23KMi]J3utn=Sh;^(Q7snCdj==.07@B(-/"fW*HmLoRSBA$tF+:FYWok%B'">jUH5iFYX;!_+'<qja[UH;-,m6LI6aN(AC<U:?uRnBIl_hc3@a1:S2JF:g=S/BLl3LY&GJ9?)P4PsN/d^"U?Q%t#V9*i:.Isq%q^ZCmf=E[;-AcK#a0.t)#;?V52%_o*9gsZ;9i5<(?+(IMm>Zn7L0iL"BK7t^(jN<Ygm@<fVeE$jO2G'cH^r)+5Q"K(rg0>b]kB!Z%Zd></HX'L#MkD[JDF:uXNRPHf5C;ZcGrQT/EDQR&,$U0sJ2dLA8jNmq9U#fcPZ5c6SOm'rJ4+b4[6*W1TC)Z?_5igfn<cFN`R;7l%>#n]F.EgRFbF4#jl0`JPU&AZ];1@j#]Fj0oY'3eVR/H8Tn)bHZ(Xk.]A*T8VCOO8<>hHo:$D><t<&!F'PC20>c;Dj]^9m[9fi?:!%^N095R.:c)fhRDtF05,n]W'gKmr<+aI`;?_eY$+ZULhot[+=@8'_6V;iiMtrSr'<]EnD%nA<`WW7)b`NH]jbU6\1b-1Pce>fnK1c%k)MP07?%ju;+MU<7O&+]>ga9?HO&eF3;PsrNB3eW.!6@%6k>GNli-@*AMVJecVD#@5a\$X-CqI->YA/geP:\tYH54HJVQl`HNMMJ%/)45+qs-AH<cMR8$,tSS/hiQDI\J^kfnZ,gT_Em5HH9WeIl:)pGUL&"?(p1!,hYW/V_$9nTf/=QAs*L#kn6&LMg.*G:#ZW5<ZqM0%6hYmTHa<"2Vm:ug/JVEmb'&lCJf8C5H938MSOLA;Js=*i"SXRRE%L.\*%tTX;L?KVYB9=Mi:l`ab^_+#,WYFhoO3g&J%U;DZnn99%Sgc]Y$apJMr5i@EHqF%%L!LR@)_09O/%%+L!k%<e.P?X,gO4bqPsr$Sj"BuPYHU\/<;a^UYSY`"VbqJ.r$qT'3EBWI=K,@[kgU[`%A2oe>,=&(7gfW5h9:[$s*K%H;+[1TRXJ8RYESeAWOC]&'$LI/JWe\EIep?Wo0ZEfjiuY28e#^TtDBJtI#poc@'%"IoNs/,s3'jrN%=:NXZUel'5gB@ac<O"G53e/%0G]m!8;b]/c]lnBtP@VT2<5d,J0dU1/5=eFuVGg=+[4n?dk3:l_\sdHZppdu=6e\)S-<=l;W5A]=%TqqG?2Jj-QS=(]T?Yb_)VBHglk2Jp,_fW4#+TNB<f,!'S4-:[Scq3[&AIZ`/LAg']qR":_LDNB\J?(Pgd%ruHdsu;&#R-EF_g>b8%MRP,FPJJ'nhSYb!e(ofQe=a5Z:h9$M/&ab_`0@fmTS4$hCT^RoFcEg5@r#7]e^p7bqK!11(hj;3lpo>[AD2g)HYJHVaT6PjU2(JF%Ybsh7<*X]p+<[<[BYMQ9FNPZ.FK,i%[9k?#+f::,n<1X^'VdCm%=4W%>cG_2W\\`3JPIXT?PsSUIZX@5?h,$9Ie(#3f0<$Plbr7F%We`dUFE)=K.AfDs_muk^f&*+%Hf/+AgPFr4P]"nphA#mZ`e2^DqHA@Hd,*[,a%EBs%r/GY%_!&j:%`LfH=_]ggpDHu0mNgQie%u"%_JV_ip85t?jljL#LX"7]%jQ39VXd5)s1E&]MQXgJZ@3g:l+N#6hoAkYY54CHdYPu[)-'jJ<*FW:&0#QYQf.rDk^b6QXFf^J;CUUJ%JEj-'Lijd*HfWsP+'uSho/dt>+UYXJGk*;9]?[d>?3oPK4tr\i]q^'igS"[-:A*tdH+-gA6Pr6)`?YSlbJd*Ank`kVomKhdeLr%C%Z+c^m0tt?[LIt%O8]96mWf*YbaKhfVJbX<DX:E91Pmmtbi)^-B%&2fGHlqhS)[a;PDB-D*^Rm813#AS>*(ka!N`/ePh09aLSt\e1%#lsq#L'WA[9a.e]cRsXu6@t/M/g49!f#h$3J7fk8Ds]$I%,nQ9DEr8gIp1!?_](pbqL%2X;!(`1PiNN&%3K'aPjf_roS3pnX<+[h%C_oCEPE\GUJg'FKh)o$<0lSVA+O?(`o)<N[joYI2`SHXjX+C\6ZRLD=EP;FsQ5\L1bk$nY63dl@74dsWl%!:5\cfH$HKc_+A?so!%*a.VYMA<q?VOZ.?jj68iWbPb@.@,.&E\_CYi,b&rH0)&\d.l"1*1rj/i3r[CIjY[#s$/+H8+^ff5@o]8Mb5@mqZ&d4(iu@+1P.)/%H^uoLs8(]>eu=<t`D%UfAImQF]0%Aam[9\Yl9ruSKU39qVljB8H$m?tla-fh<_13U!qSn8-8ZMWOs2JaEW>6pd$aur0J07RaFG\k%b/YPY'mJg+fEnEgoqG1iR[!"4s.E-lmOm\\QjDg5Cf/TE0^)N7o9I]G,aC:mH:5mYX,(a+Os7`Pl&2>n?lO\H"k%.\Tt/)hC'>'b%8^q\u!!8,J'lQnPDO;,(8CZ^1b7o,Y;^m1$b+,R@k866#Mn$i_6Cp`Ap6mP<a()_ej4Z7HQ0)PsL7WQE%*.?Y+O/9E^rXra,=P*Q%ao#J#W)-nkc`]f^"^V)X&?m"K6(:eM_a<rL98g,`NR#N]n,Q4mPI@CsJr2t:9R7pa[QAuX6[TiR_*>;Dg7U4<r6Zm5GptDJNNjn\%k>]n&U%q,E9L!5t5^^&:$"Q[WG&*_fb1X5I1'1cNY(PQX_D]`#C95oa_1PeZ\&d,i'ZqFiBY<?ia=LZ:DTUJTjHY7k(IiodW<:kV%o._oCCoFM*\6]_R@2F$9hCEGSY'r!eA`X_,5>D$t(`<d.e2bI)Z!@??AZNG80Qds<>ZTU2=k0KrPc.-V"7ciB>ZL9/GJ,/]a.CJ>%E6L]>TN!3M!Nq+,\R\RO#`$j)G\)!5!%(^h(h$2:'nRJJ$pAtLa.QY@TNlj>oB]BPD?o1&ZMXoKip%[+REGVXb50s0[Tsd#_hC?g%8?V)b%+k<kpk<X>j2c[.ouc8KG[&;`JBd_VU<Q#I6K%hWWV1;!c(Wh(42S_(o0Ch&0oIR<cC:[**26BERFhb$!-_]U]O."Vj0fu)%Mi'2k^n'tbQ'Fa)UZmN;(u"0=GU[b^!6%/"VOt#2^qelALL7ThM!M@,_`=Q-Zp`!E\Ng`$!9p+-@S:/L\gsJ8^u9M%"4d4n0"_>-%<6.k2DheuhA-^A*S:V>^$R3)*lIUum`Z=ATiL6aIpD"H.[_`Yl%h<lT\[b,8&0Y+,ejrR@0OQ<qLn%`j,?G!c'ai2\B0UdE'>"o7%)Xut?#Rr8\HI(bS7A!>VGVl3!k&[$Z;%[!j[54V&%,B3`f0uU#F*k,!QDftY-W["b5m=[HNbRKj<6h>AYI^^r<T,'<a!g4\&eVqf%ZN$:,@f[R^@*6Q<%Kn[[oK0]>HO]A(D?!-#AF+?:'d)c+bB)Z&:5T:+/!6rK6P#H67l1ktd)r.>7Jb6]#A)1HK\FtB>fYs$?2=<-%?pH<#dQE;[Hq/<^T@]+I"S5sXIa=\%B<$3tSbXDA8eG%C"<iM"d'!QG)dVqHWcCPn\C1b,20NJ5e/I%Y?A.spPTG8n+UGeWT8c_#%<9h`7$L9rt_2n?hN?'*"]^S0aAM6Odc$%s[,5aRKl4#?!\%0C3c<ilrIC(9R_a@9bIW^Ke[#T>.rp8au]Bc9(H>!eC;.MDFC>VQ'%/,!?s!"dlf]>Np#;rtQGbPL4>2!s`pe-E*c!lXJ>mtnGQ'%bK2Y!"r%<B-H(TP27ig6kuI[$f*[qID'u2DtY.4Ch*VRl"k?PRXZu%5Gcmk-+YOeM+7e8gO9io4Uc'Qj?JoJHO_@-lkk=#@Qjo/1'gUoIWHh#BpZVJ<Oc\jd%SS8ld@!*$OgQ90-`T)HqX9jV?D0Pd+ITH%67*NKr;(OUGA?2]b$7fOdrm<ggm>=Ij:mftUgoSG44h3,f2:;UUOPC<_qt/*'KJ^GcXuo>7:JRu144:.>VXoI\l?8#T`Tk01u'^?%,j]np3`HJEfANd)4s(S;@4W??2hPQ03ML7/p2tV*P*AJd1p;:6Tni!e!Ks^,6ZORl00%iKaEAQbfJm85m+%R\oId@]4g/ASfHl?X%MldrN/Q:a:oZ>rAgu'A2-i.Zd0Bs86%-<j^'S-g:304CRTpKrr1G]ODP1CM.!RLo]"X6f)2Rg#b)>jgY!Q6E\nG*XA]>T;Vkg7Zr%?p9WHbNdL+iE9`F#!O\F#F?Xh\N6[,0W0QL&PE?G>2l8dd0(hqrB(>`6Fq2%5c<M;PD30=lcc9mVCPT)N`ul=nRkd,iE(>`Xomgo%808Ba25oX;=>aA4.NUoD-=mTrF;eMfPn%iH/dW$YW7CYcDE_T;6[SPnqFhI^*CS.](-K[.<N-RnRebGYW\heeO*6,7\9\]e4p-uk%it$&qf%i`#-SL<a7#p`"/fq*H#Q&Lc,icauPamgYDlC6sVlLT=ggCATZ_nEV>gCS'8".,kR>KqrDU1_-FgU")?OkWI[atR;l;U4k%iQ7-Hd)X(CY/%/!=)H%"j"d2$].pA>oS:lgYWo"g0rt*eA9lBmEh?_#>`?W4j+FYM&CtV@;i<rq5,js7V4rG8i.D#5BibfLkk>NP%FH*9af8+d<<?`";LM4N^1esr*SruKFGhPoi(>dZf3*^&B\<Xnd1`EN^k+U!,qiO"\Q'iEl!U;kWNe!A?G3,hrI%;UnoS+/moNN)W%Uo^Op[MiS([rR/$XW>rOLWD_QGlMp_HdE0gZA%.54r5u!ZsGgs27+&Ge76uk"?UA3S(`=)S[i\@FK%@k$6?&$0m&QU9:$<D4!dgU%7/KM$`K8`Gca^rqK:]+0WMI!MgRf,TjtrFa'LI,,48#=uF>P&O6c\tnO5Y^k^%mh'FNC7QLWB(DVc;[D_$Q\(4;O@V0YmIe_t/!u%$2Z$,m+d@a!OTmg/\B>C.6gq[&K/#IgYo.AY%+sjROF?fMd>epoAF-b-cI;QDA9%-k16Z18AaAR9!LJ0^@P1iEEQW3bM=+>6ECDg%)&D7a6/),uMW'&K5F:9:]U\j_5*o>EF0^:n:;LlD[:MM)*@ohucN?+\4%]d?B]?7:JfiulhMQ[?\1X[L@cJqsT]X5LosJ3S`sKL#%ZXt6_ji)!;m;mT7Ofi]&(LVQr$e(IHYkO@Xme$JT4O>PTJo"DOTP,-R`V:QggZS-Ir^N?la-fUS>%P]Rj<i6DP^T;7K8O\&6TWMg%3>7!>ik"l]_LY$I="$a]QX!i,_eGO=48BB>qm5X0A5$^-L^[@NQ7?MMO;^&&P9Er$$1mDWJ4oSB<?fb(N9tuM\3m;Vni715j4\Bk%q'be"<KD!I/mK2OYUnYkKrYFf(feO)3%Cr.Q$%7CI(/W,4ss":1:N?Z!oVSI)$2nF]S`%t+pNRf=SSiGJNaXp@DjCCUR(scN2YK@%4HiYo<44C.>QBhlLCiKeC?%[T71WEsg^ejUqc08Dc4[LsO1_]j0Ya[A;6()nLMLa>]P[\.=8@`=b/mOT4l.#Smn<Y.iOR(h@84:t%*l^U6Zb<TI9%8t`N"Xq-ij)\bE'F6Id+cb!4X^T`h@QRnMuC%>P&W/VC1DMW9=d9X4T'TsNKN1LSd4HIQDLlW8Z"HQ5PsP-Kp(Q8%$Oc7j0NX4ZAX0(DZ`+pljjn3Z`P0',h48dK7.'aIFoO[@SV;7c%F&p!.]@q6rh@UM[qP3':s;97hebeH526+2^_<Aaa36l@f=@as%4de\=p^nt5O8:q8,j>$ReMC3SD[;HucaS1+[+#XE`WJ>a3mWi(j'B(Cn[)h0`rS*ql\G2$3A->'S?jZSkD78d+:)RC1f#`'!l>K3%jcWdAO=7Vd[R)@>ocX!*1l`Vo([!5We;+O^q]L"ckX3lf[W5BX[OH%V1h[:aP+l(\&"bkMh4k'H3Ipsh?n?iBe/C@:-<&sA_@F;X%*SW@<r_aGa*HmTs^d\m:Gc;<RZ./ePYag?"kk_F46uIFs=tk]H=<[-cW('P&OL&aD3O#NA!Jf+]Qje^Z2A3pL(JZ6qQDLO]]UsVn%QjFX=0k8nr:<q"fgk3'L4H4"^q2>?]fMNCXabhW"?mL,99GqjZZgW/fXNuZVWdLl8=`ir@0EBLOhYL0&&.Ip8<h3DF/NKs?]s1q0%.:!&4Zootg4uf@r9FMeo9$:'IQq8>'kFo$Bo=iMp?BcIJ.ij;bp8apies`\u(oll@CK@+`>.U.(Q2p,b9lPkA9f>dhL;hc;kliKU%W@:Ub[rnCf'2D)O(F%WUrd>\J\k0TU(WZ'9_-Ku&\+Xud>H][@+#@cb:6NU3Mlai[.NmQJrYU\p1GE2<f_6.QkXDgl@CUXhKSs8J%jAd:'lk)tL6O$l"8:njF?(Imn-iT=N=8I5\2g)h`g1ZHJhr4KRO$%M/SK*E+3f^Oc7,*QR+M8TL%)AU(i6L3$lMf$^d9AUH-d:l:%Ve=(sO$U"--RQEa,sFje%AeiAAE`@@#]H3;!oqt*K>5K>fq(.?*^4D@>A5Eh"VFi/a$SoOn:_@%"$*t*3?Cl$BDattO"ZNZQ;]8C%0es1*?@0;1'[7f@W<@D6i$/M1h>+Xd(#TSHP?IRs>Fc[?dA?$G0fT7tF9jZ"cPtZI4jYI.#!d$DQE"DIGo]=p?jp6l<trD0N4#<e%_K2e.o@_Rhqu0(@WuK$0G>d6I9;,?frbua+.8nNeiVt,tI6.d2R5CPRE"?$$SKMD`9%c]VhW)@GdhPfT[*>V&JQs["O6h%,,Tb%u%O%8b#"24T'Q3SLUdC%8Tio8@@^.pf,U#Oa-BbIdX6KQRXTAT0_U&:.1Jd.X"g4lo-0!13<&R5!$I/k-,:Bj![R($qOJj3![.`W5#%BBqcr#[R5s*iJaWX1InNL<[W7Ah!O=jRLaNZ/-GrS'pkN_i<^R^OI81DZOM]"I[d+TT)&r!g%]S6LhAH!/%?MI^G#Pe(=3iA]^;;%lqp.Y31/3<\aLlU.6PHMhlNP/pO$p-?G5\SOPdgU1OKA(CHEm.j)%"'//5&7GfV2N!<5MXT"k.o-Bj.=i2r27]#5M4aRo,uO8gVk%X6HrJ^;I"[C]irNT,Sgp7%]dZ,`Pc!CU)=DHdkg@F0m#d>97C83M@%kWq,]r<r.cr<WKRgk``[3m)/cC>rlKB(*-@p)q-&s^ZY(P%Fo^Krs'/A`.6bSO6sQNoqcAQ^FaplO0sXWdEpPsCLY(te_`L)!q-Z8=S_Eh00\]HJmMLc$Zj9e'B3S^%406aP::P0>3p,8!+Dp2q%2O_O_Ijc-KGm7KfE-1orgYTS)_YJ/MUNXWh#dTClkok#)Tmg0hCLnqYIN=g;H)W3a,C!i!rV8?<<\JIlDN]Pq*D=(o!EWJ$TY40(%Yi,-+2j^jsp\g>%MjmT,B:2t+k!<kl'+oVA9@=f;\olpS_u4hQ-C8Q#%B)63Zjq"G6.5F7*?$<Q,oLRG;aU9TAep9fgd1n(=mc2r%g5:R@-#\b&Rc=9tH-=IHjoK^lGJ"8-`8LW<ffO.0I(.i8Y^^1O,5dTD'/n-UgX_/QM8WAEQAJqG?'S+m8VGjho*O(*(/YK2&lXsW%h`XZI7-(OqdC;i(EjOHp;Zbaof4IJYOO'\=)-b3[KcAWCllSk^SjSsDCp]GQ3H8PlA(%RQ0JJ\5?=nrWrQQKSE5(p\>^<:+HBA=9%W<q=@b?Dc#7K*%)aC\CNZ!k3nm@h]`j6.kpfUl;Yp2*/D;j<6!DGC?olrR;IDE0aDggMqVoS0Ue4Eo@OEY:HMe\_GOLCS08qb"dg%$J[gg\QDd>Z/[K\[popkdTHDeTG83MV/c8fTuQ^R*bJ:(O!mY!4DDi!!eMe#cQ+id2Ge48/3ZiKpO&DMRlNa&_.'@$^]QVdPIF*m%[hm5>788;gg))j_4K0`p^Erce&OU&uGcsj;']=VgEYq=)qr-m,/R_Y>M^[LYIXg/1e1MpQM!_\e&Vp-C+C^4]3e/HIc+LgWDphu;%P#oMlo*kM0:Q[aj;X`o28Z!,K[.TR<C1rh6EPb=3F&Y38E65,7<c[9@<B2W)q5HZIQ+GhI.;+'@B$^8S0;I`]eH9;^=E/5>H?^*!%&^DMbFH,I&9LO<_A,b>3n>PI^r]DP$OrDk^/@@e4[s-n`C?U-FD!UC-n>'bLYb#r>&GQ9F@DB5iX8r("UJ"*.\:_@8R,!`gH=@/A%R@2BdkER.Q;Qqe`[Y6R.Uof!P_r1"BhZC,O0AA!g&mg_JJI<@^:MoK?8oGBJ,lL].L^%6&^atld3c)G2b_DiiB/5-bc'/G.WjT4^%M5EMLBro_ToSXT6n5]=)IRignHuA<4XT\,`0N*)V(s;[,&FQfn;8<J0cJpr\B'U02Asu6jr/WWtnd2th8F3q[X&1.9;uPpURAP\q%7bf00/c%&W/KNV#kCa?I5b\WWT:5$FDeE#Z]:O4ME$'e_d<[Kgo+;C]HA$?V!m\!%Rc*$a9PFhp-MMn*?71qus3J810a:"Q[*FCm%U=Tjo.@J?#,QQc("uB[Dpu1R@E99X("Rp&qS\Zibq[p-8cQ=l!.2%la9?P;^%-'&uPm@1S-S#J'$QJZZT:jf*FYfI1q&4e]TKtFV%+@(:h!?`agP.G1S2t3#^@gL4P(SsQrE>u?'%,Z9_MoH't`(JAu4o,I_HaHL[%$E">Og4):kF5Ia)9=f`;C<rC;cUcg9mqt3c06n^%-PT)POF\<slllLeDp'9C5Y^s$SYsV!G&a$JJ4,j%[B-_'+r;hiZd,l^3f]3B+p/Po,;:ZR;c!'EO7,6Wd%S&7`X.31h/cZ5`6c"L%OU_UK2aH`2m)8ruF=<F6I%MiV7DC%:b8(Pb!48@FR!k4^lNZZC5$lir5,MQR"g8lZH6!h8Q\;dT?8o6aONRn9QskrWK5gJb*na!4%d>CM3)EltT"mJ)%jpGC1=FrJ,hfZ)rqjkUC\iY95_,<Y3*ji/rG2rD'8KZbg-'KMmAT6!*94#S;S4#>qZOQ>Q,/)mGC4L?7fj1J<%'"RSTQ<BE7rWd5&?kS6Um^%7M$2qYt&m/S7TUSd%r2uiZe(&ME'YrpkoBHV2cG%R2@`Q'&LO;nABCm8hcqp?8$q;)sV;6ET5egQf%/.XOk$3Kq'*qk2B#4L$_(q*$(`MpoC\dl[:0dI-pS\KdnRUh;TajNI$7U(,jD&D'+?qm`oD3UpGQFngIC?_J.1tcI\ol9"+E8]rc%##fF@_2`D]gg+<)6mQios6r)-5lF0[Nl,dDHIbD&a"Tl=&on68j/+6%B=:2.!.#?/"=Po?-D-@L4;F6S^hr`hXf.TPGT2ehqpb,\%HMiRVR$C:?Li,Ku8=<CIAd:DpV[&'mH;D,9>[osug_oU:*6=uG;uf"pKQsHIU;+?ll0j"[]6\N<+E3$&+G6q*mYl),gTP+ie!h8k%O+[5GZ>5nD(DWd1JN"O\Wr3Q96SD3U)DYFK;V"!6%K21$;NWPSoHC.hJB]H#MLNP9-fY9uklLVtkGc5$5j>9H0njdl.aU?A"/R?Z%cB5LHSfX7N98"@Ba!5Eb*Xp!\U[1mgZ2XZY\osJ&R8ksk.mY,`$k*o7JL?o*@\M=_ku3TPW8iVEniUrB/F4s\;Z",0=?f^W*YVJo%QP[TM!N^jE[VLn=/Z7Ve)"-q5hT](5'k"jPGSZ/1%bQ(-F:JS(Tc9Ks?)RdY-Q=2m!OnBFL')W?!$.Z6\(TLG_pn+XPSHU$HN3qX%kW*Xi+MgYV-$=<Q@iXAE?H>hD+?,F,rTb_hNmE!lcr[c<R`oLJN4)YF&lmh9'e]>3c:7L".H;AA\9%T99bpk-p\#GbMPsGC(p1o)%;P,:[J.D>GI6@Bc1!f!-n_'s.,<"#il@UQ$Qrce@!Bc$6DRG+@6p^`-NYGXW0u10Pk@LG%*mYi^YCql745'V-B%4+%K@\b'cTf'$%JVhaNOa!Xme18Uc'=S*J3P8;&LXQSGpU=MWRWcp*kNfhrB=omMna(qjDl(L/^HXKS26bOt?1u<)EQHN&f==@uXsV5+pnON>]4VqM%4\I%T60S79L_+`_dQ1;3FK)0tFh$G?9V!KA%&n3P+uLM"ab&:Jh>P_)-P%NZL_MW8PcQ>\L0180k`Ajgb(#,2/CKRNp*3ZKgV`'q%U8Q1G'6J'JHZ5Aqb6Tt*S4CsmBEsSf>^-L?8!;9a75U]uJ0&bZT-$0A.`f0dOIQr0WZC>Ci4'1N1"Y!#UON*C!YTeF-Ll>ILZ)P4%3m\[)9Obgs9ikEX;?8V7Cib(Lo_e^ci2Q?p,+IP6P<dgr'#LU546YHEO8NKr38[KH"gK&h\!*(#*h67IahF26mY$e[PonY5WB24Y%mds$@OM-*f,mhDW.^dpAP4d72#uZ;`B#&gH2&dcRcE4)-k7Jq[MH+r2:iMY(bZ&;EI:L"!-"_7t["!PH$0^iEpZIuC[k8pJ]_1ef%(XM`tIp9;;%h\_lYOfgrA8b7)2FXP7DJpO4b<hDN#uarD8.i8js7/Ee*a)Z)I#FDn_@.\f97=P!h:GPO2HP=fSV8R3qktT,gS)M+%]'%fH5ihY]aeR^rO7tePT=X.UIF)OdGJU/ioMahT[C:qGSn#u@?I@"dC42[DqVP^;_]p?A-pi0o7a.r4/6==ZN&DZqi4KciG!gSV%/7JNITn_r@"V7J??"q9312jk+SI+.1gp6nL]`)0tAKR8eqO?r2`621Fk_R8sj9MtJa&/l]GT]2Ii,@UK8_0NKnf+n!n]jdTRAUH,%pj,.$PO*<rbr:C?5hB>3ijmY3%".H2aD\BIZeUF<NlT+"fA?gDo6e&o>X6&NI6Qq]+p1Gr\beS;g+I_8A^3/G!;J`Q^5oV.!,OmS%V`KoA1G8*mn#$T'2@#Vj;r8065tT=L);[TO9D>qN'.\;K\Dss7)nZ8/Mm[VM0K^pj6YF?VG)P7uA37-uNEf-Kd\`iTY;::+`/a56%*-OUN-=4tJ)0L,";BgP3c@R@7k$SA<;qAqI.1Z5oOIDu>In9Q-Q%US_lKP4=!j@2a\)BgsK8;f%jjP3SKV=V:,Rdbo@2*c#ieK;r%YAni1q&IO7QofPm9SU@Mp+HRN@-b:'ffFelo&3S,$1h]OcN'6QB`=3i'G3nj2d<E1kGB&.;bY'*rd#NGHd9H*@PZ@V`h[]WfLDP8%&3-5C"S7Y],FWU'KDU)Li3pK6\+`)V\WA*M^+Sq2g*M<7#*Ua0ZJW-X[+`q_2(![]J<8QUTo4/0+&P+iOY\L\KZk]`JJf:X;fEU\%5!g'5X<BG)NZ+k>6);u+DIoN_c;-?$d?:L0)d5nU:^"&qW6aW@Mos_dng^edo[9lB+NEF,G/Wa5FgqDqnoXkg@t'G1(V=Ik[/S3F%6(*(YDd>kt"`4q5Z<*-Y>@?s)Y!XG>es?F]pJj9t)$J;79Yfg<YqR4igs>e9?t59],bUq?)[5RLG6`c\Ld?T:?Y7E;7mCM7j(krB%dF^65TpKqbmk!Ku.QV?C,O^`r,</$X5H0#PeI:gm*^kXS5`R4(hF?kV=J*0*re/i</6_5L(s&R1)Fe5Y=rQ+U%EV,0)li?6j70k,%X+t>smOls^q7a]WkX@lnT=[_EY7.[d*WS+0GEpX`>I8<"-Z!60CVVUQ\t6OtG7T_:F'$=.qpqgL'b/b^UPUl7gq1Wg`g89C[#@cm%N#kR.VRlsG_2^'a#^=3=2a^YoX`Ksp^PsLa81aj9ltjcim(dVf</!t^U))u*a;V['4=nq@^bEX!`hjS'1j_#-bbhf6KPqnZVS,P>%*\a0jHB(R.>qrXh;pQ3HAI9[ECn?HafJ2F0?3DNkTeF3D&5#$Uo-,<kIQ*5-G64CH&Pq:\T%8As<md(kLIQrn),h!%KRI/q43-dB%O)^[!9NJQ$FCn;ZhB+O$J=1h8ne/`*5LQ-ELTKt-YCl5Yp*upnYdl*sV&ceUj)*(,Ynp?3&A)0X)`i5VmZ7Gf5bB`^.f9(&@\inZ%EL8DloYiPFnLFh"]u]/Phh?_&q>i^l6k\]@!V]?J;RRpO;9G1SKgPsDOtC\er's7Kg3m-m@:""gAhj94iL+U%Jmtnc[!_d(i6L9W%.`@9tF/jgr/<=j_/tR$COh#SNm;]?aF3.5"gsm7X=p;*E0'?ClReD%YKkoR`!AuatS6j4ZA39dr.`)P"]#Sle:ZEFa!]BlN[rIW<%i?YTC9fBcbEF/Zf%uPuiO,nA?2V?QuX?mOY\<U't>$IklT@&"B@"_D-OkT*Q7og!_JW7bSE$H.!B*$5$nG&C,\e(e5)bb#i@_k'K%Ek<1USoT-Ws82#hf.@'D'1S>2WhLMX0-7E'$-g>"&j:GfMUNrB/?)ArU?3e2Gh.="Y\1!Q'Kk)&dZ]:;`G"4<qDm'Snmk/!DJ*A:%gSd9hkJ<>i#cfg"?sV.&V=n-uQ3YhD`!9Ug^Fcl`V67tMd;<[HRaSkT3_Z;"F!/P9AldTs4i!J?`RdCRK=DH;pTE!iM[#8^ZHI*$%::_$2gO1>2L]<g$Q,rISb0%[5Q/1iN03G"3_aSkH2<@+I&7JA;0/Ub.3RK<i^,9_G&m(-O1HPi=Xhrqa>7Ni_V5XlKEiRDW/X/#m%.#tf+0&QaZ13@P[I8/093s!"%2W`#2\#)G[@ee_*.nKNG,h0Rb2f)@@bNpig"IXB19,4=a3B)"!XpAR(?*kHj45e<VY]R8b^5as=%2H5[(,Z_)mCQNh'>1L8Ho5Pgs!QO0(1GE6XFVgl8<85e7La?!SZ%ZUh&'t24/he$9eE"1%EglOWIMg4EhseW73XCq":VqJgUdPa#%$[tNMLn9%+/S)B'_e>OW&\L\5BFjS-LV&AF0Y8L`WHqjoE#WhbD_JIL6hS<)5HFIf+8bo..503)*WF0R<<39VRFD3fb`K"7#[H;!%MXWZX`<jHkRmKK/EZF;NI=L"<gjNA%H6<*6\]^6aCm?#Xklan<9@34:4*;6VM5hih,Zl`Cc9&0*m.ku=4O]I`Rn(54$4Etj?5S&1%F]pqU[g=o&<7EAG$U1%m#$RPk_G>SEAH:>QKO54bK3h<gosA8II-TgE5dgc]0!qUY`t%CiNtM6T_V]U1Q&d0Y+41\%?ZLAt/[HhN%@u.(o/M/\Nh+l*"<:F,P?YA2hA%88i:cJue"A5-:ni.(&Xo!&<#0bj4[RLD"9GI:A%;e/[V;F8Ce+-.:4rds7Zb2H?*Bp'9hhY_5%iKBa<Q73.3^JWSme(kT$8.[K-AE@`[F#sBf!Ok4>[8n<S4lGQ0S6>j9,)F)*\mkO'n&#\&=nFL8oktN5V4u.k8HZ4/N\M)aeKb;\%V1'$Zig1B5B,:R2XkMq4@UK@@4Vkm:)5o2@W"Q))7R4ng:uG<1^h5Sj;T(r9Q/@AmT]AsiR7QH%Ylp_8<V7c:2,@M$c\e^;+P$0,%mB"?IEIW(]"74)B+3a2O/-l249>p`Z9&fRCB^MWU+H^BPBGh(dD*)r2,'[)kUaB\6b/;3TMYcZYhK_#4/c#4RYNL0Z2_*:R'T:Em%7"(B&>@-/^-e(AoK9r+Zk+j;'jFP=dU`A[uiGJ7PXOo"o@2C?q+5Qk,Lg@O(-[F<anr#'9+XR9U_@bja$f,*_gWcmD88%k#EnrMK%O]<e(=IX4lpn:k8nVBBe/2Kk8i!gBE(ghC]o0K9GLr4Fm8hgm4Y0C,9[%b^,qmc%5N9lGae:<Pko(dV1cos=X+[+8'8Q?,!I?9#+%(M-j/HpC(63]Qtedsj:K(M/"hMliDNXQ19^noR4-4VDC`0<r*0,sTg$%WsiG:bF'mCCWO8pVYdtf+In5+MepmSu(*=]fu#D3?&L?%gO9&nkYL%Ed`+LX(+FAi?.IUES*V+Zoet9n]2aoVL2[<J1d&l92G)rhpq'WtT^(+rNC4<?&`<%u5*>X$O+.(6nPb^4Lgf04].SFn%AJ"u*T)D6XBA]HSSr+'q(JrRrNW%Zqq6-N3V+)gf1uc.)RW?)7!$M)PM&WJT#co#CT*Og9rQAL3oXm=4WeOuZ$CNU9a9]s9oN2J`%#F;]MC?+aSIER#\]<#:5K2(0c_CRtJg?bcQf[a%;O+lWll_#;>[k$B2btfF![eDL!O(Ka;j"W5W^;\MEq]!crl=31?])AXSiYKtu%S[7X$iL3QmIIt218ld+g;pmeFF?C?p\>3."R@tO[Pa!_fMJuHt5(?JrSrRL6!/uYT!r:&MMs,3bO#G%pp4.(I!Hm^NZ4+7@hR\g3%)3?t9_'9+1>7+FdaC=142:2i2]MF2n/edTo"o*LroR1aVlC_ls0_`1;`pQ0e:JrhKZ1loaIeE[um[V+V<mcO%HiV:S.Il&bTb]9<%9T5YMNkmsUXmNkbTQK[JYG1q-2^/*,=8$NXXXTf-7khq51<%;H2>t@Xj!b$nrk*fH-D:F[JXYlJUtZdFa717Y^jHkRJYDj9B9e\T%\%T<p1uiUB^gZ<O+:ni.+n@DgeL>Ggg%*9$m^@E^e3Y4eV5tm(_OoX,FH=H_M.+e5>[B8JFF*=bL)?>>YPCh&eB^s-;JMt)(q&81%/fL^_#Je60dtS%s!@2^;>`CP3TsK_%g*+N.="sN4[jgD6hT;DmC:Tn!G\C-?Af@+<oYKkm*bX$S[e=^O[B8I\en:%'gd`I=ZZ$rM%/&)D5an:b/:*eEH$rE)k$l\^GAfI1q#"lhs2P)<pGGjUW.T?'bnOWH[>t(WnGodZT@dr8/7jC6NA_&=,Sie];XYYoKja&\qXLb=`%J[#hqj79M"<o$P++?FiOb%seA2+UNI4Ed'+G+%[,]1X#M[kq&[nGkROlWfX?nDCkN99=VG^J=o-Gdturba/gKZ^m+JNb4<j*Z[4^%O&!RZA+=\3'C(Gc+81ik*I`.G').WG/,Xf]]kd:<^VdZN,dG(!W?.5=r5t]PU%$'$C`dp"STqS%a+bO/TiIah2FeQonHM0=n2G",%,qkgm?=m*VknD.%bO`B#iRh.=:Gdl/I.bj<lCSD?,$]slrHJ%EGp`69@VJ^t@N$f;"L(rq\5/J\7/jk&l[GuEq\0Fuj-)\S1pYU'%[Ba,L%5.>i*d>rDa7b&ep!NMh'U79%#Om]r"ik^=rUp,;In+W+Dbp#u+WI3^4JIR]U^3$(9S?J_h8e>pd9(Aki`;@P\JL\@Di@0`%&]Spc')@NI5G+MG0U2IS49.K34f'IF<j=??Xhhh"J_8PI!sZ-sn5*B>NF'AOo+%:9WL\>(3hCO9K\a[>\b%E4d%)(RO["3lX?+%=%g#34diO:>I3`Km]0\T#K;@Alb/Nh+WKG"1ZGi,"\YE>LJJ#cBc1!n571d4.H@H\BHfSD-V;S'kn0C:S(^J5=DF)]6tg/P#TckrY!%c]:%c4EiG#IPmf)IsrCUl4gp&r(mMf;4%c5)%`&XE#);Lco91fpENH:De%(WnNJSq<A9t2I=0C1<$GJ-UX/huGYYCk[E[kK?NsU4%PS/p?0;RW3Jj/W^_%Psd<u/R$I%m[UTo,'@ODMSMU[VNR(S7d5M^6f$qV6u_V&$lINZPUm/nZCPXUW]JD:KID#ien\Q*nP0B)<$?%"-4QlZ"/#a_a2FCjQ<g_#T8T&`99VrNt;CQNiCY9l`O"/J[\%_WeS%Y:jB^]B@i\.d=.@`Ho,0:ee=3Dfu[:nD$_JsL3p.X;j3=2%hQRUMi-/cW9.ZW4?4,'OUWf@q$s1<BmiRZWC,k+(Gs[t?Rdj^V9G,u:5oO]Wn=ET56AcRj,3!9`JEOFm-0FY.]I%eLiJM$PF0raL%N_<hq.7<C)roqp\BOaQL].!o_0Hlc1q.tm!OUIP0W$5c&'G_S$\>8Smf@A+gb#n9B(o@C60U?N$KD8p:`h_>MYR>M6h6Qo/+]nem%U^dc:1j\+PQibBm#"N@GORc**JLB(mJ;IU8q`L,,@VL!q0Il?V2p<9U;TYRj'^FeK/lOo#_$"!<p\pfgKRNl[$3H16@3NY,OSle+%.t.ZPqnJ!=@^,fRdBS"Y9>f[mAJ&=#h2C5A1FOQ,`YA&>TS<I/a!Aan=t!9/f[=jDQFHTjEXJ:-$SI.$k^$c>7D%'h@a5OWj/&A]%C;=/Q'p<5ti[8S@;@QYprg!@Sb5BeW?KdLX+c/cW\G!)A?%[IAW/(]4lR=:e0:8\F.D+AaV(F`jf4W3Kocg%8'a@'2JDs<pQ;1DG%=hJPdms8$j$TfSt_.SnA,oNkq>riuPI;kW9'?17Tm.u1hHH>A!bTpuGEWQ_XE+Qb7l4@!%%(lcVX]l#Ekt(BoQ1K,0loF!aJKOaF%"Ksn9ABP0gM,_=;nUFn9[6D2TCL``.!@5G.+-NLQ!D_geIq=uSj`XV,TNM/Co;L_jkG.?Xb:D4,<XFuZZt#/m[3ke\EX>f2*]%3A%Q.A=IQsOEElO.<1nTNJ+:q!q8L<I`?*"NDG#CVM_([sV%C/n1g>N[3URMXa@7p=bu%/Ia<\MV;u%YPOo7R\n@PN\U_MP($Ofbmd5%nde\o(TTn]^FIY_g;G2N]8,K_/<<>R[i$J;]b]>,0T^6*7fi1^n6DU]e>s'F=P?][bFUG"4@kD!$csBaHBK]t%LtJbY&`g1:)[P>%cAua&RjdX'G?snq_L_sub=[;8SP$Yd+GFE-NckVA"$%@(Y`1:of+RU](I<dHgQFEE15$sfS.fnOphf!QfMQ>V%t4*@*ACoqPSb1$%pI\H+mBq3VW=O:)LeVB'oHqp5mWBu$d^:/kI+J2<g^P[7>sZHo"r-H5Gc[?HHShG;&\[I5A"E_Q6m74k1k.mt4fnOX+HU)!FWTKW%?h.Z_K!-Vu!+o3PP3DcunZ`i^P7`LY.2b,";;m=JC_pW00jKu,SQKdQhrbRhpr`=cq%C1k]?,u-:G1*Sh%eq6pI8#Rl#H:%O(Vf1%D@X.u^4.0iUlE$u^fC'd\H:^S%)10-%@8%@*0.O:#e]5[rck'1O7$WS;?-U\^^M*i^a)Vs$=R/cAgCPCEms4`Vq#k!>>\`6YYd"C%Ob0^lE(mARq"g$mr/L<DnFVTUHpbnRCRp/ZD$X[@oL;DKQl]9b&sq&u8&eX2pl!UtSJ#A#a69,IQ9d;8FhY-Jl78'ie;moKXKrk`%ao-X"a]4+)B:>];^E"2;K%VZJP/u?%M]bnIgHRf';O>7S#ke)l5>J,(A/M*dk*Y5]()$]WL6i%ZQOOsiB(QUGljteA8q]M%>f./=%leCb'GTq'm2thYh(93NlpXZh.Zq/X!0d'gf[)G`VTlEB+=Z&\X]opdG:c=(H6g/EV;VD6_:BE)>d.#CJX0RVB0ILM4)*!+t4nV'p%a)N/mGY@1`1'0\s8&mc;_WsRXWWK'!.2G&eWbDZ"OI1/*PEsXmLqo5gA#VT,G32G@E:VjmVuV?sZBH`oHf\3VT^e'4+t+W]l!2^T%2S#r&I@+Qi-Zn86LR\m*5HR;A\(^p\[nD=!5UrAB&RH<q80/X4Q_LddmQ3E];u(J;K((m\J^P!spm@Y*j8.6onZh<b.T(-EI:us@%$js?*K=Df+d,e3"ouuEcf%p/7$&]r+3uE0hG\iK:bY(Cmir^nGJ"L5#49grW)=[X;ku:OBC=Vc4[1WE0f"9)*C`h3&$NqL'`sd7!%831]"$oCaD-`5C\%F\atecUfGR=7KVcGrNi<hdb(A"JHK6`ftM4qRojbWQ[X#9lFTNk!-lYS5jPS3aGaR&BN.Q>^Yp,rImAh/od/%cO^^mj7;IU5R4E<\m8jH*=M&DrRZ[Ka[_]Q9.VR'hpL7B/7RhqB8Sg.?dJ>=3GHt44)47t>Pb5k4uf]H[\_EL(q111GG\U)huq3(%EOiW.XF-6'&A>RG&hOCo#9Ka'LXVDo)8K\2AQAeJ2l9Y#:YVk&(btuF9K*nkeOE)-mPC%\dk9LdG$XP15.hrP)"VHer8))CA0f1a%eRAHcWUM>!fHeV.9lP@)nHDiD(<8"8LstpF!#i?(Us&@[QlBSA/iT>6&6Tg2[M7C]hU0ZPgLU<\s"l"ND$&0XZ`^f2m.W-mVU_k8%`:cu1%'8`/U&6G,8-$\sKlZX9n/qQCq)uR".s%@S?kl$-aVP^l1n,cLKVYk!/:mhGp67**U[S5q^\hGfXl'0?^]+5as8EL"9Ne5B%Os@_krGR0_iD(N)9'8,`g^Vk1:eqir8X:D$HNusk;pP/P=6C[f2cUpQR8hrifW:'=PWu"73'33LSdHh?iq_>3KeV]g$-:DE_X4h4%!<`<t!Ubhq'SZ^UE/0amLtDo&.cdR[RDJ'T.qc("/ZX@-@tB#pJ&8Ck/E+I]cbCo5ZHGCKHHa.?]5K">iL!&<pYYqD58Ui.s57g7%Od`Hh)3EO>fuB3>S\5g4/OA4C5<S;*H&Tk:1;qZ&2@&IlaG+\WM6`'B>#M,.2D_tbI#8c.`4.iW`:Y*RicDR5ikK6("7AcF'mH]=%:'T$7j<FV4BTqV+p;`']rhlilJ,Z[trp=%;s3&/e*@"2%</40,<Q3l83s1NiK7F<s-AM?<8Y,&LVpd*79Y#_(P_gckqe2uR65iCY%e?8R1TI>GO@t3RQD`hB(p)J@&V/b39$Rcp^Zgh"dQBq?%%+M(-8H07FSP^^UCAred-RQ9Vg3d-SgeNB4)V+H@m,=cN]%Gu3OK<-0%JaTAQ]ANc;d\T?MTZ1PJCl;&%)a2p0M:`G3kSI1./3_,GdOrY1];F^NK:(MFYo-#1P\W*o)#Em+KZrH2[/Zt\AksY?(+/"#]8n'0%&t/ku^uI4UHsMrn#"odG.cH5':U\36^c^diXG;H/`a\!&\lJZ[1"GOD&dc3#Hq`eNM-0Zj)+dE\pa2^"Sj6/GQPG3D[$BuhNMjXp%Hoj$==FpIKWPo#DKq=F&+oj>thUs.i_X_nV3cA2Ehb#MX^Cq\/A;V1sKKL^GV])'$IMTH/7Z$=kaV(]8"ufrMM?2/S4WUqpG\cWM%.l5J(+uOW$oX2Y\CFVm+VRKRq8$Vig;^n!*e](L8kk^/OLb)ep0fJg;o)9)IMuWJ%;1BcEeB'S9An%r0b,@&CA7+]/@,-U''pMC@%"Lo3BWUq$aUkr),0!3j$+?u+mPKZnsV(@j@a"7m'TDdRB.cEH_VeA2eOlXK/5dBlnf=^<IC!-EF`#01CUF!rm/>o=8UfR?0k=@&&%@Ops$9^Ss:X^rl^\d4<E5'F,7*D&u)S+dqMkt'7Wi,]fME;F';d80uA+R.#BJEi:/]ONJFZpm4aYeZ(-D$tp[?>clB;Pt9Z:.!5>%%l\8Rp$#5ma+3S(Zb0+&q?IHZ]Z-!I7(kV/1-$#*5I7_Sa35D'[;XI7dp'H^'*nhSC+>Ds-YJ'RdO*qFY&>1BHM)ooq!0$8r&=Fg%M.a`.8E7bemc0?qT+<ljEJ?edkS@,I`1f,-^$9^eKkI%<48VWtl=s$+dXE,G9@f5==DDt#W)HnGaa='Sk]=;P_*,36OP_]]A(&a7%Vl]hFCLL"!*^uojLi!)Ym)mgfA8<spjO!I1.:&-B;Nc@ra-?Oi2TUV@[5Qr"!YW&R\H6gAf?p^i"=,gYm%Ria#;h:E)snktb,&OI%X>?,Q^>R?h'JKlUkaVO'+^t1cRj2l7RtnaMFWjV?%3%ikL)<)H\k9AdWfN.pd%Mq`@9oOj?idJC;lY.=/mDKa-FkD49olFt\btc\%B4d_"RY.-NciTa1.D]H8kPV1[dD/C!SK(<cKss'6a+I!E\^Tr&X<D^L<S\QYUt>pL9>Cn"9-X-GP&'<eZ(sWkW_Z&VE&a0rF53fk%Y!'MO"iKRlD&0or"9igb4V8Ac(+jVl2nS33H(CqXn'6S3P(X*Mf:L1bF[H%o&hU9[\:p&CQ>dedenX_9H)Hl$[5"&Zl2#@s4EIMX%;nLORTTi,>T'ECb*\7S^\e<7kK%e,mH4L^66B"P,.n+Tg/4)5%nTXr8k@(S*$R!SE9k,m_*Y4.Y)s8+G7a,=?r%8S172\BHITsR9%B^baL@42d03"4%e`teoJ-sWgB7EGqb,G7&>/`,W!GF<YRJ6m#oB.i"\WC%m)YuP)Bj7GjqYIYYD9&VHTZTkKmCEd!Il\CN\5Hp8T%d/L#o.He;u!_)5?P0@dcji*l1R=qN@O;4`Y1`tq'en#(,6o+L]'ja^](@cFd;TLJ]mU#N">oD'KoWtFc?M:>RD3Qp8UY$Zlc]:60%Tp&U%N\KcESX\[E_R`PE5oTP$@"(-q=UEJ$0YNPSd<)5cL^S^@hgAn&\<Q&.<.X9EIH>@114Eu`q<D]/\;fIMDm"I(Ir8dU)]=Sj%?;%C$TLS<kA;F&Z@<RjK7N2ahX-ctRAB<S1LU?2TAe^ll<Z:GFY"X-Mlc%LP/3#>"o"!j`0U&SnQP?ge.a]E,r$'CRSfj4+h*4:2%b9aq(meaBiO[b-((V&+*7PH.33dS?Q1DT?Kj1&b`&JCmdV)NVK9IU#AS#Tta^/0.maOk=AXg8omo(^nk]/WLYce2&8F(fe%]n<_q%eO'ruPNdJs&LT*YaQIq/JHsV>f&9-=;H!B)L9FG86!BV^FIh]&M5n(:#7$L"1;(>*6<<F#of%7R99CakU3eigOJZqH:Pj4/9O]/?%NCoA2JdW#L8r'$J:%&bik=nYjcE!>RgE_PuQN[L=$O/>9gnd[qc^GCW`>fA<@E7Q'?f]4mCC1o%8@k%')Q"j$FjJ>m4dL30l):hQ%C%R=HdM-LlA:riN\%]8Wi.p0Tj?HPMb/sD^([2e9\u&=<mWl+t%S$uLT.)J(NU3L:C!)tO6`I-ZFnl4S@i$.*-Ab%)LPEgHiRNch%CIF/J*i*_l,WbXnD7]^@Z;OQ[EB)CV8m\)!\ssE)HqhndPrg"_$gY8OS00\O.mJk8#_ME`aaO/&2#[CqK$m$RD([>Zlb].gqI/@]%>F[RgA)E.+]9ZunrDp"UbtG;[l!EuoA'E`e2#UXHSg6g[%oLbXU:F!$DCLk_[niQ8DiHM)I;AEf!1<W7%paTB_RtOWr!S+N/MF2h%\D!0hRC!:5C5sJ$MXF,:TAcN;-c3lH%::N`Boo:B:tCeQfaq@(<pSE7jm.]i*B/5/!D&tN,[fjY,OPqiEkGWa:*>WnVINC=`PEYY%mOm2/8p5:H/Na8r@gST6D7aiUB[WT9JOM/J/k[r]g0hLE\1Bcg\<QY\%j`e."qFP\g.]Fon?L(l\ua%d#.&O2&4%XG7QVk3c'o[f%Xg8)n3@Q$oMs88+N?f($6]$k\-nQ$d#aTM_.C'SV_k5HB^HMAAbn%U@,bJN3gQ-W<45;lO'*5k-@M&JF8A"G]],MHkKCKn)@hmk$%R:\Xk:_G6W'o%pYJ1$-LT^'-"eo7`tSJC6XdZjpCaPlkcp%=N7'EUT?Y^WrhFjVhfF%rGpeXR-DG@1Fu2]Z<GFi%%q1NU&=gp]1)%l.fH4XTE`f'V$L&eIGG_,=k[up;DYsT>r)AdWF4L<+"&/kHog7*KOnF.29M[_"sQ^h;\H`s3LY5;coo/9GjaP0:$5I`+67WJmRXH%B\>;[,$3^)]iR`955KopCfRpf?nIs*,-qIXZ,&b@#]DTDKZS2UJh;,uO%_L?hq3L%G96nXBGT@Xp.tAr:4i?t>b2YGMe<+HkRAfK%<XQkI!2_U*lbSisNu9K(?gNrXF-FE"C_@j4$R4R(S=0R4flP'D8ct[nf:kiEW7rG;K@6,t=tW8p#VkRdpO#n-=8nT*9\^:tA_mb>%\!9*!.33&.J[=@M8PI\ROS#F5F?Tqb7_q4j$2?kI",U*IacKfu@TumGgLO-g9O_bE$)$'^<"++`hh(,ZloL@RPI5,-@W]:qN5=LP%\&-?8JG9\J!m-):.Uk:/1:1ordO8ns$4PKWTo7BsfG%*)6:Z00`*9csC7\ZIeZ)PVmZQjp-5)YQN]W0oA[TdA*/dKuib%sS/_l\?%&b%/2l/h\P8FBn?6-G4!=^'&-U;03VKkpOW8Jp;=M%MdYiFjPi]Nk_c%MNG$;s6mt`0!J1He5b;B!f3hb9PetN.AQ#1IGBTOq/EL%Pcg@);oe$uTYr_c^N;fu,*bTDrQs?k<I*FGI4M'&E^F?9PcWQ`\L&OL;PW]5hDj9&3%#nR=P$Jj/$j]mM]5<-W&SG/A$n!5A#Vp5%+0[B+dTd"Lc$l#")X@%&CM1,m7JOJp$P,!6$I7/OdH`QGZNq]&&?d#$M$5M9/lk,LB!:3p9mdP'_m^k-lJA?2%Ci]-DH\ZPaT*`7%.5(tA1M3W?,eLHkqqWG<j6O%lB6:WCqQgs1As2=8?Pd:a0a%tO/EXn+GQa7=qf[^/s"MWk/^@UlSI@'X=A7(DIU/IRBW*GgC9Y02%pbjJb(V6eEEpFh.PCY#fhgV%&N1OQXbi(WVB5Q(*SgjP1bUl_"epU!CV@<XlImc>-kB=7%1;nl.X]MpW3C+#.Hi9D/1qg(JcsSVr%3_97V4U29+P*Vb3BZ]CrGQO6WG[DOdU:uoKMLK"p'<A>a-R]cAmpFkFMigj>r%3)"UJR:b!KYA"'>^i0nJ_:=*b-UN!VdH^+QNHT%UtFd2i)<QgD7dqbJikc:!-Bh%CKer7"@*tLd,klla<p-M88KHP#NK&D&X$raK'!i#A12jHc4lK#RM>\=DK@WlP8!c]AP?\mMpMCh%<"(I1$^1Bb&s8`5%[P-$9Y#cLa1cu(iHQ5V#*ZHrmPJ25[d]%G=G#BDF_it14;lj1*>?C6[ANI[G_(VT<<H`(S7AOtbgEVrZQU=]%T<n7Z(J3\aCpc$VmTVuEcD<"0-aN+E=),uB!>$7&7PIFn`a!Pin&GR-8>!:!DIZi$V'eQ2@%u^Jdch-P:^pL)gJ?&%QB3[`hH59r%CWbQ(r.`Zd46R?rl8,Ws\"&)/a4\.-MSQ)jj#ZV=rshYCClB.d1'F1fKW\>Y-:UWq733'Y/2c<jrgHHUT5+Fs6)&\Gi<*&W_7u?5%"Po]rR>-5\R.qB`R;.jO35$dDG2+q!?^<$L=VdLgK[kuB@Utl)`^[1WUt"Id_/E^kQpt_#'@_DnOB("bbD(P#,V/A-;)^1+9()Gk%Ni[g@R^6o&.54-<`rIfoo`3]+-+>I6SQrK5Fpp#?%_9"'S87VeF_2;s5*mA!9s2fIH&,3@<uZ2.4Je.H_R>nNql8D&=_WfS6E1&2%8$nWfHe&)*>WN+Wrc1XnBH1C78^'QKcEJ!V?NYr$0eGt\=B5e>BZ*%#Z.X7tAi\6WCO]fqY,#Sd6Vs5)J.]sj_qd3gYgUQp!"H4b%q"iK+c\e^1;@PZWM;2Um5I+IMjbt$.IoPVADFG!X3hVI@!I&XB`<&-c5tll@:eXg)5m2t=UWB'soA$j>$u<:fRe[3P;?EJXa`&dQ%<=j/Y=7Md'b-muaF\GSEb*lT)L9Q>5[8_DkFEC>k\OE1jFCt]qat1P[d/.`7/914OL:c[s/T]/!kjG&EIZ9-:Ed&S[*'>C%s6f]f%Vh;#5hb<.BNH2Nb13FV$c,>L.7M'7a$5<n;\.#^4-8.PrFfun@45Vnds%%Pg3L^TFhO$&ii([8B.k&5!ckr+2-(:;+W89bS`kku6%$Co2LFS/)Y=U=_Zi<M3()]rkf?pf,iR9YQ`5?#He/X<2SY?6Cpo&mfS@-b,f3L7B;!FmV!;iMa>QEJcRi+#SATs(D&p4+HCM]OLC%7_h#bBqsts7DcI%&cBKO/?'XMPF'25AiOB$r/*O?35I7-O6!1Yjd<lM@6hfU%ZO-\Ue,J13o3k9#hUMPXigD%r^oWY(1XA1-:/6C%\M-Y)Xcq_]1Y8oj-)7SCU4>9.@K]=[8M.-_*Q@hDeh_bD?d@bJc(`n;6%Y"*@llO+n1ErnLpWJq5"Pjpk>7T`+4j?9VpR/O4]@Ie%d2:GbC="iNbq5gO#n`029e7;bZN7HU(;F"THsL/>]=9gc`e*kppPf13#S]VRMQ[%eRAEi_`2]4$("&%"/-QA`kH2SZ"Q%./E&=5X%"PWr/NU<q7[ZO"G^4+_&a0%:LNZBbAZjbO@2-^#G)hk^a$"2_k2,b)fN@I<W7/M9YhOOn"ZnNrNj2#j]1L/(o=i?%PK8PmGapO'q%i4q.6p@UfI+p*?G?WG[aoCjS8')![1+S[;I?o[RrA:?Z<(6YoB>NGjl_>M)hq8$Vh"n)e>2,sB]<[S$GkS/bI89Lj(mf7(8r--.W%"4%6>/B(Mu%^2W6ONIZ47A9l!hR6$@(rNO8PYIaS>J"g<oL9o>o$7"MXEg;%$S01CW)TA5QRSa)Ill9V7J$3`^)@tT2PT7G_IB=Y%JpC4tVTm2hkr%#>*p\LRR>gV;Z_lE#AXpX2)>oN6\7[9U:5%,9U&\Rt`,g]06)h\p.!GdL0Mb[C@1)0*g]0!L!E!]tXf6cueNjbM%h%;cNCE1U<NT4KWKUijd65#l*9%(/1\0RI.G&p[%1.DM'2U01VcA;GSS^:ClhAGN\[_)+Wg;X/.s&`Yoh[0Si,kbJ]Pe]T[#:h1l%PY^;iYW9[p/H/u24bhe1n@:Q-GV1u(aqd!E0AoMU@U\<NK"E/jC1Fb$Go8iTa*F7uWqXb5YGlBl$.1XKTTln59X-COpUsWViE_`Q%F^UR#YX0'\!ts=V_^/ik%.K2K)p:!hn'^W::*MYPiIa"Y(fQF3$i\#Z<?/o-*%.mQ3\LlX6Nq7)\$nf&9FnCt#!KF=)DhY+#nHqa%!N0*hLP3JJMm;U4-?1?P/oiAfegoh.gN=&".XQI/R[E"98*kpHK#n"X`$c&CR-hID*0WrLW`YV,JnI!5rR*Hl"MM/nLRNW5\6q!n%Luj+[?UVn+BCsoL`o[2Z&`Y9O:Rd"I!KZkL*k>u]V/mDV\pVHU<s3jdJSF&<#5eg3Krsnc4uSUUP6s,#4.el6'rNY)7>pHQ+EgV\%'UWS8FYYW@CK[i_h'Z5a5W:@-TMaEo"3*VX*jr9a*q$[1K$PJR$Oc/81YBsk?eH$"!X-C8/Jbb"'+7DT^,K>Hf$^7Pg?+g<)N3WD%Gd2*3_pY$M$C>/0\j;rBk*(3[L(^@pNSg@L-V"Z[3&j#u7[i5[#i,I+0#dk^s"a]F?[nbWhZ$E)[5[qC^N"uNM'lhXG84;g!!Z!h%>[e_Y2=>r0-/h6:pSB;G/p?%Mqua]]cS24B].NXOYchUsZR'ilr#$N37WrF:ht-$_s77)6s6DC;$8qf)845g7jCfg7C^).-SF\r(%$+DeF-k'HbS,nC2--X/87\GCTNVOd^9D`Djn=:'t\_FB!J0ndure@N5kC`Qi(SZ8T:h`--eSZ850[+i%YLL5[]D(I5=*<8&pC]9s%6Z.::l#68%WH\G9q]3Of-HfsYQW]]T)0iXV;\R>[RB/2j1'H.38)_PPf7St,?@+2Ark$]SBe\^>eL5!llno=eZqIUAhQu)_fB`+I%B:PSrPW`P`m?RV`J`\eO<E?=?OVZ-qj0lp$6@'j9'V1-URCaP$]7X)Kpc'DobY;eCN[=b;Bo.B1&&+!MUIJKu[Io7[m93sOTT+3)%?mbsFP<i<ORPO[XdaO9"YqcWCLg^1X+j$QER]"HV8/*O@/@.'oooO7tB0al^!]@=G;AV@q__r,BSL0\s%5M=)k,.O(Om,VQ9hS*b%BJ'Df7[g[9e7"O`&o&%!m<fj^HT&C<+&'Of>FU/::(l>j&p;XeAM&Q#]!=41%B)-D(hall.H"@:'IN]:A.DgY:Z`g1RhBBQb;Z]#%UaEo,^P$RD0J,XY=Q0ZF@Zupb%4O"+^.-]Y&pb>VWIsMt3AEn-_Vu<%3FhYR:C=C:L/n=1]A_l;=p3'qZ^##$<EhL8^Pa"HQ=si&%G?k!SdX7aOYl_K%6bc79)b7OT&ce%KGH:O\5RV#n@aS?J.l$')Y[R/(`VgS#s-NSMVC$j[V.$_ZS>lD,*tTR8_$&!]s4j$g>t[(*%b7HR2)g<m_%TaFhU%Q^D]b]<X'AEZJ"L>fO_9k5&06F%jY/JERdo7QW6QYSJVF\)LGeEU:Qn>Ws\c]2<c)5B@N`2\[LpJ_.XL1NC%+rEoj]CbYGED`@KQ2k.K;LrcS,a-V!<X+B!:iZT:M_7V(lN<*>N#RaBkguiWN>k5miMG89\1#/jZUAf6NGBkpal"tm[_WDiP^QgM%";FSY[#X+&VMJBupDC-7\k*;=of7.,5-t=nHl61`,HfD0^9QId]`LHA8@/n!.UgeR$/0D3-tkB5cOD\s.j_FIll-7&ZB885K""C2%;cX4iJHR8@/1O/s9..%%L)E`75'Le%*ARcJ7Mf9]\L84(R9;;;R[4f-7@W!X<P,0.(m[`iREs0>dJ+]5M**Cm"N`uZ"T0)]kb\#t%b]BIrOK4af%m*+>:LgHA^h3I?WE'rr;h/t=)jIC'4iT$?)`mTdj)b>@bD$h/C[Z?=N$/6Y"C?2gcPc42&.M9:.@6"_%e5e,eH-!j%l^(CB.3Ua3^B&_G&=k^Y]+TWOP@T8-4n:T;)$*l;<-PP%e>b^6;n\+^Dp[gnMiKA6XN9)/]NX=6=mF)6*2J(i5?#I4FRnh_;BsA+%k5rGYdT)&0.G%\E94`77:Nl=:O^7)+7e:0<c7D.MRd)e^hLa(Ijtg[,RA>KLWA_I&^/6@a_>me"@rTPTUb[MS-D'M$Q_:sf?Zj&\%+Q,Co4NWg;0O.8VD5ab$_]g?GLXB+kOd4r\1-gOs!4qZ5)-Oq'Z2=<$@=\_@)V3F4A9.69f&qEh[GLdBF'6c)ms\VmOe4_HF+c+8%XF*ZV_.&kW=-?`YhX3rh0:!(UA:"2P>@7gEdRc!sKB3H4,>\.9S\(24?<kj6ZaWK4TlV/WNY'pr%m>>6l:*7a.Wr!OB0fjgMEg4^%W$?:m>mgT63(=gR;?p'EF,>/U>R,qX+X$u1G?#26e\A-.V?_F0Dl]tlbKkt+9b+^l5X]afWjW)PIDhqE7C-Bg>AN6BFG%TGG2f:7%74Im^Me[Jdci8D9p0:B[#sd*V`nr^:aJ>TN]9]Kd/#Y1$)i'Nh*m5.75LJ%g-!`k70g,])O6t@,WL]/K\1r8[b6E\VNpM0IE^C>]%2Mh\]n(lGS6%[aW:;3a;Oh/"8fD>@&qqbA0_(CfGBW%\a9-X0\;c\0_/h,jK&P%@3ELGN7pk:X5Ipu.jpA.a5$7WrH;ghm2K&0kP%&*f&V\[(*P`g!WP"3%Wci[2YC7:dt^RDC7!"=3SBJC5qN8b.H:qdOcBU8[S[nt&:lZrj-*-)\mmPqZ-_(rd7;&MW0s,*II)GmV'm%;V--2;dGeOj:@[:q72_;6DuS:[ZJQq-6m:=NXf9:G,aKU&2D,*-<TVUk!E\^ZsVa,ZWY&J`RWljmL<BJL^sNW2c$dnjHL-E'XRRB%i%?G'dDRjJUU%/@A&2!84,&aX&8/kZnJo=W"qq.`#jD"NMiJkCIElc`oHT[O!c)*$ai#08QOpF%Pn;_ok33Y2UHkmbV&*F%S:!F5%\es+tep6jd"E6aO@oE-NaO&pV9VJ$8lK4/#7O%:f#9f:NLTmt.gF>sg;L#-PcNn@F>CW-P2hbtgWaM^25cTHV#Jn?8]#6^=B=<^T%mNZnYBfdYU_:^`fZsd$ZR3GZ6GJ:K@<(WeV_I@pidtc'Ir;lc&2WUl[`f!sHca4p\O::US#IF"`X&Ar5\'Qb:M\W+P>s8q":+$8j%C['K#2Ea4*U?BV*"*FUY5rB5N)k.q*<S6l>36fQ^BR1!Y=OY4l.VOc+,7bXM_.LcW]e2&ddamtjU;S;[(`Bf[R*ia'_Z=7k*G7\,%loUr>3%d\\DlUH;G.Y.U=ngc'OneLq5YX*?bVkm6qZS[4a[#!?Y=>d()rm>8ToNfpge-u]*JO*?c1AfDWuCXVWZ!Q]29jC2]_'Tm%mDTNL>\C2.*!5.`91:?OE%q4,(+tb%==-Dc6325]E8<4J9L8X)o'.@ZYc@nML.R8;@8L+"'$SmbZ\[r.hG-,g$43t%HMW(,3Xa),%-.["nQ-jbe2%F)_HU<HrA_;gN0"VNs!X+5oPfC,gFb.Lb0ghAPVpR"U_*+UA,"F>&^aJQi;L<Q1p7m+a%Lfg,\0c4b3"R&[U,i7U%[Er<"^c&=6OkYq0hhcp.+N<c^B_E+Tb>NX?mY/T\9P6*5nCkiV/Nj_@I[0VoNO%CEcZGU]gHWA1rJlF>pqhqWTJj%B2edU\h)c51%9<&a)R6<XV3/Z1Q(SV*s)FpXp`-@,.%;0#K,EQ$Hi);>-;Pj[;'NTodJqRA%BGF@0AEJbH"phVb1s-^D#]!kDgPTH8M"%_#</<^U%5(*;Q\D*<>haYnKj7B"ApA3``T-M054@@YJaC5/U4Vik=m\,*Xi)$@s:(\Fq/QftuT_Ar$&JM!3.Vs0V!?#8XPY*a`h\&hP<RT-U%S]02X$.7o+:phX'M0gK`(FK0L`39u+aJrZo))atZ-i9"V3G;lkalKCU7.-\TGc.#>6l)sJL1P#NMHe<]$h]/QB9WhgMh"h@FPg0]%U5W)79gQ%?Y!"2aB&"..BM\=d;rLB.*b3\S1s*p43pj-T@`Xj)16KS?LaeFbp_i7:nCD^K>bXJWOV@u_0p=%$4Yt9sVNe(*p)/#D%Ue6iS98mE@n7pDae'C=*cf^jp"N56hnU!rl)<'UfFj)(N+%IM9L4Ds\E-=T(&-!Z<X88PpJ233Y@.qY1r+U\Y0t"]#P!QeKM_IEe%H]TYW#Fumg.k9]eL(tf,!GNJt:n#]`gC'hkfP1j\mikXL2]Rl<mgdhHI26-R4SkHe%Bhs-V.e>("ea85Oq#O!YVP1o;8FpK@B_G;%WoF/0RW\2'l&\uPknYIn?HTe-Jq5)Ghd,$9E,ZBZb*lBi@:2ni#oGO9\s`s4Y]NrROlVs"`m@e+f,.44c2l\\]M@rX\=gE_YsEBW%Y:c8Q<$3lS#SM0D&rBh;(m(%**Tb"BW$H"9^`Zdq:P^tr$>K73&sGqMZG93iosT&b9fi#"n6^DUU5#7i`NX,I+Z*Kj]lWJ^*;\3,%C>Vq4nR;lOMBsVXf*-<F2SWY@aDA?]9K?Wcbr)_JW1(a'N`a<<801ejP5fSHL5Ln90jD+J)07$)bs7C:X+7Zb'(X[bNKMf9d#B0[%)U'i^RTKnQM8ff^B(@itfB"m2FYO]kc)_Eqasp/h>cFOY:i^Yo;4/9r].J*>,YYg'\jbtTY>mDVjjFr#NOXo05p0fb?ZADGiBJ^M%$(rj11c$(128Pk?m>=[%(,:R\>W$[S1]2%has!lb<=Ya*Y%dALL-XGA9[1p[/An)2fcM@3ASWLYSGNc]+3r#p(GY!$S^!m]!c43X%%V,cu.6j[5nPL%T)[+=RGDrtjaqV26%g2<U"p;fq.)30I%1L-:mD0$7JA-i9A$@^H!Ks+eWpm5*@;g*OC3aj7!r<-$,D/b?H^SE%%K4dkb=QNl+8b2_OGB'2nfS&$,K00q,HoIs8rdtXP2O)b6,<_maj3`'eC%WZ,8p4gq+uW8o1(FWC$d;%q#dAm4=GXV(mLA03Ob\k#%3#Dqd+e4P%IdAS_.\`)jfRRj\d>n[IRG^"YG>q_("qG,oK/tc:10)3niCc?M>lG*g<"(S'@Ob@](P*c3V$esb&6]h(g2ot%Vlg)6%^LP-<Wpe%o!<edRB!Vn2&L/4M9R,Gm]c,DjF/YWX:(@uu;N/k'V'o91Nm*C>J?"SB+Cna_M`Jj/8p-pHaV2l+Kpb?oQb5l%edP9-%-EUL=AnsB2;c,4VOLiCs#18lNNYJ[&fN1bP;`cNOS,mhh@nC#e7&kgt!6LSjF8>2\+*G.N\I5rL<VNXMH(MW;p$8,Y*4ZfJ*9bmj%J:70LTpZfP!7Y?LN`2i(2Cf2I!]=,'@Fh*Z.M:em9U:2,d+>a$B)+QC+hf.,(<ZhZ%;REnaGGW>^Aks=I7qm38TNT>kl9"r3H>]"%a,t+uJ:mtPLceK]@F-!r"L*''fbFhlH^1(g7qG^j2M\s<B3c)ekn+dD%sKfAl/fk&h<r6MHXuq+/nJ%f9/_IQ@n$2-QJ^f0WX,@R%UkkN\pDjOmj9M9e1tt:5nd/r&og+6Z4\?G4OF&\NMCdr!<2LhPD0$Uq)0UFJgA.H&)k4qG5T<^;qJAdq(i?Lrimg<C@D*GP+]$Wg%KS*<3doCEa,FFR5JJKSbd-@cd(9ZmK)_a&9[LdJZ:P@_)6Q65A:pLqE%5"$4r+s:Hi:-hW*^_,3\+LNMM%CbE(-g8#2gj5n^e>:b%n34`F'Y4"-/nAdU,G/LV5Uu&U[#(`'n_I6F"d7.HhmPAnq(^RG%4P^qqk8b.o3XFQSBtMm%U@[Y'IT'`dSrZ?4cC`RF!gg`4"XCR%&:,7sU<8l`4/X.,a/f>0VF2DtjC7.iabiA*QXc;,+coGTdq.F?S%B2p/b5(=;PTEaFd=.R"3jJ"[iBKs1n<bnoA"uGe>[]fq->&N%$:?SVk+;.Z;:.*amQ=k^@UE$rN@91N%oc1"'U+>(asEJ0,?gI,,^UfB+:A90+AlueMsccV3JIf:K[FmE)C[<+'<c5./f8"1ZKAjR%0eJ0JFG9mi3?bL,h4kXeYBhliXqX8Yc@&9VAU!`JL,SY$fq?IfOf8doNagVJ5a'FWhJ<;:Tip.qM,"&e3pOV-MH%Ya>S2>oU]Tb;%7cL*k.j,LB"%/-/be]C;!a];GU=id7Q.3i`e=s>.a2#CEk?Au:d$TuKE4XW)5;EXk6KYb0\5TQ!`Slla:Ed@DiY2dXGP3Z=:FtQ8%>&i+\9eh*i:gtn6KA`aJS4%/tQ@GCgEY?PMP0Y?b*%+%k?Mp#FE_%p:%^XSGK<]7fC-\k5_0"dH<<Yl::<&5"nj)eHFXqA9#IrS<%Bo*Gj@p,V?<`):*Cu?0A?YsF$W,FY9oO:Z)&N5e'M_BmZ*"-"l7$Fk:\2HWT">a`bXQEsGSue+m6VMdF[ldl9?4u;0rPFp1@(ms9%nRdKg)+*c2XNPH;gPr#i*Fi$n0TmX[(^Z\H?AHct>d/o(8`^_]C9%Ot"%@4:giQ`G=D.g%Mr%N&ELo_(d&`#pJ`SXTg,=R<O]W%p%@u@\8b;S&m)4f0B_*Uk)j/rFUg3%I%29+ZNVP)B&FA#bI-R]mMBXZl<3Ok!p@%E6gdK!lMi"WpV;V*^S25dl;4isKc*aD?D[ibm.%%V*+YK*,g*+L]:fn7bV'Zh5jBG(g!k39OESIq_bc'`%,B=c\mYL4J(uSF>!`c&/\V%C8_DgDWb#PEHL^@&%5(8FfOs6&V*S=F$UP%&.%Fs>U:%J-$o5)1D,[e#j:<1&:OVS-Q'Pf3/q5\X!k2<K6Ft7jbUk0@5!co_\Qp9UgdG9@41r8Xd,PZ13<.W/"KE16+W0dpIH&8%hdu%EVS<`X_2(Tc6CIp7N*>P+qnO3@d9clq.)lFMqloF$W^\OFD:b0j.r!)j/=F0k\5l9cOO#C?7Z(09m%#U.njDk?]aFIQ?s-D6%=:JDYiZurg:,W6I$&9f(_"K,-A3YkniR"$RPH>;VMO=.^fHnbfaO1HanlhLZCb5cj0P/sm+g;rc)7/t@%7.^[G4S9'[VH009k@+o%7qtBO#DTQBOI>\9S-j<UHL"FF%sFTIQFj?@M62gGVZ]SHj[\9)J6P:WQGGDA4;_1%@>7*$3%XDSLDWoZiG:>1&F@QOqlGrS/eo3F%L[,ZV`qI=7I59%kM;$E:1*[Ckb`eG7N-pM=!FH\/!b="8.p&pSC-.r.b-55-C!>`-cnlGaok6QG8&\LER%R=E&*#jK!>SSV0[a(\%f5$gBC6!/\q!g\j*_7+fS[>MiV[MSH5/4)W[WF!='C'^6"U<LQ,6ju7G&//>0!T2.S)pjlZt)$=,KZ-d5u8tYPFI&W*QDcOG0qL:%R%Aq)!k'2D26\/G6bp-C[f%Y(US)%Q(""c\k[D_6N.@n*ghNH7FPM43FfDp0PuA,I.8[i,7dR+.?k"hTpS=]!Mj<DYR\)Zm[Hq(h%T!`Zhs6\=Bhl/\M#E"V25#jBq#u=[HH2)6(!3=uu6eTMW^'Aa<)te#ug*D)ap]&4g3\K^fMi(HW#pTZ\`&[3CpBEt+a/6;#e3:^*%A7YiU0g?R2I4#:aN69??!u?/&A^uEQo*u.#"M<1XO9DH"q4TK_c*!p/6I;tP7kC,$3<L^:YL7;CDoJP:2[0pUX`R%rk%?a[f0U/-%VUk2Jb%);XLKcD(*OZ$!5&+RP3gG1kfT,eiA%]7*r5EG!Q=Z#/c-."1X$.^`HB4cd@oK!=K4KmsN%NXnFE5U#HMZY4QrJb78T6!/%@Oh9-eE<IGqWoC(\MFJHN%E3j>[Pf5``"u\\&$d&a;+"n[BUJ4j0:2ZfQYJR65,!JYnoXNfQ]Wep)dZjqq0E]SV$YK.##UChs5%j%B<!b>eXpKU`teHGpY97"k^KMWm4iBbMDb%9m_9I@M*=^3ngDRoG)(bmoBAnN&AJoa21qR/jS]W9+ks8#%N$D,=afYAgg[<_53qf`%huH9ugV00!)pd%Wk-Z`)k7P%?mr(s-PTA9OEr0%p>#/m4[X:]Z&#CKA'?0<[r&d6+WULYhooAhP;piXn2E&ET(CcqiEP\#cqiH,*%`9A5XY"GL],MloYqRG+bVX^Z^(h=VuO2OAhNf?"`\3AC)J/N;6GnWC-o(@rP?rf1prSh,jIK:7cm'%VmF48hH^7d]#"Wu@-el5M_%Al6WfZ!H'NBrCpK&bF8#Ol<0X#PnAY;O\ULB2DL`DD7eBI[kRc8$%^2nV\($Q5e%l>F53=N^use&)*-_A:1]&!GbI.(bL,PhI=YL%TCmIkGQpSuG0B0_rJ(^WJGE_=/^gWR6#6>rXNar]/St<5qL81.XaJ7"I1+6iA!Pb7./DNFk)0LJJ"nc^Y-"WbP[iRR2(;FF@Bk+E%ii$=[hEWLbf[NAp+Ac5uf.h/$IE8e7Ua?/.k8=@r'I,^P>'Gaqlsitd[f\pf5\h@/Fqgh/gFnYDpcN%GVR(^S7c%Q%qq0E=FuV^-%K_ooDN\%*2Q'43<&<<TgT'hFSbiN1rC1AKI5dg?]aZ#bW<kh?!P33^84+eP=qV`AEk7qKRY&AI*Qm;`gB\KUf7*f?DWY-aF@-a4E%phm;m(%hE,T=9H#[YP3g]2,7X@`iq[i3Rg&0jX-J4E*+eT0!Hm+.N,Z%W`NkP%oueD23i<-W4N8GJ>\F4juXB)f31aj]nG4K5([H%Or<Q=0/6IiAG(/]/8ReT6^K_rh%&c>IQ?$C+%mK(9^Q>*Nbh^X4q0N`cQd%,!`^<CY-YQu8j5/@q8ZA]GS&$cJ7Pk4H9\lI@IFF:%?9`;#6Q84)F$nFmJ(0:S3s$p5B@XNU5/tGV4un5"@#q;R@oK"\Mqm!*+dL<\bAJ+fJUD.N_@h.('QS\a*LcM$T781sE_PPSq.tg@%qRGQ8-:Wl&))P3Gk8An*R%]2CVS0lDp9CUCRY25ADFZ%k-pF,RW7Dm-EB-3kl^<l=d!$>L4uW)=*K`Z\UbpjXF4>Z,g/HW1q0C!2%1P86hD_Sr?^XU;I:`>,Okgp"#p\>.F)O/=^L(rY1)1-3jg_cdUhIB/B^=MI:M^2^>]LfVVSlirqg9ImTbi$-mHgK+>F+)5Fc?-L5%#FM<-4LO4*q(o-Oi*=%5]H*@8cjo)C`YJ$)g&\$!aCXQJnVHk.^&A@JpFV&]O%jKJ$;#G0L2-($7:`Cd<ZEh"?cq*O>IMA\*LHW8%=*W81k\_-Pk8=rb&mX6TcWC^B/;qot-heJ#4uW*0.$Xjg`Kni@4[]a"ZGuuMmiJGjItoV&I+IIZ*A=8WmBIoM,,l9KB?UN\A(%48%%>M0L9mtk.gbkjKLt>?.jgaqX&BK<l1!n\qVpZLmAKRE<I!dIP=3*Jig4A0n:tt[%8nAAtkQIN7fU4f0AKRE<I!gHf(StWs/4&an%m+m[H[[nqEjZC]@EN.:O6.(bJG-#99ICM7Fg;"fEd63dY$fJA*p"bZ%K>Rjk>=:!2A"!12(Nt$M[fJE)b!%`VH,%_:D.q,E'/7FR%BW"5C$%iHFE>rkLks0<lcbC9B9WW?hN767YaV)Y+(5Bt;_@_]jmJudbYCTa\,p/W1fV$6O2A?Y5q5f[1iO%kk0SF$,M.Br+_:GX`%=Wa,A>iA7i[O'u48,"K)=2sQKcB)rL1APX&Z/G63WAa33GbFJ/HK`1skY(L*Q7CWL[&1D#T?\KFdDrXQ2Q&5DK_+d.9<X:M"lJap%b]gjc;F;ukM1)VK;"h/nceC0omqqG?f*1F5G$l#\26qHhND!(qn+5SD9A<o,qRG+bedBW-E8YYXkL$-*:2LPaG[@2_p`;N*iDeRc%7ng[$fX;qD9(=t(J/o\uR&R@2g,iO.ZT]JS>j1YE1/<H^lcY9NJUa8r>aY5!8e\X5gI!Cbf[T&Y8.DSp-i&f5U[/5l6jgip):MkG%%)BdB*^eW$VEQr20)?7ACj/6\OF)<L1JaBcW-DnYF7C<8n+'YS[j0n4+tuc(f*lOJ9nkJ^DoTYk["*/p;=>WlHu*P%o-363+Ha7'%!O--50r/JG:XDqV\h2hooaN5K_b4i^S]CI0<S"PC&J]q_ClQJ)]UcS-5-]%:_8M4WWGNYe&_dH9eT`+Qa@t\K'NY,o@g\Jd)Ci@G%O.koM;kLNd=%C[6$grrc\bnWe:eL>,Lqgc8?:VJ'D9EdLRlbd@KJ8tQrnWGVQK$Wsb5Qb3RrPFRBDjOV_nQ"IU#6pRBk/2<Ob7*<%JD8udo:^0'c^V2Z#':T_m2/So/f*d9)=uA0ckTQ)K8BX+=s":Kh1YjWcb%O?.^LpWV<4&:muZ^qR&ZB8E/1.Nj'%q]Ta%n51n6X3%J1's<M?C:.3McRmK<8a5f#MqB13WVh*QH;_(fCKSkiW1/H%7hj4(tbP@H?@\f&u`ljqQ1N44G416W$Lon=d*0']NnkZ2=e6_kC"G%DN&eg2B`ik&cD'\,IZr'j]&e,]MC0Q/b`>/eSb6e$)[KlD970S?rMFiN=iG)R$QK"I;DD`T#"j4^@mC/'dC+mcSH=QQ\Ep>[SY<p%F/dDG-*4tgD,unqLf3Zmo8NJL_Er2ZHFLpWDsUAoO&-.?fL=qG12fXFbF&ofDpL5JT%RE/@?7,K@oK#o$5,3n3ps\48054\&?p.;%cPT#?hG1dJ,Ta.)D9L1b&=gTF_qcBJnWq$e;2DVB@5s9_;s,m'3t,[BS,/F$&2LrnmE!`U4mk3<fO8F?,488#f\11if#Mrio&b_>%%B:D9.T[\7jlBNBiaJ3X/@H*^4uTf#pO,<"RLPCaG;q$nWYlPgg6+PKEa?u2p&b_7+.N,X!O(`u<G1"R!O[u(9TjaoYq4j%gPZ:W%=*GM(4uW)9_er<:;SP6ZEXQHqLcP<OG@<Z1WJKBBLDCEGB5MMqb2aC#2Wmbm*fR(..h3EoCIbkf%CY!\=l29EiEJT0`ok9kQjce!%>,#sW?!#]*#L>_3'Y&l7c(_e'`%h'M$]1@K:Q2qQbA+L#2dA5$akA<e&/Xc:Mcc]Ehn"UHCaa+hb14XC#@Rp]NI+R?H80hD0ZeGb%Z5?DAcAYe6eoRZ/13EQIl`j\fiUFuTE[W$NaXl=k&WQ8dZrA$"ZbA5mnOE49ba05?Bu4(!7E+ikX&Pi%2Z^]dV[.@H;$7h@,1X5\%@(*a+bK8q:8XYN>$7+jESm*Y#h=rh'W/FbQ5;I6m8u*7eX\df@iX84@:pZM*d@[3;:b8e\C*h;^5`4c-c;K6U>6$ehgp/.Dfq.(E%3F/1n`MDtTTiRF<+csX`a$oMVf1:Q?7%i(9jZ87M$fm:JfFR4>)W+Sk-^jmkI(LR`hc]b%3K%=6"T"Jarf0j;S7/+C)Ohn(j=_[.%0L7BVJI`Do7?.NoOee6RRqUm/#)*>3e]GZ:Ft!D^E?(.;q8O8iVX]SG>s,iY&HJ5Bd#>.PI[R$QkTn.RYV,jN%$_`*3qb.a"2^td%.H?$7)o'OiM_Q[a!LsP5>U>6u,YEUN2CVe!!Dp;22NAQ>ebH@:[Y)%4aaJ@9NlM*R,i40s/hfI'lm7q]n[:b.-eA&Y5R(XYE00u8%!q?B2'B!fqgr\8=0i5b91-ENK@>G(hi`6qE$_Ss:.TRO_=Rd(I)>I0Iau#n!daiqei4I:[JTZT&P!ic3/2F#1\#gb,kZQLs;E#u=%(24XX9U(ca299uIJrg]c*7g;42<*8Q1a<j`K?:q)e,fd`6_K#6m[cFEW>%Cb^gJQX-B!SJ<3.t&>"ES.:ao9mJPiY\0c:G51&.DY%,N@cMkR<dC-9;8<6btV&])Thud+Fj97E@D%K.=fKKVm+8,&IaB<Qq436DHrb#"kX7#nHl%R!DM,ip2`E%H;Os(<E;DZsAcW**&sT%B:h4VRUHDmi_RDphtPaVHseEEA7U&p".@bK1,faX)('D8k<-!PMRc]mIMYd4`Hj6(:@a#r,L#=U?!.b/-0K3ORL[9b0Q)uj<m]Ja%Y[pfZA+N9!Pf*['p]a^EU&\Sp8oCj62JO#m<JC?B:#*?'1-i7oT#>u<,9-0^K>4,j!^\qZ%O`<);(."aNW9dI"+)b1`E.pJ@VfS+%dUnb\gFa(I[O"F_E%=hh!!MpkaJmXu;S5\,$X&<ZbYB]^[O/YlM;ahh<"W$<?g([)TgV3WB\,WRkHWk4TVbuHQbbWpn@T<'a>PWc%ju]/)7JJM/92O@iB3hqT,q*3.B[0d-1\+cRL##7V-.aNLb^mOa'&^lrgmOYSEjAF&r<q7V8UoB@FY[!]_ENY^Wlc&rfn8esc`>NM%$S5j/O&?t5I3$M18)^DS\!,g%=C1O3qCme?T-7mE_,8nQ6V4iP"B590F<2c(9<W6`#JLIN'6PSR?"X*:$E0cGZCb>ZG8Dtujqq"!%2U_t=(k*2fj@B1nW82T9lj_*a"s$`QG&WZ_b=3%W2J5d[A&(KL^ThqF)gGLI1p!b\Z"t;/`pEU<Vd?En:Etc'-sra5]*Gd,no^fI%"mUU\M@0M)[Pm3,'dl-*?S&hCZ:e<I&2,VW_Rho`A?SFn5,eLsqIY*Xf]='?4IC1GPAfq(ES;;-f*?B!<'L'j]GA#83<k\:&]Y>]%7,CI%We^n"NK9Mn2[5J&@5h+'%!:S(AQb1:QN>/r%GlZUa!!^3`NltB1Q3J_?Op6@$qU@\fnfZ_@\jh>I])%_`2d0a3;32FI'YJb%RQ"nkf8!e$NMmh](gYWof<P804\\dqlc<Y75:]O%%+s'!h>s5hi*[h.n<u_[U`5Mt9%[_nCK?Iq*5p5?oGr<[@?S?5h5q_uY&JjY%,2WAu`uAGIW/Lf\".qU&Ji\gjY;JH=&FUn-$XsTR0+Yc<pM/oncM,5=!^Oun)YrIF2[3fI&$o(`[#8Zpjf2+c.B@?GEADT@3e:g!%^FRc]>4.uSd286YfEdah4!)J3QH(/cD61CC,W-k57,OLZ/X,;tCH/hZ%"YFI+]7F$W'b<0+@!;X7\dgB26fEDak]7@dd4c,Xkc7j%?56rjmA<iZP2ar$9ED+:WLblWo;Et@fc^#4C<$jB"X%)MOZd8_;H)%n'AGYm<Qp/#W]I!9n1(\f3GL37pB?QA%$9WVE,s\g]A(r0%f9j2UXC0L(NA#1RotjWYJ2,SSaq*.H9;NnFUc<&EF-lbNT+a&k)-8X0LHk-5]+/Z74&7E9d):(F:NR=jM\#>ZS<p`eY7,j\!_,@@%MO5l/=aP9>)W:)c#"#ilr.&8B8sFcdaW&@"Jo-"sB]8\rHZ!I%"b-c$n*2B=0>;M2?<%e13c&Fm,Uc#S8io4YQ0Yi(1M[]$-7.t$%42-_!8MAkgT/*:5AV.E#QqdLE01oSPdRk!jWWce\<B4e$-aCg]TdVq!:lN<N5U8(5A/\2)N'-qf##t#m0:i)j`H[;C:c[!\QqU4%%HW4c>`^+]s>S&7hH]P7iFpbArZc&aZ-9:jUjPkIJV,B:"IODVtne]0'@)/@U\)7WKKLBB@?.m\3a(Yj-H0&!GEB,`pSW!E$;3kCk%='=@6HZLPNKn7I=?G(%$VW'e3%D_7@Vs,U"&qq8:O=F$S`k>.+4j!iabf0g2PPYnB:6uGu\(G.F7@`#OW+mgGoG:IK$D!@fGW82=%,.YA/AW6ppmKtP$)go,7dIFdtb6t!o_iVl,dhLA)'j56nr[Q;'6Z2Kg42:*ANb]TpPD8](YKtmdL.KTsqS=BgL3%)VQ_VNRFON2R%dgqP5.3&^)mV/G$/+=[d*8<TGX48ihC):;2eh0<4Cho&q:3J5t#"[#P%#/E,&o:Jt]&6hK,XE5>E,@dtYoMeLQnn#[S]%XR.oPX$%_(h&\`9n?!;%8d\NV+IZ1(n3RpFtC;e"_tQg^h7-gr0_NX7e(='s'u$mZ0c$8RTY'9URfjkGN%GlLC]o8O/6,jmSq1bkdKsK^.H1%O+5W=;=<hin\Q=,l57sP"debqqq6JPp/$5TD8[oHQ'YTVL>'.`'13U_h'&eJB2LCpVhWXCJE0+N_uH,jHIPBd%+!3*5n?p8#gej!%gWgYS**q"^]d`aHN*$o,9m_jC8n^3lRql*FpKk@dd1tcS2N+EBK22b9dV3^>@d!+\NkNl./:&.b9pGO0L`O\*5FR%Tq["Ap#DMM;%[p=B\8T_BpC\*4:l:W\o>r;CFdRVMR'-jr-B5su@AB?5W!F0bF<=OC7#s/YHqQQ4^s,h,7R.*iM$m/Tq+p*N:*KO>XC\EDO+lja#%H"g0&fTW!KRBYck!Yd_e4QH]:FEEcL+24:::<QS@,j&Eh]QNKd8:NIPFr]Yk];MIt.J[]mRGb=A(S#uFOfD/o5.Xrq2fh/u(t.JN%-4BC@f5.VPh0^>8=E;Q">]B<thq6tJ_0br:Qec("q`ca]!;],BJsUJ+U9MZUb@;u#XKjo]AUj3fd<%<gW#aOTM1p$<WV.@@b2,=e%GZrOpG$lCf7#9jC'6fhdhEK=(-I:!?ni.l-.=Ue`DMMMDcmB#LSD[jV=Iu)@gHtn-84t5u*'H,e=:.>Nlf\7]N0+MD(C%I8R?,*t%]EAg4/LR[J<I:m[.d;oX,#tWBlIaJ`c4U(3Ti_CAGAke`L*YU\>U;+^EcHl.lsiuO6QSP#e^3q+[:NnVe\$l*\.,is]6D0.gMCtj%Fm<&tM1L[agn^L=EPnaDJ@_t:(?S8B_%[fQTPWs]C5aW4NdgSZik/_P^e@:PXtMi?-X>@sj^&%A'W,&\MY;"D^g1\5l'"fHR&.OE%:;trf[o%\23T"aq>DR\f=cMhBQ(G-;PU-MlgE]!=VdTF7MSsX42bPQnb'e.*fI5OdZJ8j*5sr`N863t*hui:sV]$#RUE'nN9jYEW%S\Sd9TBh@==;Cur\!DaOr<UR!j>$>"k^8"%o&5S+2\CUQ5_9u)aKFZDGXOFuH>?P_QP8l=2kmt(-4Mf6;bY)?<d,q>aS)Z0^E='V%hXf@NqrTQf##>mL4F1_@"rAum)_cEMTE'[o*Z39iaHCAQ#X2)&^aQr%#im)&qBE".O*;G>9ut$*p"dj9b#_+!Ek8AOSRDpfOUSfj%4+L#"(D?P+RsqGYKeX'P0))]48Mu#XPMULS(#@CUbb/?1L3.T<#A.u70@sum+4ZH8gaX;O^`%&+<=q,1.+Kb;&UO#G]d?*i$OHIq%I%GbUcJd=Z3mWBCi8DO3W,rLbqG(Hk3SJfclq8=<=R:1KTY[TF@u0%.0+#DF;H`[^lL0JC:LI"o_R_A!C+9Ht85FE4Kb:SWieK!B%dQk=IYO7e&Y&RC,h[,R/rZ8+VJ>>8a^RjL5.R,T"*i(S4H[jUIY/j1arXO<J!;@aK+F'ST.UG,;TP%_Mb?YG`;0O-7aI@ae_`-A%%<4X&+.ja#Z)?SW;nCbs*K0TRrS0[i\n9YYe*<J.Q-a0A.$47db)tto(b7A9=7(.q2Xs_0D):7PW\J?J7688bX]7J6M_JhPS:BJ:a%_?IkJ\RK[_-_&_bR-r3r-GQiCjK"$]:'4oSI)s/73*6eVXq]IF8*7R#lVjUc-qbfL4^<n:E`S0Y8:r.(Q0!8bB.l@SLH/?t&X);&%A!g=XNOu3>_5OVrMFWsA8R>GAKRs),c)f@POPP$"=p&E^.>;,s2c=Bdm+s:Y8W5qe60D+eC[((XBKYNDH/1OeV\Tr;:M]273i;Hp%\OmlRp9'<QDHn=">BQ'##FP^>H',Z<PsQZL+^SFFQ4[-7Ir7e/ml%0_Ltcd02Wk5sdl"JtU;=!N9@S'NVI+lj`?Gcfb6RJDm70(a%hm_G8P8sNjqK8\-3@e+d87SDU._S<aUXkSbZ<s-fF046)n40dnh0B%ZQ_Ha'D^\(H<NIHOpYVZZeZ_?ck@Z!3f@&]R9S`/!S+J1m%T'WS\UWp:,=K^Vs%cn%H7%_!j]!lT[j</q/rO0C0`u'.]D1B];AZ2=59hFY3o5=0e\1P\hl@WrB&m)pki&WF(MfjfK01LZ;TOGii%'YY(l2%[_^[)0\&:$+=7eX_gCMJ)##L;hsr7XOW.hN40CaT7P5QI@^YZ,p^Ec\_-mgSPB&Gq/*b<_%8j;giaE88'\ZF@p$m+QUh^%E,@?ar@u<uf1[FT4q"]PN553mj![\Ynl.<&m=q>SE9^LbH0995Nt\I-meHAXb>H%qHt?%.Cc(-fB6C>J'jeg4+`qIj$9_+2Rs17a%/8EYgS?GkLVO$F8cg#g1RKLBtbE*_AGmkk3[Oq#-19M]fNe>rVedKe:rAHG*pMf16VY4$"Q/Xr>LjG9L5t:/BW=6eRba>=hBde35%N9>FmO6UPE#W8^LWq5m#c%'m)#4F[Qs#nuG5rVr&Y$2%$1[DVE':LZS2r6cN1s;!B31YB7k[QM*)&d8D;9i\V`L9s:SOla%;:N]%%2mB.=2a.!0=[MUXoK*5Oih'B87]a1&jE).PaapLmTpkV3OSifT,3,,qo?F4d@L-IfU;TIu/s>>gJL91,j'C=EM=Mg#d8^#c0'cZ!%OT;mW7-&<OkFL5"AD*2WF[VWCd(;T-+@=:=D<-h6I[;5)eN&:<!fP%@@;&h0Vk0c2-#b!%,8D\NKGjp,:cW#7Z)[nVD:X^9CVKI^%o&jXlQCsYY!mHU%!WmZ@oshbJ-PUd\cU,+0)-AJM,I:n2eLibOYZ2\@c!%<pa.g/LIKZW&=?VW6Z6g:]r->.@-8.?[O*=_C5D)33%Wcu_^60B;Og4;mS`;G2U\gUH$O2X@K#](861'[KW='C!_$6u@XphI"]SUC*Qcm29:&qXR0]hK]:JWW5Pn%)I:*7/)C?'d\**r,6T%,?:BAR?_+",*==h-t+%2d!HLTJOKf;Mb\W^-,_@n`3(YEa>6H,>n$Klqk36rY%HgF-qYYoL$X3KNc<;^;4Mmh5"\BdYnP%&R)pF0%"pQ/OG%2Ji_jS#G`q+.=$$6[[."RF0;idD82ZYM6V,\mVOlaH!OZ(U1[4&lt@nip(n<^!GT_/uK802;d[Qf3.^NW/njAH!41he:3%fFWtS7E=-unIFk1Q+5E.KT`jL60V)f,F@[\dVDP'cSIK-+F.VqRC'_5W)5tX>+8GN#3^0B?Zj8NS:ap!SAtGV+nh#a_o4(9G?Al4%n'Cj#_0V81\PaGc`uP%=dCsZLT4_iNH,T.H"qm3qB3e9a/:-QtMkXJji!G(.`LFMd@BjPUJ:aiZ@c:$fIBLoNJ__YFn&_Wt6Xm#/%2)kc@a!Ia#hI/_*\>PdC=@2fE+9M-0ps/4)@fm4fH<amOj;mAWpo)Gm-.p`9)_i]6es9<<S7hkP.3B4=#CCTS'dq`8XD]PbOD\@9%o:>XWFpb-j*&)l>aa`AsO0*SQf&nm]iWlu/a1J1Od2moj;Ci4W0oog=HRq6-m:UiB-N6'hl'HHYon:gBd.(6CD]^JKb;&d,6tDq.%(UCqTp9CUC^C_'\7iq)J5cqa;Bhhc?*^4*C@[jiopbf5I\NLKbN7,>>GYC!*W1;>*+0`1c8r<=ZTg`_q=drUt:7jsD^9\$<d6Pi<%HBC'#(.VLPZ@alBO.koM;r==<+'p2P)m;%6W)!n&DC8,bD-06#3-Kq2[d@8U6OA<_6/E6MnbbRB$O8?^o8KeuBr*ZB@@_M*fD9kE%m3Hk`*V>*c(3-@&n9aG'1[.4q'f5HCOP1/`;>X3,>@>k$i38$m_d?V%?D!M&*@WP":f$pCVesGr/[gK15AGNnlfPUem;$P,X?]'M%bNI=hqAU>QXS*FG<5pN@4C7$B2E+$s_P'!-[^6X_ZG?%9'dmf\E_)".$gEN"g)b;,8eLNh'rPEso'(G>E!=:K/=%])LS='E;kNeT%M4Kl7.I@s@+tmNo#=0%B#:M=oh.e#\hIAh[)BZBWRQ`F^*%dr!Y=lO*PJeE"k8DGh\V?2oRPtdM4uTf#af1_"a+Ip&h>T?f5#8:?%@YY+c@V:&3gMs4=2]Al2SZS+<flcS]'QpWicn(VH(Ufq2=qOt3[i!7O2YHmq=o'E.c%Wdr'T4ko.:`d@Mh@ps2"$Un+YkOZPT-+a%OCKZ;*i'G9[gJ?'0d%\)1;dRB;rnnkEY^]?WrGQ1[bX^?K68?eCG<@?!0i>fb!mDkfB?kkf"ffN+bYsed?ickOr$3o*.rm!#riL8%AMIP;GY<=1DkX`<;*l%l]cJ\bI<\kAnhP(1.MCC@qZd9=7nQXeT7]Sfb>(m!"4ih]MsD-$[Bj,<FUB!-:lH6"?n*MRi'T4Ys+-7p%!p0Xq[P]Q)7Ap?DaAKmR%l&R6Am-!D59TaQU2hSXO*S>iG5N]QL<qA23h1oU<Vh=)AKujH0hTuK!'>i.n=._eA[<GS4Y%77JX!6C%_<YeYgXM_#(t\H'9D[-_[]urBN)inMnn]dV=#"5c!)k7I3\:8*MAV-4-]h6=>GUFdPs?@Tdg!a_he9Xei@ZfVnY]rd!.;!dqLonF%l`$u[7fX?`+]=)T)XP,RC2hb8p4.q:_t44+X2RHcHVb@m*V(7LN"4f:?.l0FRQ!OM]]s+N/=0<p,509oV($L];W<GM7O&UZI!=_X%"+cj7WEb6jI:b_uR@oOBD.Mj\RF`0U&_o#1qKU.]:IFOtOj*55UX2noE.?r6XL_g0'`D;EB<ecpQ\AXP\!+RY#*u)0gljWSMBW=o%f,']<#@thciM6^S;Ilf-`lG&0GN8onG'68KV=!I19!l!g+932h5e>D*VlKkLeA\$1e1mZ9WY(c"<".n#fIe5`KNW+f_ms4ZdW@in%oL\[c'"?>*Z=2juP@0`NE1I.@[n;Al?NUjqpdV)M"*oAa,TMH4Z!OWF`\BQc]cYj@)'UZJ7NNBZW@Xa"05)/P:##h,$[>l78CJIU%pU>FMDDa3Al#ETJ%7Pi3'kh9/cL"k6EhEkVl3^bO_-[\aDl?9P9n/tM`NM+EcGoc/'B<9++S%-bRCH.q*5"O>,B'l:"rhSOA%Q&g%PIDaIg2opcOTth#U+e\M$oLaK8&Cuf[3L(GXDTa^5]@0I$#)Oqmb7:MeMh4hBBmLK'Hg8`DKLCp,[2^4/"j:@o@_58pqGI0+I!h$%WNN4=/0.F1dkD.^U-<.2Y\!<Lrdje$O"6V=5tX#%]U,hR:@QYlJ<#4h^#;+A;<Q.'G`7A;"o*CHV7\Db!\QqtE!V$0_EnZAkX,j-%J&CT:pEX0B_kCVTXCuDs++iHWWop&'@52:.;qSdA7DrO:f,R?V""?C-hPNLIdc+iW\66A>f>CSoq`%D/*o\;g?6:^g$5^'JO$f:d%!Ad8J^?<%-R8.SVar8J":nTl;'$PAA&^0X5_p0qH@d:]:MGG'tB_ck3qUa\>XQ;YS$_"UuldW?bg1qhqGZg'GWZ/8\V1O[bKkR+P%2Xfu'ngT.e+1:%2[E-K>r#B,q,E>uQ$]JBGZ<UR_A,On&RpNY#C^bms&lt'NT@pTYqTsJ$I%:n8kXi5+Yir-<,sI?B:uH@CqMe*I%*q(o8LGXHbO?T#TV]g!Z85^tG1am`QjnQ5f<m&q%K+AU2Ng_1LP@TC\l0Z.<ELq^jTHfD=(@>?(ES]5CUgq4BLk@fnQf1s>WgB"%%0E<1?U6E"3f218\?/*J"fD-,AYht&jea*qUW)%pQbo9XN^p!ZOLk2`Ga^U#!nHgV0W9m'E7%!e(l*PH#L">B)#hXJN-/M,1VkBo[%EYNr>Dl+$JntI)S$Tl(A+\fPVILh-#p+d("G+dhXZ&Z/^d<n7"gh$jf`HrqV)u]YiCnlhtlZen6A#h>0pjCGR:m:SFA)""j$(6ph%LK.\E)E\UEl3jHdT%PB'R6C;8T:BN@=g<q(:NZ0I)^j9m1\E"T#EXVd3-d/h`AEoU#$q;H(GhIlNmk)KHU>81p#9HC<Q_Q!FlYmk%SKU*3=t6+4:'$bL/.CkaSu2+T@G$W:"rZraM5A(W[)4tsgTWerV(h[^@+,40n/+NUHjVigY[$mc^N.4+R86$L&,nAbU--#ZBYi/=%ng[Il#`a\UUXQa]ggNI%6QGF6Ll5W_lH&h.T#*?=nc?"lS<>bL46oj$\Qo3$#ChHk%N`!ZDbQiVW16BP_@D$$7RD#m\i>d23=boT%P@/5W[LP:X]s5lB*+UGLS:pAZbnT9iUKM5'@&U"/*Vg9;BLpS(BV$G.a\U$"pS:e%\#5Kg4g5SYO*,%6_O*A29J.`Kc3dFHg;37*%]I%0X!QI<Zi*lb\JI_e(CYsDu@Z<g_;U"!m<MiB>@h4FgAS'1k?`iA'2M.-TgOt_N1odU\\`F(]-FQhSb>Es3#*l1=afog&RD(bc%N+ZT[$:Wn>X[XJ^Ob_T?eMV(TY*i7lkr>2&@69sNF(:6NYKtM)h7qA!g`X!:7^1T'1a*$n`^*=prZ#qsFEKoFH@NKjaLFlmLj*I_%0j$N3nNOd)YOgFahO0=Yi1'N)M+A,jMnTus8DmQJZUR`.\Df=-3fGk+afLZu_;HXTVDMptnO.$YQGRYJ56<UjSWJIgFFisM[_0b.%qI0nMVd'EpOZsZeD5c6)BD&_?\Zo-Go7X#-dnetPh&>-u'PO654DlrJP1'a&V<GR^IAEqT'RACd$QZd1)gqPj!MrW5QCfKY+3C1E%I39ks"O6b6/op2>n'a=Q>S;=1TZa&8]L#QQQVi-L#'C\n),7Y=+#[S*!A'^Ag+N15'>:'$&1\9le%^s,F@=/u&A8Y1q_4J*6]<=q%4D81lVt,Wbe]4f_H-M.:2%l3JU(7.%B=<>I5B/Gk&Is@pfCPlbI'm[kDHZ/J21$SET/A&$Hm3n;&BN;N2PTtTDYf[-pt*McY45R=%&:-"(p:`t&HOMB:gJNCS8Td<fma/kjcY5aGlknp=b9=H\Ni;7)h!:1]'[L:.7hE(?Bn`MuUjZ*;$o2E/[?].K;7W4&Z%(ScHi]OD%S(I!lKEPJG4a$[(U)Si=I[$^Rc'4>(36JI*,Ck[RIG7,a.V_.;,"u.mQMCBi4;))I>Y3Mq-T^.F)fhb4h>"8]=Am0FC&7\,qPdG2%M+Z>p&E_5(--<SQAR=&?>_T>\lK+Hc)gkdj<KRgD&GOb<o\d(-]J$\6(35_F0:+Uo%T+%9=:(p'FHj)lRK@8J+,RS7ka\U3^tQdF%,M]n0Ra.qgePEI]d*J@&^N*+eEL!N+H!3`<f12N;V!/HEVfo8T<m>_HC=:7%^5&lA._H]8Blg(\i([\Q)7MOb^#T24n+eB]0P#8c%/]!%UEd=[o6J&Cr&,AYY5O61g5U/m&E*[Tr=3jb_KsBs0khLB2ek(EN#B_4P'Zk=bP!gl2=[i\IpZGKSV&J.-bMg?t)45.kc]P*1%,"L&O0,Z:'\q\=`=T#eD:slc3IJD2OqX\fOQ,S.\7%Pm!,7`hXH`8Ye*g'?tG)G_%H6]h(aruClXcegSp1E2D%clI*-`Qs_[a)(<%G_"&j$^8PF]KR>R\8*!#jI3"6L5L]K2P6!L3mYRg7Hs=,leu,1<'QBrglB!fV.gmKRncUY4KQ47lV,$Odc%(h-F6@ET8VSpmnu,B%J-GCt2WTpdg@22HJQkrXBi#afWR#TlH%mD8:NL_NBWI8dY7aIUmN]kt@JCJX98q*YDa3UPduH"</OEH,#tZB!Fu[Z=5'tFjbH,@B%L[=-<>@=#KKY4a;4sd<#_aMc`1)hTtF6C*[OP;:4_;RPGU?ibDp3FB`Bdt(LGj^i*o[98ibR:4P1l039h[/#Q<d3DR\VrWa1#22;%h]bi.1-jJnNW'pmKf'Kh<k51%H23tt3JA!LB-C]K;\N>Q54HM1_G!&XPPXo\54BudJu4l`r'h@ah>*&9lFBB9%`crPibu?-(JQ*b%?sp2a#%-U!fI`a06MDX7*\CYbXbeg/Z>P]'SGKE&7TSp*HV4$[V_8#D`7op^NIn_*IJ&*.,][\*::N9r_d%`dZTcu^U,UZM48j&e%'9\?:YuEY&o1+D1%a)e<XLnK"B73DpY^,8PqRbZc_d&NZ-E0G]\1J-G@B%IJ4arHclsitdRfcae8H`s9)0&9p^70,\r/o"HLN&Ou%baWUOccs;lYM45f7MY'_K08`;F"(]L#,$J?R*.9ml>qBShH[F50@(U`m$MU]Od:s9A)h\s<OY>[Bb-ou@oJk4j]L:Cb,2fn)]IFK%4l7LHik98)mQK]a^6e\DCa=kbh[''jP45)-Plir@FNmlsUVDB2L[nT;/*69iBnc/<mMRZ5c%^(Lo.A22+2e\5LS='E;kG#H64ct\%A9q=n0mH)^brB+sOfj1XK<8a5f&sn_PXE'$LWBI&7kA]*4jOs9f8f-P2]0\$2YAX&2L)g7F=t1CWSHqiD<7B;BKaa'U2DY!I9^Q/%oecqg=lFHYCEVN_IShQ@G/B\.dJ:k:CTSNaAKRE<]H+ZH9ThO7@Ag2M*3f+[rdOM\[bC7ST?gjA?uMMh5r2fN:/cjX5q@U1&h=Y/%gL2T.\CTg"$"u_(38`qkiS'T;RT\sW6dZa_V.?#XMdV12ki5k$dWuB%#.<l0^(Ru1:TZTal]Jo-hdEK&TCjd!AF*mrgCZt5BLXO"%,k4!,oq:K-0[(IEAKRE<HpLWZF6?!V29OVg,41!@Q%#=0BUdVoQdk!gX1&qg4uW'WY..9BKh3OjhR*Hg25>!jqn_l_M79Za;S1gO%./DNF`b=gKXB(I;GFOS&M75V5*a3R!oZ3_JO;hl@ij1PO_D8.6NuAVe`H$PMnHg_.+l$]/)>Yq>ZB%_.De#G5,*+3<1ra:N!A!6d%Z^PJto+kQtpoJD%K6PP%>S5S2LdiH#i(i3`X_/sk@,5<@qq0E=Fr1m2N'FV'"mID_+\iY(*jB<*T<(6?cH:CN<;*Srchf"'JTE'l%%5ZGm*dE>74CX4(&L2>]26WCi4uW))8*LDgW2*_&oE`V]XKf"N#[LIqOVG1A%bCEVc[/+4gqc;`G+##NDq+1,a%X5m"t:CKa;EV_%<o$09osm*DW"/IWmd)Z<A6n\24jR5gq?dk7p$OMuI;J1iH_=5L7iAp^7-Tq=JsQ&u:=r8>mNemJ_d`1.ls-0DdaeJ&$<t3K#>Q<X%bX*o'*XacB+fhMbBb-ou@oJlk$KCf/cjKA'V/`r`!CM86j8JZ.@ETR]om*aR[Q`d2KM]m1m[,g$(Jl&tT!;8,c^W!a\\h8;Z)Q&r%`Ss*Z34AcU]/k!jj++7%7_)01Ygn]YqGt'.J$FD`b_J4%\K(ok4]=Ou4)D=bZbFsA+B#dh8'pqeHl]C-cuHpql,MtWKHiDmb!%`V%X_n.KPG'Sr58Nf8*SYSLr0bGO9l@2cNmIPc5*t#I+@N[-(R^,s8$#,Ip6L':K2D-DWK"%$,2G)_pJ"Pc&Y$!=K']+"V"aU_"kq!9%$md!^]"C7^<u9W*48Qn2;;CO0N$40G9.+AK4bg8'9mo2f?XoOqKRB4oG7:eQ*_^Rheh]`EFb_PYI+II$Jfo'Aj.],hG*F6V@:W(q%cPXOg:;^t1U$Q8fTA*k39/pf:F/)DX4q_pVmYcdM(Qg0#<+N\Y;"h/ncZ:5NreQ6]YY/JMARGuIk8D/8191WroFB8Mo3%:?NDmR>%^qNI$2>q19/pHSO4jVdQ(Q?R5\\h8;Z)Q%YJU9kZD=6+T'_cCXd'Rr6k1e8,CV7K<VQEL>DND5Tfsc8!YO@CEW>;`X/B#RmW78cG%]YdS:EN.,5JU:dh%D+HCF-02f=X2esH,br]+@Ce<pBF"<a/2$Z6j:?3Q*u>3mD,sn@58Vjk6Ep<g8(+h,=)Y8T678%_>(c1''l)?%&n>DQYDJla/1p.AW[#:o6+P%5Y!oG-81\PomYh:"FSu8$Oj>gA6Lt3X.]YW>AKRE<<jm+3/c*1%Kct(WpU8&XhD?"ImXb)?`4;c<%BggY@V?PXOTRFED5=qfW(S5-n@6S[V/SgN>Ed*2Jo3rP4L=b^gp*8]@$^9)3+.eH:k,7oGIB*a#)&o!]YaqkbcC_[V3aq?B=q'gQ%P^RB5>=10eY'VhA9"6f3cC)`)k8?Xc0]/';"'Z$W+.Lt"V\kU'+qGr'CWrbb7(:-%r.3-uEec64YsVf561N>%a@MffoT5?jOk@Ye%L-QO!_]3]D$tUNMqUSU`'/-s2Dl>S]8GYd@A$s4ZhTJ"lrB5n@O%k%8%N$_0];\'+i7U7BXQe0<)WGH>lk#D.D!G2g?60k\p</e.%M(<'M&u<i0L@>lh8U)*3'gg$_VDeHP")!S0'Saq7KWkFChi&EIa$i80OJT.k2eG')NJZ=]]eT4AVr7d'SU"WO.?%kEJ&WZJ;rg:)%K#If_>peS0kP$X&'!]RpQ9$40k.@'@6AeV>'.h.&W"(jA=_""nrU`S:^\mnc*fdf.mgmtV?iLUX*3Z[hZ]hUEd.:Y4Z8[A7J!45E%@.CHd%j5'9Pg*bN`@6>ih\)Z&"[&h&.Ig>GLfQ"QVk-2jD#"T5.T>!&(!F6K"R0*EfK&HUQP2haL*6h/Z2HmTBi3@/&S%i#A3kuE%M8`k,Rk3EX%N10i9Snl@fN9j$cCh8j/_R1rqGd\&oYluLAP.g95Vun'i\63D(759b(d`X06S,1[ON'X?:,khI+T!rCMJRKLjZoqd%L7*`QJPZJ^Z,YRYjI2EiJajn/:)_DtQ0"l$orU!D4Cp![huJ?7:.%M7WndS^#\[qW0rLn%@7_J<#(K$i;*u9%*l7k/AJLp?-jcKN%H\R:'W%Y$DJY=)Q+,u;HI(eU.`R1+<5TOY>*Urd#,iMrH#nn!]B$F.$=@9Z0X#rqa-,R<_Ca#$\@>pVnMh$0V/G/j;NuE1\;]A&/%=DGlAY0MJ"SI<lfe%F<N:jZi8YLf-$.i31T(_9R)eR.=*0Z1hXd%l=^(/mTqMd6)R']lRXY\Z%e8OA_"\G]L7S<D+J7glG(,nUob%NE-i!RMc0dAZH-:4s]U[TWm`o2*'l?#aSjeK?3krlt(\(U`R;MQ`gEohLAOTpu[VR0ebM<8YZtFm,n>P,siDB/\eKCDQ%1k/W.NV%afnY,Mj/^9=,`YKl_2)no(Z!fIerC1>lVk%r:-C#^\kiRJ,?:]qXW*2s7M^Cr;$r=rUR`'q:FN<r8Gu:r6)9NJ,/+Hs7DXbrpoCT%H2Z(@5Q(6@TE"J[hgYP#kPt4QIl6:e`..d8:Oht[J,A@-!s8gm;u~>%AI9_PrivateDataEnd